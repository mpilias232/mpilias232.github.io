{"version":3,"sources":["fields/MyUrlField.js","components/authProvider.js","views/clients.js","components/imageUploader.js","components/ImageDeleter.js","components/AttachmentsShow.js","views/dogs.js","views/Dashboard.js","components/Context.js","components/MyNotifis.js","components/MyAppbar.js","components/myMenu.js","components/MyLayout.js","components/printFunc.js","views/BookingView.js","views/allbookings.js","views/bookingToday.js","views/todayDaycare.js","views/todayGrooming.js","views/grooming.js","views/daycare.js","views/messenger/ConversationSearch/index.js","views/messenger/ConversationListItem/index.js","views/messenger/Toolbar/index.js","views/messenger/ToolbarButton/index.js","components/newCovoCreate/index.js","views/messenger/ConversationList/index.js","views/messenger/Compose/index.js","views/messenger/Message/index.js","components/TwilioHelper.js","views/messenger/MessageList/index.js","views/messenger/Messenger/index.js","components/muCustomRoutes.js","views/messenger.js","components/createAdminStore.js","views/payments.js","App.js","index.js"],"names":["makeStyles","link","textDecoration","icon","width","paddingLeft","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","messaging","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","getToken","a","checkAuth","token","ya","getList","haha","pagination","page","perPage","list","getTWToken","axios","require","data","JSON","stringify","method","url","headers","then","response","catch","error","console","log","getAttchaments","dogId","full","storage","links","storageRef","ref","listRef","child","listAll","items","i","getDownloadURL","push","ifAttchaments","prefixes","map","location","path_","split","UploadAttach","len","file","Len","put","window","moment","ClientView","props","filterTypes","Object","assign","ReactDataGrid","defaultProps","dogs","type","emptyValue","operators","name","fn","value","filterValue","dog_name","toLowerCase","indexOf","columns","header","defaultWidth","render","href","id","style","paddingRight","gridStyle","minHeight","defaultFilterValue","operator","create","event","rows","state","even","update","index","findIndex","setState","selected","filter","length","clients","Promise","all","client","getManyReference","dog","clientsWDogs","this","total","subs","collection","onSnapshot","docChanges","forEach","change","doc","Title","title","Button","label","onClick","keys","EditButton","basePath","record","values","idProperty","dataSource","onSelectionChange","select","enableFiltering","multiSelect","checkboxColumn","React","PostTitle","UserCreate","Create","SimpleForm","TextInput","source","UserEdit","Edit","Imageuploader","Dialog","open","DialogTitle","DialogContent","withIcon","buttonText","onChange","onDrop","imgExtension","withPreview","DialogActions","onCancel","onPicSend","ImageDeleter","Select","labelId","Array","MenuItem","AttachmentsShow","useState","setUrl","setOpen","open1","setOpen1","setonDrop","fetchData","Images","img","src","useEffect","images","onSend","DogView","filterEditor","StringFilter","Chip","color","backgroundColor","BoolFilter","htmlColor","textAlign","verticalAlign","DateFilter","SelectFilter","filterEditorProps","multiple","wrapMultiple","c","attachments","owner","DogEdit","TabbedForm","FormTab","ReferenceInput","filterToQuery","searchText","reference","AutocompleteInput","optionText","SelectInput","choices","BooleanInput","options","checkedIcon","DateInput","format","check","DogCreate","Card","CardHeader","CardContent","NotificationContext","createContext","ContextProvider","Consumer","notifications","setNotifications","notifi","notif","removeNotif","removeAllMessNotif","convoItem","sid","children","Provider","Component","Notifis","useContext","anchorEl","setAnchorEl","history","useHistory","Badge","height","badgeContent","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","onClose","item","ListItemIcon","fontSize","message","disabled","useStyles","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","className","theme","root","maxWidth","palette","background","paper","nested","spacing","NestedList","onMenuClick","logout","open2","setOpen2","useSelector","getResources","List","component","DashboardMenuItem","sidebarIsOpen","MenuItemLink","to","primaryText","leftIcon","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MyLayout","Layout","menu","appBar","dateFormat","DaycareToPrint","sort","b","Date","start","booking","client_ref","instagram","breed","today","dogName","PureComponent","GroomingPrint","service","addOns","BookingView","onEditComplete","columnId","rowIndex","nrows","checkedIn","setRows","getService","category","getCategory","Set","editable","editor","BoolEditor","placeholder","cellProps","cellDOMProps","onMouseEnter","NotificationManager","success","alert","handlePrintClick","handlePrintClose","serviceFilter","content","componentRef","handlePrint","display","el","componentRef1","ConversationSearch","searchFilterFunction","target","ConversationListItem","shave","photo","text","unreadCount","Toolbar","leftItems","rightItems","ToolbarButton","NewConvoCreate","allCust","setAllCust","allCustHolder","setAllCustHolder","setTotal","setSearchText","all_clients","handleClick","search","activeConvos","phone","setActiveConvo","visible","createNewConvo","newData","toUpperCase","itemData","textData","itemSize","itemCount","Conversations","ConversationList","conversations","setConversations","conversationHolder","setConverrsationHolder","newConvoVisible","setNewConvoVisible","getConversations","notify","conversation","channelState","uniqueName","info","refreshConvoList","useCallback","processChannels","paginator","hasNextPage","nextPage","nextPaginator","concat","getSubscribedConversations","clientconvo","result","friendlyName","dateUpdated","lastMessage","dateCreated","lastReadMessageIndex","newConversations","refreshToken","updateToken","getClient","callback","Client","addListener","setClient","_eventsCount","createConvo","number","createConversation","twiConvo","addNonChatParticipant","add","setactiveConvo","convos","obj","Compose","dialog","setDialog","spellCheck","minRows","Message","isMine","startsSequence","endsSequence","showTimestamp","searchPattern","RegExp","friendlyTimestamp","timestamp","join","test","thumbnailWidth","thumbnailHeight","SendPicToServ","readFile","resolve","reject","fr","FileReader","onload","x","onerrror","readAsDataURL","base64","replace","MessageList","messages","setMessages","newMessage","setNewMessage","convo","setConvo","messagesEndRef","useRef","selectedFile","setSelectedFile","sendMessage","current","scrollIntoView","behavior","scrollToBottom","getMessages","tempMessages","activeConvo","getConversationBySid","_events","messageAdded","advanceLastReadMessageIndex","author","body","removeListener","messageCount","previous","next","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","renderMessages","Messenger","exact","path","date","substring","reducer","combineReducers","admin","adminReducer","router","connectRouter","saga","rootSaga","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","action","USER_LOGOUT","undefined","applyMiddleware","routerMiddleware","run","PaymentList","Datagrid","rowClick","TextField","NumberField","EmailField","createHashHistory","App","setTokenFound","vapidKey","currentToken","err","getFCMToken","payload","notification","onMessage","payloaf","createAdminStore","utils","Utils","Admin","disableTelemetry","layout","customRoutes","muCustomRoutes","dashboard","Dashboard","Resource","PetsIcon","edit","EditGuesser","ListGuesser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.028cba55.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;\n","import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n\n} from 'react-admin-firebase';\n\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { NotificationManager } from 'react-notifications';\n\nconst config = {\n  apiKey: \"AIzaSyAUqOhdFbfRiCRqSzxKpYeTppBGsHfAAug\",\n  authDomain: \"admin-a4a00.firebaseapp.com\",\n  databaseURL: \"https://admin-a4a00-default-rtdb.firebaseio.com\",\n  projectId: \"admin-a4a00\",\n  storageBucket: \"admin-a4a00.appspot.com\",\n  messagingSenderId: \"328849622350\",\n  appId: \"1:328849622350:web:cf2cd21a20f108e7aeca1f\",\n  measurementId: \"G-YKBC2Q28P1\"\n\n\n};\nfirebase.initializeApp(config);\n\n\nconst messaging = firebase.messaging();\n\n\nexport const getFCMToken = (setTokenFound) => {\n\n  return messaging.getToken({ vapidKey: 'BGXh163BEaceHzjq8oIfgZfCnHEze0njY12K3FFlv8N0lLtNYTsKWpE0L7darB0Yiqzt2P_6VCcuHnSvo6beecs' }).then((currentToken) => {\n\n    if (currentToken) {\n\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true);\n      // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false);\n\n      // shows on the UI that permission is required \n    }\n  }).catch((err) => {\n    console.log('An error occurred while retrieving token. ', err);\n    NotificationManager.error('Notifications not enabled!', 'Allow notifications and refresh page', 500000, () => {\n      alert('callback');\n    });\n    // catch error while creating client token\n  });\n}\n\nexport const onMessageReceved = (callback) => {\n\n  messaging.onMessage(payloaf => {\n    callback(payloaf)\n  })\n}\n\nconst options = {};\n\nexport const dataProvider = FirebaseDataProvider(config, options);\n\nexport const authProvider = FirebaseAuthProvider(config);\n\nexport const getToken = async () => {\n\n  let token = await authProvider.checkAuth()\n  return token.ya\n\n}\n\nexport const getList = async (haha) => {\n  let list = await dataProvider.getList(haha, { pagination: { page: 1, perPage: 10000 }, })\n  return list\n}\n\nexport const getTWToken = async () => {\n  var axios = require('axios');\n  let token = await getToken()\n  var data = JSON.stringify({\n    \"token\": token\n  });\n\n  var config = {\n    method: 'post',\n    url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/getToken',\n    headers: {\n      'Authorization': 'Basic MkMzRDBFMkMtODQ3Qi00OEI4LUI1NTItOENCQTlDQkEzREQ4OjgwOEFGMDlBLTBFODgtNDU3Mi04QzJGLUUwOEIwOEE4N0RFMQ==',\n      'Content-Type': 'application/json'\n    },\n    data: data\n  };\n\n  return axios(config)\n    .then(function (response) {\n\n      return response.data;\n    })\n    .catch(function (error) {\n\n      console.log(error);\n    });\n\n}\n\nexport const getAttchaments = async (dogId,full) => {\n\n\n  var storage = firebase.storage();\n  var links = []\n  var storageRef = storage.ref();\n  try{\n  var listRef = storageRef.child(`attachments/${dogId}`);\n  var list = await listRef.listAll()\n  for (let i of list.items) {\n    let url = await i.getDownloadURL()\n    links.push(url)\n  }}\n  catch{\n    \n    return false\n  }\n\n  return links\n\n}\n\nexport const ifAttchaments = async () => {\n\n\n  var storage = firebase.storage();\n\n  var storageRef = storage.ref();\n \n  var listRef = storageRef.child(`attachments`);\n  var list = await listRef.listAll()\n  list = list.prefixes.map(i=>{return i.location.path_.split('/')[1]})\n\n  return list\n\n\n\n}\n\nexport const UploadAttach = async (dogId, len, file) => {\n\n  var storage = firebase.storage();\n  var storageRef = storage.ref();\n  let Len = len\n  try{\n \n   for(let i of file){  \n    let listRef = storageRef.child(`attachments/${dogId}/file${Len}.jpg`);\n    Len++\n     await listRef.put(i)}\n\n  \n  }\n  catch (e){\n    \n\n  }\n\n\n}\n\n\n","import * as React from \"react\";\nimport { List, Datagrid, Edit, Pagination, Title, EditButton, SimpleList, TextField, Button, EmailField, TextInput, Create, SimpleForm, changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n\nimport * as firebase from \"firebase/app\";\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\n\nexport default class ClientView extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n            selected: {},\n            filter: false,\n            rows: [],\n            length: null\n\n\n        }\n\n\n    }\n\n    filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        dogs: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n              {\n                name:'contains',\n                fn: ({ value, filterValue, data }) => {\n                 debugger\n                    return !filterValue ?\n                    true :\n                 value && value.map(i=> {if (i.dog_name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1){return true}})[0];\n                }\n                 }   ],\n        }\n          });\n\n\n    columns = [\n        {\n            name: 'name', header: 'Name', defaultWidth: 200,\n        },\n        {\n            name: 'email', header: 'E-mail', defaultWidth: 280, render: ({ value }) => {\n\n                return (<a href={\"mailto:\" + value} >{value}</a>)\n            }\n        },\n        {\n            name: 'phone', header: 'Phone', defaultWidth: 150,\n        },\n        {\n            name: 'dog', header: 'Dog', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n                    return <>\n                        { value.map(i => {\n\n                            return (<a href={'#dogs/' + i.id} ><span style={{ paddingRight: '5px' }}>{i.dog_name}</span></a>)\n\n                        })}\n                    </>\n                }\n                catch { return }\n\n\n            }\n        },\n        {\n            name: 'instagram', header: 'Instagram', defaultWidth: 150,\n        },\n\n    ];\n\n    gridStyle = { minHeight: 550 };\n\n    defaultFilterValue = [\n\n\n        { name: 'phone', operator: 'contains', type: 'string', value: '' },\n        { name: 'email', operator: 'contains', type: 'string', value: '' },\n        { name: 'name', operator: 'contains', type: 'string', value: '' },\n        {name: 'dog', operator: 'contains', type: 'dogs', value: ''}, \n        { name: 'instagram', operator: 'contains', type: 'string', value: '' },\n\n    ];\n\n\n\n\n    async componentDidMount() {\n        let clients = await dataProvider.getList('clients', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n\n\n        let clientsWDogs = await Promise.all(clients.data.map(async client => {\n            let dog = await dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": client.id }, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n            client.dog = dog.data\n\n            return client\n\n        }))\n\n        this.setState({ rows: clientsWDogs, length: clients.total })\n\n\n\n        this.subs = firebase.firestore().collection('clients').onSnapshot(a => {\n\n            if (a.docChanges().length !== this.state.length) {\n                a.docChanges().forEach(change => {\n                    if (change.type === 'added'){\n                        this.create(change.doc)\n                    }\n\n\n                   else if (change.type === 'modified') {\n                        this.update(change.doc)\n                    }\n\n\n                    \n                })\n            }\n\n\n\n        })\n\n    }\n    create =(event) => {\n        let rows = this.state.rows\n        let id = event.id\n        let even = event.data()\n        even.id = id\n        rows.push(even)\n    }\n\n    update = (event) => {\n        let rows = this.state.rows\n        debugger\n        let id = event.id\n        let index = this.state.rows.findIndex(i => i.id === id)\n        rows[index] = event.data()\n        rows[index].id = id\n  \n        this.setState({ rows: rows })\n    }\n\n    componentWillUnmount() {\n\n        this.subs()\n    }\n\n\n\n\n\n\n    render() {\n        return (\n            <>\n                <Title title='Clients' />\n                <div>\n                    <Button\n                        label=\"Filters\"\n                        onClick={() => this.setState({ filter: !this.state.filter })}>\n                        <FilterListIcon />\n                    </Button>\n                    {Object.keys(this.state.selected).length === 1 && <EditButton\n                        basePath='/clients' label='Edit' record={Object.values(this.state.selected)[0]}\n                    />}\n                    {Object.keys(this.state.selected).length !== 0 && <Button\n                        label=\"Message Client\">\n                        <SendIcon />\n                    </Button>}\n                </div>\n                <ReactDataGrid\n                    idProperty=\"id\"\n                    columns={this.columns}\n                    dataSource={this.state.rows}\n                    filterTypes={this.filterTypes}\n                    style={this.gridStyle}\n                    defaultFilterValue={this.defaultFilterValue}\n                    onSelectionChange={select => this.setState({ selected: select.selected })}\n                    enableFiltering={this.state.filter}\n                    multiSelect\n                    checkboxColumn\n                />\n            </>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n    return <span>Client {record ? `\"${record.name}\"` : ''}</span>;\n}\n\nexport const UserCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const UserEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Edit>\n);\n\n\n\n/*\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\n\nexport const UserList = props =>{\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n   return (\n    <List  perPage={50} {...props} pagination={<PostPagination />} >{isSmall ? (\n        <SimpleList\n            primaryText={record => record.name}\n            secondaryText={record => record.email}\n            tertiaryText={record => record.phone}\n        />\n    ) : (\n\n\n    <CustomizableDatagrid>\n            <TextField source=\"name\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"instagram\" />\n         <EditButton/>\n         </CustomizableDatagrid>\n\n       )}\n    </List>\n);}\n*/\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageUploader from 'react-images-upload';\nimport { useState, Fragment } from 'react';\nimport {\n  Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nconst Imageuploader = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Upload Pictures</DialogTitle>\n\n                <DialogContent>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={props.onDrop}\n                        imgExtension={['.jpg', '.jpeg', '.png']}\n                        withPreview\n                    />\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        onClick={()=>{props.onPicSend();props.onCancel()}}\n                        label=\"Send\"\n                    >\n                        <SendIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default Imageuploader","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport Lightbox from 'react-lightbox-component';\nimport { useState, Fragment } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ImageDeleter = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Delete Pictures</DialogTitle>\n\n                <DialogContent>\n\n                    <Select\n                        labelId=\"demo-simple-select-disabled-label\"\n                        id=\"demo-simple-select-disabled\"\n                    // value={age}\n                    //  onChange={handleChange}\n                    >\n                        {Array(props.length).map(i=>{return  <MenuItem value={i}>{`File${i}`}</MenuItem>})}\n                    </Select>\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        //   onClick={()=>{props.onPicDelete();props.onCancel()}}\n                        label=\"Delete\"\n                    >\n                        <DeleteOutlineIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default ImageDeleter","import React from 'react';\nimport Lightbox from 'react-lightbox-component';\nimport { getAttchaments, UploadAttach } from './authProvider'\nimport { Button } from 'react-admin';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Imageuploader from '../components/imageUploader'\nimport ImageDeleter from '../components/ImageDeleter'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\n\nexport default function AttachmentsShow(props) {\n\n    const [url, setUrl] = React.useState([])\n    const [open, setOpen] = React.useState(false)\n    const [open1, setOpen1] = React.useState(false)\n    const [onDrop, setonDrop] = React.useState(null)\n    const [dlete, setDelete] = React.useState(null)\n\n    async function onSend(event) {\n        await UploadAttach(event, url.length, onDrop)\n        await fetchData()\n        \n    }\n    async function fetchData() {\n        let Images = []\n        let url = await getAttchaments(props.record.id, true)\n\n\n        url.forEach(i => {\n\n            let img = {}\n            img.src = i\n            Images.push(img)\n        })\n\n        setUrl(Images)\n    }\n\n    React.useEffect(\n        () => {\n    \n            fetchData()\n        }, [])\n\n    return (<>\n        <Button\n            label=\"Upload\"\n            onClick={() => setOpen(!open)}>\n            <PublishIcon />\n        </Button>\n        {url.length !== 0 && <Button\n            label=\"Delete Picture\"\n            onClick={() => setOpen1(!open1)}\n        >\n            <DeleteIcon />\n        </Button>}\n        <div>\n            {url !== [] && <Lightbox images={url} />}\n        </div>\n        <Imageuploader onDrop={(event) => { setonDrop(event) }} onPicSend={() => onSend(props.record.id)} open={open} onCancel={() => { setOpen(!open) }} />\n        <ImageDeleter open={open1} onCancel={() => setOpen1(!open1)} length={url.length} />\n    </>\n    );\n}\n","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField,TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField\n  \n} from 'react-admin';\nimport {   Title,  Button,  changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport StringFilter from \"@inovua/reactdatagrid-community/StringFilter\"\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentsShow from '../components/AttachmentsShow'\nimport {ifAttchaments} from '../components/authProvider'\n\n\n\n\n\nimport * as firebase from \"firebase/app\";\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default class DogView extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n            selected: {},\n            filter: false,\n            rows: [],\n            length: null\n\n\n        }\n\n\n\n    }\n\n\n    filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        client: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n              {\n                name:'contains',\n                fn: ({ value, filterValue, data }) => {\n                             debugger\n                    return !filterValue ?\n                    true :\n                 value && value.name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1;\n                }\n                 }  \n         ],\n        }\n          });\n\n      \n    columns = [\n        {\n            name: 'dog_name', header: 'Name', defaultWidth: 200,\n        },\n        {\n            name: 'client', header: 'Client', defaultWidth: 200, filterEditor: StringFilter,render: ({ value, data }) => {\n                try {\n                    return <>\n                     \n\n                         <a href={'#clients/' + value.id} ><span style={{ paddingRight: '5px' }}>{value.name}</span></a>\n\n                        \n                    </>\n                }\n                catch { return }\n\n\n            },\n            \n        },\n        {\n            name: 'breed', header: 'Breed', defaultWidth: 200,  render:({value})=>{ \n             return  value &&  (<Chip color='primary' style={{ backgroundColor: 'orange' }} label={value} key={value} />)}\n        },\n        {\n            name: 'vet_email', header: 'Vet Email', defaultWidth: 200,\n        },\n        {\n            name: 'vet', header: 'Vet', defaultWidth: 200\n        },\n        {\n            name: 'DaycareAttendee', header: 'Daycare Attendee', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='green' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'dogdob', header: 'DOB',filterEditor:DateFilter, defaultWidth: 200,\n        },\n        {\n            name: 'comments', header: 'Comments', defaultWidth: 200,\n        },\n        {\n            name: 'sex', header: 'Sex', defaultWidth: 100, filterEditor: SelectFilter,\n            filterEditorProps: {\n              multiple: true,\n              wrapMultiple: false,\n              dataSource: [\"Male\", 'Female'].map(c => {\n                return { id: c, label: c}\n              }),\n            }\n        },\n        {\n            name: 'desexed', header: 'Desexed', defaultWidth: 100, render:({value}) =>{\n                return value && (< DoneIcon htmlColor='pink' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            },  filterEditor:BoolFilter\n        },\n        {\n            name: 'PassedTemperamentTrial', header: 'Passed Temperament Trial', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='blue' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'kcDue', header: 'KC Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n        {\n            name: 'c3Due', header: 'C3 Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n        {\n            name: 'attachments', header: 'Attachments', defaultWidth: 130,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='red' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n\n\n\n\n\n    ];\n\n    gridStyle = { minHeight: 550 };\n\n  \n    defaultFilterValue = [\n\n\n\n        { name: 'dog_name', operator: 'contains', type: 'string', value: '' },\n        { name: 'client', operator: 'contains', type: 'client', value: '' },\n        { name: 'breed', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet_email', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet', operator: 'contains', type: 'string', value: '' },\n        { name: 'DaycareAttendee', operator: 'eq', type: 'boolean', value: null },\n        { name: 'dogdob', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'comments', operator: 'contains', type: 'string', value: '' },\n        { name: 'sex', operator: 'inlist', type: 'select', value: null },\n        { name: 'desexed', operator: 'eq', type: 'boolean', value: null },\n        { name: 'PassedTemperamentTrial', operator: 'eq', type: 'boolean', value: null },\n        { name: 'kcDue', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'c3Due', operator: 'beforeOrOn', type: 'date', value: ''},\n    ];\n\n\n\n\n    async componentDidMount() {\n        \n        let attachments = await ifAttchaments()\n\n        let dogs =  await dataProvider.getList('dogs', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n\n\n          Promise.all(dogs.data.map(async dog => {\n            \n            let client = await  dataProvider.getManyReference('clients', { \"filter\": { \"id\": dog.owner }, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n            dog.client = client.data[0]\n            \n        \n            dog.attachments = attachments.indexOf(dog.id) >-1 ? true : false\n            return \n\n        }))\n\n        \n\n        this.setState({ rows: dogs.data, length: dogs.total })\n\n\n    }\n\n\n\n\n    componentWillUnmount() {\n\n    //    this.subs()\n    }\n\n\n\n\n\n\n    render() {\n        return (\n            <>\n                <Title title='Dogs' />\n                <div>\n                    <Button\n                        label=\"Filters\"\n                        onClick={() => this.setState({ filter: !this.state.filter })}>\n                        <FilterListIcon />\n                    </Button>\n                    {Object.keys(this.state.selected).length === 1 && <EditButton\n                        basePath='/dogs' label='Edit' record={Object.values(this.state.selected)[0]}\n                    />}\n                    {Object.keys(this.state.selected).length !== 0 && <Button\n                        label=\"Message Client\">\n                        <SendIcon />\n                    </Button>}\n                </div>\n                <ReactDataGrid\n                    idProperty=\"id\"\n                    columns={this.columns}\n                    filterTypes={this.filterTypes}\n                    dataSource={this.state.rows}\n                    style={this.gridStyle}\n                    defaultFilterValue={this.defaultFilterValue}\n                    onSelectionChange={select => this.setState({ selected: select.selected })}\n                    enableFiltering={this.state.filter}\n                    multiSelect\n                    checkboxColumn\n                />\n            </>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n       return <span>Dog {record ? `\"${record.dog_name}\"` : ''}</span>;\n    }\n\nexport const DogEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n        <TextInput source=\"dog_name\" label='Dog Name' />\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n     \n          <SelectInput source='sex'  choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/><BooleanInput\nsource=\"desexed\"\noptions={{\n    checkedIcon: <FavoriteIcon />,\n}}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n<FormTab label=\"Attachments\">\n<AttachmentsShow check/>\n</FormTab>\n</TabbedForm>\n    </Edit>\n);\n\n\n\nexport const DogCreate = props => (\n      <Create {...props}>\n                 <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n           <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n            \n               <TextInput source=\"dog_name\" label='Dog Name' />\n               <TextInput  source=\"breed\" label='Breed' />\n               <SelectInput source='sex' choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/>\n<BooleanInput\n    source=\"desexed\"\n    options={{\n        checkedIcon: <FavoriteIcon />,\n    }}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n       </Create>\n    \n    );\n\n\n\n\n    /*\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\nconst PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Owner\" source=\"owner\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\n\n\nconst MaleFemaleFilter = () => (\n    <FilterList label=\"Sex\" icon={<AccessTimeIcon />}>\n\n    \n        <FilterListItem\n            label=\"Male\"\n            value={{\n                sex: \"M\"\n            }}\n        />\n         <FilterListItem\n            label=\"Female\"\n            value={{\n               sex: 'F'\n  \n            }}\n        />\n        <FilterListItem\n            label=\"Desexed\"\n            value={{\n               desexed: true\n  \n            }}\n        />\n    </FilterList>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n        <FilterLiveSearch source=\"dog_name\" />\n\n            <MaleFemaleFilter />\n        </CardContent>\n    </Card>\n);\n\nexport const DogList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} perPage={50} pagination={<PostPagination />}  bulkActionButtons={<DogBulk />}  {...props}>\n         \n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.dog_name}\n                    secondaryText={record =>record.Client}\n                />\n            ) : (\n                \n                <CustomizableDatagrid>\n                      <TextField source=\"dog_name\" label='Dog Name' />\n                    <ReferenceField label=\"Client\" source=\"owner\" reference=\"clients\"  >\n                        <TextField source=\"name\"  />\n                    </ReferenceField>\n                    <ReferenceField label=\"Breed\" source='breed' reference=\"dog_breeds\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <SelectField source=\"sex\" choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} />\n                    <BooleanField source=\"desexed\" label='Desexed' />\n                    <EmailField source=\"vet_email\" label='Vet Email' />\n                    <TextField source=\"vet\" label='Vet' />\n                    <DateField source=\"kc_due\" label='KC Due' />\n                    <DateField source=\"c3_due\" label='C3 Due' />\n                    <DateField source=\"c5_due\" label='C5 Due' />\n                    <EditButton />\n                    </CustomizableDatagrid>\n \n            )}\n    \n        </List>\n    );\n}\n*/","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","import React from \"react\";\n\n\nconst NotificationContext = React.createContext();\n\nexport const ContextConsumer = NotificationContext.Consumer\n\n\n\nclass ContextProvider extends React.Component {\n    state = {\n        notifications: []\n    }\n\n\n    setNotifications = (notifi) => {\n        let notif = this.state.notifications\n        notif.push(notifi)\n        this.setState({ notifications: notif })\n    }\n\n    removeNotif = (notif) => {\n        this.setState({notifications: this.state.notifications.filter(i => i !== notif)})\n    }\n\n    removeAllMessNotif = (notif) => {\n        \n        this.setState({notifications: this.state.notifications.filter(i => i.convoItem.sid !== notif.sid)})\n    }\n\n    render() {\n        const { children } = this.props\n        const { notifications } = this.state\n        const { setNotifications, removeNotif, removeAllMessNotif } = this\n\n        return (\n            <NotificationContext.Provider\n                value={{\n                    notifications, setNotifications, removeNotif,\n                    removeAllMessNotif\n                }}\n            >\n                {children}\n            </NotificationContext.Provider>\n        );\n\n    }\n\n\n}\n\n\nexport { ContextProvider }\nexport default NotificationContext","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationContext from './Context'\nimport EmailIcon from '@material-ui/icons/Email';\nimport ContactlessIcon from '@material-ui/icons/Contactless';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Notifis(props) {\n\n  const { notifications,  removeNotif } = React.useContext(NotificationContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const history = useHistory();\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onItemClick = (item) => {\n\n    removeNotif(item)\n    history.push('/messenger');\n\n  }\n\n  const IconSelector = (item) => {\n    if (item.type === 'payment') {\n      return (<ListItemIcon >\n        <ContactlessIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n    else if (item.type === 'message') {\n      return (<ListItemIcon >\n        <EmailIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n  }\n\n\n  return (\n    <div>\n      <Badge style={{\n        height: \"25px\",\n        width: \"45px\"\n      }} badgeContent={notifications.length} color=\"error\">\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <NotificationsIcon htmlColor='white' />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >{notifications.length > 0 ? notifications.map(i => <MenuItem onClick={() => { onItemClick(i) }}>{IconSelector(i)}{i.message}</MenuItem>) :\n          <MenuItem disabled>All Caught Up</MenuItem>\n          }\n\n        </Menu>\n      </Badge>\n    </div>\n  );\n}\n\n ","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notifis from './MyNotifis'\n\n\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\n\nconst MyAppBar = props => {\n  const classes = useStyles()\n\n\n  return (\n\n  <AppBar {...props}>\n\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n\n      <span className={classes.spacer} />\n      <Notifis />\n\n    </AppBar>\n\n  )\n};\n\nexport default MyAppBar;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DashboardMenuItem, MenuItemLink, getResources } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MessageIcon from '@material-ui/icons/Message';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\n\n\n\nfunction NestedList({ onMenuClick, logout }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const resources = useSelector(getResources);\n\n  const linkBookingrange = {\n    pathname: \"/bookings\",\n    hash: \"bookingsrange\"\n  }\n\n\n  return (\n\n    <List\n      component=\"nav\"\n      className={classes.root}\n    >\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <MenuItemLink\n        key='clients'\n        to='/clients'\n        primaryText='Clients'\n        leftIcon={\n\n          <PeopleIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <PetsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dogs\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dogs'\n          to='/dogs'\n          primaryText='All Dogs'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n  \n      </Collapse>\n      <ListItem button onClick={handleClick1}>\n        <ListItemIcon>\n          <CalendarTodayIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Bookings\" />\n        {open1 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookings'\n          to='/bookings'\n          primaryText='All Bookings'\n          leftIcon={\n\n            <EventNoteIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookingstoday'\n          to='/bookingstoday'\n\n          primaryText='Bookings Today'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaydaycare'\n          to='/todaydaycare'\n\n          primaryText='Today Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaygrooming'\n          to='/todaygrooming'\n\n          primaryText='Today Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='grooming'\n          to='/grooming'\n\n          primaryText='Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='daycare'\n          to='/daycare'\n\n          primaryText='Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='services'\n          to='/services'\n          primaryText='Services'\n          leftIcon={\n\n            <AssignmentIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick2}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Payments\" />\n        {open2 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='payments'\n          to='/payments'\n          primaryText='All Payments'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n\n      </Collapse>\n      <MenuItemLink\n        key='messenger'\n        to='/messenger'\n        primaryText='Messenger'\n        leftIcon={\n\n          <MessageIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n    </List>\n  );\n}\n\nexport { NestedList }\n\n  ;","import { Layout } from 'react-admin';\nimport MyAppBar from './MyAppbar'\nimport  {NestedList} from './myMenu';\n\n\nconst MyLayout = props => <Layout\n    {...props}\n\n    menu={NestedList}\n    appBar={MyAppBar}\n/>;\n\nexport default MyLayout;","import React from 'react';\nimport './printStyle.css'\nimport moment from 'moment';\nimport { dataProvider } from './authProvider'\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport class DaycareToPrint extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rows: []\n\n\n        }\n    }\n    async componentDidMount() {\n\n        if (this.props.selected) {\n            let list = this.props.selected\n            \n            list.sort((a, b) => new Date(a.start) - new Date (b.start))\n          await  Promise.all(list.map(async booking => {\n            \n                let instagram = await  dataProvider.getManyReference('clients', { \"filter\": { \"id\": booking.client_ref || ''}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.instagram = instagram.data[0].instagram? instagram.data[0].instagram : null\n                \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n\n                return booking\n    \n            }))\n\n            this.setState({ rows: list })\n        }\n\n        else {\n            let today = new Date()\n            \n            let list = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'category': 'daycare', 'start': dateFormat(today, \"yyyy-mm-dd\") } })\n            list.data.sort((a, b) => new Date(a.start) - new Date (b.start))\n            list = list.data\n          await  Promise.all(list.map(async booking => {\n            \n                let instagram = await  dataProvider.getManyReference('clients', { \"filter\": { \"id\": booking.client_ref || ''}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.instagram = instagram.data[0].instagram? instagram.data[0].instagram : null\n                \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n                \n                return booking\n    \n            }))\n            \n\n            this.setState({ rows: list })\n            \n        }\n\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h1>Daycare Attendance List</h1>\n\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Client</th>\n                        <th>Dog</th>\n                        <th>Breed</th>\n                        <th>Instagram</th>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.state.rows).length > 0 && Object.values(this.state.rows).map(i => {\n                            return (\n                                <tr>\n                                    <td>{moment(i.start).format('hh:mm A')}</td>\n                                    <td>{i.name}</td>\n                                    <td>{i.dogName}</td>\n                                    <td>{i.breed}</td>\n                                    <td>{i.instagram}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n\n\nexport class GroomingPrint extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rows: []\n\n\n        }\n    }\n\n async   componentDidMount() {\n        if (this.props.selected) {\n            let list = this.props.selected\n            \n            list.sort((a, b) => new Date(a.start) - new Date (b.start))\n          await  Promise.all(list.map(async booking => {\n  \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n\n                return booking\n    \n            }))\n\n            this.setState({ rows: list })\n        }\n\n        else {\n            let today = new Date()\n            \n            let list = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'category': 'stylist', 'start': dateFormat(today, \"yyyy-mm-dd\") } })\n            list.data.sort((a, b) => new Date(a.start) - new Date (b.start))\n            list = list.data\n          await  Promise.all(list.map(async booking => {\n            \n       \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n                \n                return booking\n    \n            }))\n            \n\n            this.setState({ rows: list })\n            \n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <h1>Grooming Attendance List</h1>\n\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Client</th>\n                        <th>Dog</th>\n                        <th>Breed</th>\n                        <th>Service</th>\n                        <th>AddOns</th>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.state.rows).length > 0 && Object.values(this.state.rows).map(i => {\n                            return (\n                                <tr>\n                                    <td>{moment(i.start).format('hh:mm A')}</td>\n                                    <td>{i.name}</td>\n                                    <td>{i.dogName}</td>\n                                    <td>{i.breed}</td>\n                                    <td>{i.service}</td>\n                                    <td>{i.addOns.map(i=> { return <>{i}<br /></> })}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport {\n  EditButton,\n  Button\n} from 'react-admin';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Title } from 'react-admin';\nimport BoolEditor from '@inovua/reactdatagrid-community/BoolEditor'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport DoneIcon from '@material-ui/icons/Done';\nimport PrintIcon from '@material-ui/icons/Print';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReactToPrint, { PrintContextConsumer } from 'react-to-print';\nimport { DaycareToPrint, GroomingPrint } from '../components/printFunc'\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default class BookingView extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\n      selected: {},\n      filter: false,\n      serviceFilter: [],\n      anchorEl: null\n\n    }\n  }\n\n  onEditComplete = async ({ value, columnId, rowIndex, data }) => {\n    try {\n      if (columnId === 'checkedIn') {\n\n\n        let nrows = this.props.rows\n        nrows[nrows.findIndex(i => i.id === data.id)].checkedIn = value\n        this.props.setRows(nrows)\n        await dataProvider.update('bookings', { id: data.id, data: { checkedIn: value } })\n      }\n    }\n    catch { }\n\n  }\n\n  getService = () => {\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n\n      return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n  getCategory = () => {\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n      return [...new Set(response.data.map(item => { return { id: item.category, label: item.category } }))]\n      //return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n\n  columns = [\n    {\n      name: 'name', header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n\n        if (data['client_ref']) {\n\n          return (<a href={'#clients/' + data['client_ref']} >{value}</a>)\n\n        }\n        else\n          return (<span >{value}</span>)\n\n      }, editable: false\n    },\n    {\n      name: 'dogName', header: 'Dog', defaultWidth: 150, render: ({ value, data }) => {\n        if (data['dog_ref']) {\n          return (<a href={'#dogs/' + data['dog_ref']} >{value}</a>)\n        }\n        else\n          return (<span >{value}</span>)\n      }, editable: false\n    }, {\n      name: 'status', header: 'Status', defaultWidth: 101,\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: [{ id: \"cancelled\", label: \"Cancelled\" }, { id: \"confirmed\", label: \"Confirmed\" }, { id: \"modified\", label: \"Modified\" }]\n      }, render: ({ value, data }) => {\n        if (value === 'confirmed') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'green' }} label='Confirmed' key={value} />\n          )\n        }\n        else if (value === 'modified') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'orange' }} label='Modified' key={value} />\n          )\n        }\n        else if (value === 'cancelled') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'red' }} label='Cancelled' key={value} />\n          )\n        }\n      }, editable: false\n\n    },\n    { name: 'checkedIn', header: 'Checked In', width: 100, filterEditor: BoolFilter, render: ({ value }) => value ? < DoneIcon htmlColor='green' style={{ textAlign: 'center', verticalAlign: 'center' }} /> : null, editor: BoolEditor },\n    {\n      name: 'service', header: 'Service', defaultWidth: 250,\n\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: this.getService(),\n      }, editable: false\n    },\n    {\n      name: 'category', header: 'Category', defaultWidth: 150,\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: this.getCategory(),\n      }, editable: false\n    },\n    {\n      name: 'date', header: 'Booking Date', defaultWidth: 138, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, cellProps: { dateFormat } }) => {\n        return moment(value).format('ddd DD/MM/YYYY')\n      }, editable: false\n    },\n    {\n      name: 'end', header: 'Start Time', defaultWidth: 150, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, data }) => {\n\n        return `${moment(data.start).format('hh:mm A')}`\n      }, editable: false\n    },\n    {\n      name: 'addOns', header: 'AddOns', defaultWidth: 180, render: ({ value }) => {\n        if (value.length !== 0) {\n\n          return (\n            <>\n              {value.map(item =>\n\n                <Chip color='secondary' label={item} key={item} />\n\n              )}\n            </>\n          )\n\n        }\n        else\n          return (<span></span>)\n      },\n      cellDOMProps: ({ data, value }) => {\n        if (value.length > 2) {\n          return {\n            onMouseEnter: () => {\n              NotificationManager.success(value.map(item => { return <>{item}<br /></> }), 'Extras', 5000, () => { alert(value.map(i => `${i}\\n`)) });\n            }\n          }\n        }\n      }, editable: false\n    },\n    { name: 'code', header: 'Booking Code', defaultWidth: 110, editable: false },\n  ];\n\n  gridStyle = { minHeight: 550 };\n\n  defaultFilterValue = [\n\n    { name: 'date', operator: 'eq', type: 'date', value: '' },\n    { name: 'service', operator: 'inlist', type: 'select', value: null },\n    { name: 'status', operator: 'inlist', type: 'select', value: null },\n    { name: 'category', operator: 'inlist', type: 'select', value: null },\n    { name: 'checkedIn', operator: 'eq', type: 'boolean', value: null },\n    { name: 'code', operator: 'contains', type: 'string', value: '' },\n    { name: 'dogName', operator: 'contains', type: 'string', value: '' },\n    { name: 'name', operator: 'contains', type: 'string', value: '' },\n  ];\n\n\n  handlePrintClick = (event) => {\n\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handlePrintClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n\n\n\n\n\n\n  render() {\n    return (\n      <>\n        <Title title={this.props.title} />\n        <div>\n          <Button\n            label=\"Filters\"\n            onClick={() => this.setState({ filter: !this.state.filter })}>\n            <FilterListIcon />\n          </Button>\n\n          <Button\n            label=\"Print\"\n            onClick={this.handlePrintClick}\n          >\n            <PrintIcon />\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handlePrintClose}\n          >\n            <ReactToPrint content={() => this.componentRef}>\n              <PrintContextConsumer>\n                {({ handlePrint }) => (\n                  <>\n                    <MenuItem onClick={handlePrint}>Daycare Attendance List</MenuItem>\n                    {Boolean(this.state.anchorEl) && <div style={{ display: \"none\" }}>\n                      <DaycareToPrint ref={el => (this.componentRef = el)} selected={this.props.title === 'Daycare Today'? this.props.rows : false} />\n                    </div>}\n                  </>\n                )}\n              </PrintContextConsumer>\n            </ReactToPrint>\n            <ReactToPrint content={() => this.componentRef1}>\n              <PrintContextConsumer>\n                {({ handlePrint }) => (\n                  <>\n                    <MenuItem onClick={handlePrint}>Grooming Attendance List</MenuItem>\n                    {Boolean(this.state.anchorEl) && <div style={{ display: \"none\" }}>\n                      <GroomingPrint ref={el => (this.componentRef1 = el)}selected={this.props.title === 'Grooming Today'? this.props.rows : false} />\n                    </div>}\n                  </>\n                )}\n              </PrintContextConsumer>\n            </ReactToPrint>\n\n          </Menu>\n\n\n          {Object.keys(this.state.selected).length === 1 && <EditButton\n            basePath='/bookings' label='Edit' record={Object.values(this.state.selected)[0]}\n          />}\n          {Object.keys(this.state.selected).length === 1 && <Button\n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}\n          {Object.keys(this.state.selected).length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>}\n        </div>\n        <ReactDataGrid\n          idProperty=\"id\"\n          columns={this.columns}\n          dataSource={this.props.rows}\n          style={this.gridStyle}\n          onEditComplete={this.onEditComplete}\n          editable={true}\n          defaultFilterValue={this.defaultFilterValue}\n          onSelectionChange={select => this.setState({ selected: select.selected })}\n          enableFiltering={this.state.filter}\n          multiSelect\n          checkboxColumn\n        // pagination='local'\n        // dataSource={this.handleCallback}\n        />\n      </>\n    )\n  }\n}","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function DaycareToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView setRows={setRows}  rows={rows} title='All Bookings'/>\n    </>\n  );\n}","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function BookingsToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'start': dateFormat(today, \"yyyy-mm-dd\") } }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n     setRows(response.data )\n\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView setRows={setRows} rows={rows} title='Bookings Today'/>\n    </>\n  );\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function DaycareToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare','start': dateFormat(today, \"yyyy-mm-dd\")} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView setRows={setRows}  rows={rows} title='Daycare Today'/>\n    </>\n  );\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function GroomingToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist','start': dateFormat(today, \"yyyy-mm-dd\")} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n    \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView setRows={setRows}  rows={rows} title='Grooming Today'/>\n    </>\n  );\n}\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function GroomingToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist'}}).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n    \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView setRows={setRows}  rows={rows} title='Grooming'/>\n    </>\n  );\n}\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function Daycare() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare'} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView setRows={setRows}  rows={rows} title='Daycare'/>\n    </>\n  );\n}","import React from 'react';\nimport './ConversationSearch.css';\n\nexport default function ConversationSearch(props) {\n\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Client\"\n        onChange={event => props.searchFilterFunction(event.target.value)}\n        value={props.searchText}\n      />\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport shave from 'shave';\n\n\nimport './ConversationListItem.css';\n\n\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n\n\n  const { photo, name, text, unreadCount } = props.data;\n\n  return (\n    <div className=\"conversation-list-item\" onClick={() => {\n\n      props.onClick({ sid: props.data.sid, name: props.data.name })\n    }}>\n\n      <div className=\"conversation-info\">\n        <h1 className=\"conversation-title\">{name}\n        </h1>\n        <p className=\"conversation-snippet\">{text}\n        {unreadCount !== 0 && <text className=\"badge\">{unreadCount}</text>}\n        </p>\n\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useState, Fragment, useEffect } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport ConversationSearch from '../../views/messenger/ConversationSearch'\nimport { getList } from '../../components/authProvider'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 500,\n        maxWidth: 300,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function NewConvoCreate(props) {\n\n    const classes = useStyles();\n    const [allCust, setAllCust] = useState([])\n    const [allCustHolder, setAllCustHolder] = useState([])\n    const [total, setTotal] = useState('')\n    const [searchText, setSearchText] = useState('')\n\n    useEffect(async () => {\n\n        let all_clients = await getList('clients')\n        setTotal(all_clients.total)\n        setAllCust(all_clients.data)\n        setAllCustHolder(all_clients.data)\n\n\n    }, [])\n    const searchFilterFunction = (text) => {\n\n        const newData = allCustHolder.filter(item => {\n\n\n            let name\n            try {\n                name = item.name.toUpperCase()\n            }\n            catch { name = null }\n\n\n            const itemData = `${name}`;\n            const textData = text.toUpperCase();\n\n            return itemData.indexOf(textData) > -1;\n        });\n\n        setSearchText(text)\n        setAllCust(newData)\n        setTotal(newData.length)\n\n    };\n\n    const handleClick = (event) => {\n\n        let search = props.activeConvos.filter(i => i.text === event.phone)\n        if (search.length > 0) {\n\n            props.setActiveConvo({ sid: search[0].sid, name: search[0].name })\n            props.open(!props.visible)\n        }\n        else {\n\n            props.createNewConvo(event.phone, event.name)\n            props.open(!props.visible)\n        }\n\n\n    }\n\n\n\n    function renderRow(props) {\n        const { index, style } = props;\n\n        return (\n            <ListItem onClick={async () => handleClick(allCust[index])} button style={style} key={index} >\n                <ListItemText primary={allCust[index].name} />\n            </ListItem>\n        );\n    }\n\n    renderRow.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.object.isRequired,\n    };\n\n    return (\n        <Fragment>\n            <Dialog open={props.visible}>\n\n                <DialogTitle>Create new Conversation</DialogTitle>\n\n                <DialogContent>\n                    <div className={classes.root}>\n                        <ConversationSearch searchText={searchText} searchFilterFunction={searchFilterFunction} />\n                        <FixedSizeList height={400} width={300} itemSize={46} itemCount={total} >\n                            {renderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={() => props.open(!props.visible)}\n                    >\n                        <IconCancel />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport { dataProvider, getTWToken } from '../../../components/authProvider'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport {\n  Button\n} from 'react-admin';\nimport NewConvoCreate from '../../../components/newCovoCreate'\nimport './ConversationList.css';\nimport { NotificationManager } from 'react-notifications';\nimport NotificationContext from '../../../components/Context'\n\n\nconst Conversations = require('@twilio/conversations');\n\n\n\nexport default function ConversationList(props) {\n\n\n  const { notifications, setNotifications, removeAllMessNotif } = useContext(NotificationContext)\n  const [conversations, setConversations] = useState([]);\n  const [conversationHolder, setConverrsationHolder] = useState([]);\n  const [searchText, setSearchText] = useState(null)\n  const [newConvoVisible, setNewConvoVisible] = useState(false)\n\n\n  useEffect(() => {\n    getConversations()\n  }, [])\n\n  const notify = (event, conversation) => {\n    let convoItem = conversation.filter(i => i.text === event.conversation.channelState.uniqueName.split(':')[1])[0]\n    NotificationManager.info(convoItem.name, 'New message', 3000);\n    setNotifications({ message: `Message from ${convoItem.name}`, type: 'message', convoItem:convoItem })\n\n  }\n\n\n  const refreshConvoList = useCallback(async (client, event) => {\n\n\n\n    if (client) {\n\n      let items = []\n      async function processChannels(paginator) {\n        if (paginator.hasNextPage) {\n\n          const nextPaginator = await paginator.nextPage();\n          items = items.concat(nextPaginator.items)\n          await processChannels(nextPaginator);\n        }\n      }\n      let clientconvo = await client.getSubscribedConversations()\n      items = clientconvo.items\n      await processChannels(clientconvo);\n      let newConversations = await Promise.all(items.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n      event && notify(event, newConversations)\n    }\n\n  }, [conversations])\n\n  const refreshToken = async (client) => {\n\n\n    console.log('token about to expire')\n    let token = await getTWToken()\n    client.updateToken(token);\n\n    console.log('client\\'s token updated')\n  }\n\n  async function getClient(token, callback) {\n    let items = []\n    async function processChannels(paginator) {\n\n\n      if (paginator.hasNextPage) {\n\n        const nextPaginator = await paginator.nextPage();\n        items = items.concat(nextPaginator.items)\n        await processChannels(nextPaginator);\n      }\n    }\n\n    let client = await Conversations.Client.create(token);\n\n\n    client.addListener('tokenAboutToExpire', () => refreshToken(client));\n\n    client.addListener('connectionStateChanged', async (event) => {\n      if (event === 'connected') {\n        let clientconvo = await client.getSubscribedConversations()\n        items = clientconvo.items\n        await processChannels(clientconvo);\n        props.setClient(client)\n\n        if (client._eventsCount === 2) {\n          client.addListener('messageAdded', (event) => refreshConvoList(client, event))\n          client.addListener('conversationRemoved', () => refreshConvoList(client))\n          client.addListener('conversationAdded', (event) => refreshConvoList(client, event))\n        }\n        callback(items)\n      }\n    })\n  }\n\n  const searchFilterFunction = (text) => {\n\n    const newData = conversationHolder.filter(item => {\n\n\n      let name\n      try {\n        name = item.name.toUpperCase()\n      }\n      catch { name = null }\n      let phone\n      try {\n        phone = item.phone\n      }\n      catch { phone = null }\n\n      const itemData = `${name} ${phone}`;\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n\n    setSearchText(text)\n    setConversations(newData)\n\n  };\n\n\n  const createConvo = async (number, name) => {\n\n    let twiConvo = await props.client.createConversation({ \"friendlyName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number, \"uniqueName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number })\n    await twiConvo.addNonChatParticipant(\"+61488844176\", number)\n\n    await twiConvo.add(\"pBjefCCX5JXw6QbYFu2GR7rmouw1\")\n    //refreshConvoList()// set this as event listener\n    props.setactiveConvo({ sid: twiConvo.sid, name: name })\n\n\n  }\n\n\n  const getConversations = async () => {\n\n    let token = await getTWToken()\n\n    getClient(token, async convos => {\n\n\n      let newConversations = await Promise.all(convos.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n\n    })\n\n\n\n  }\n\n  const setactiveConvo = (obj) => {\n    props.setactiveConvo(obj)\n    removeAllMessNotif(obj)\n    conversations[conversations.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    conversationHolder[conversationHolder.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    setConversations(conversations)\n    setConverrsationHolder(conversationHolder)\n  }\n\n  return (\n    <div className=\"conversation-list\">\n      <Toolbar\n        title=\"Messenger\"\n        leftItems={[\n          <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n        ]}\n        rightItems={[\n          <Button\n            onClick={() => setNewConvoVisible(!newConvoVisible)}\n          >\n            <AddBoxIcon />\n          </Button>,\n          <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n        ]}\n      />\n      <ConversationSearch\n        searchFilterFunction={searchFilterFunction}\n        searchText={searchText}\n      />\n      {\n        conversations.map(conversation =>\n          <ConversationListItem\n            key={conversation.sid}\n            data={conversation}\n            onClick={setactiveConvo}\n          />\n        )\n      }\n      <NewConvoCreate visible={newConvoVisible} open={setNewConvoVisible} activeConvos={conversations} setActiveConvo={props.setactiveConvo} createNewConvo={createConvo} />\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageIcon from '@material-ui/icons/Image';\nimport {\n  Button\n} from 'react-admin';\nimport './Compose.css';\nimport Imageuploader from \"../../../components/imageUploader\"\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport default function Compose(props) {\n  const [dialog, setDialog] = useState(false)\n\n\n\n  return (\n    <div className=\"compose\" >\n\n      <TextareaAutosize\n       \n        type=\"text\"\n        className=\"compose-input\"\n        placeholder=\"Type a message\"\n        value={props.value}\n        onChange={event => { props.onChange(event.target.value) }}\n        spellCheck={true}\n        minRows='2'\n      />\n      {props.value ? <Button\n        onClick={() => props.onSend()}\n      >\n        <SendIcon />\n      </Button> : <Button\n        onClick={() => setDialog(!dialog)}\n      >\n        <ImageIcon />\n      </Button>}\n     <Imageuploader open={dialog} onCancel={() => setDialog(!dialog)} onDrop={props.onDrop} onPicSend={props.onPicSend}/>\n      {\n        props.rightItems\n      }\n    </div>\n  );\n}","import React from 'react';\nimport moment from 'moment';\nimport Lightbox from 'react-lightbox-component';\nimport './Message.css';\n\nexport default function Message(props) {\n  const {\n    data,\n    isMine,\n    startsSequence,\n    endsSequence,\n    showTimestamp\n  } = props;\n  var searchPattern = new RegExp('^' + 'https://bit.ly/');\n\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n  return (\n    <div className={[\n      'message',\n      `${isMine ? 'mine' : ''}`,\n      `${startsSequence ? 'start' : ''}`,\n      `${endsSequence ? 'end' : ''}`\n    ].join(' ')}>\n      {\n        showTimestamp &&\n        <div className=\"timestamp\">\n          {friendlyTimestamp}\n        </div>\n      }\n\n      <div className=\"bubble-container\">\n        <div className=\"bubble\" title={friendlyTimestamp}>\n          {searchPattern.test(data.message) ? <Lightbox thumbnailWidth='150px'\n            thumbnailHeight='150px' images={\n              [\n                {\n                  src: data.message\n                }\n              ]\n            } /> : data.message}\n        </div>\n      </div>\n    </div>\n  );\n}","\nvar axios = require('axios');\n\n\n\n\n\n\n\n\n\nexport const SendPicToServ = async (token, file) => {\n\n\n\n    function readFile(file) {\n        return new Promise((resolve, reject) => {\n            let fr = new FileReader();\n            fr.onload = x => resolve(fr.result);\n            fr.onerrror = reject;\n            fr.readAsDataURL(file)\n        })\n    }\n\n    let base64 = await readFile(file)\n\n    var data = JSON.stringify({\n        \"token\": token,\n        \"image\": base64.replace(\"data:\", \"\").replace(/^.*;base64,/, \"\")\n    });\n\n    var config = {\n        method: 'post',\n        url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/adminPicUploader',\n        headers: {\n            'Authorization': 'Basic ODU2NzZCNUEtOEE5MS00NzYwLUE4MTctODQ2MUIyQ0I3MTI0OjZCQ0FGQUY5LUVFQ0YtNDRBNi04QTBBLTg3RjFDQUYxQTQxNg==',\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    return axios(config)\n        .then(function (response) {\n            return response.data\n        })\n        .catch(function (error) {\n            return error\n        });\n\n\n}\n\n\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport { SendPicToServ } from '../../../components/TwilioHelper'\nimport { getToken } from '../../../components/authProvider'\nimport './MessageList.css';\n\n\nconst MY_USER_ID = 'pBjefCCX5JXw6QbYFu2GR7rmouw1';\n\nexport default function MessageList(props) {\n\n  const [messages, setMessages] = useState([])\n  const [newMessage, setNewMessage] = useState(null)\n  const [convo, setConvo] = useState(null)\n  const messagesEndRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n\n\n\n  const onPicSend = async () => {\n    let token = await getToken()\n\n    for (let file of selectedFile) {\n      let url = await SendPicToServ(token, file)\n\n      await sendMessage(url)\n    }\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages]);\n  const getMessages = useCallback( async function  () {\n    var tempMessages = []\n    if (props.activeConvo) {\n\n\n       let convo = await props.client.getConversationBySid(props.activeConvo.sid)\n       convo._events.messageAdded.length === 0 && convo.addListener('messageAdded', getMessages)\n      \n       convo.channelState.lastMessage && convo.advanceLastReadMessageIndex(convo.channelState.lastMessage.index)\n       setConvo(convo)\n      let messages = await convo.getMessages()\n      tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n\n    }\n\n    setMessages(tempMessages)\n  },[props.activeConvo, props.client])\n\n  useEffect(() => {\n\n    getMessages();\n    return ()=>{\n      if (convo){\n        convo.removeListener('messageAdded', getMessages)\n        \n      }\n    }\n  }, [convo, getMessages, props.activeConvo, props.client])\n\n\n  \n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n  const sendMessage = async (img) => {\n    await convo.sendMessage(img ? img : newMessage)\n    let messages = await convo.getMessages()\n    let tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n    setNewMessage(\"\")\n    setMessages(tempMessages)\n  }\n\n\n\n\n  return (\n    <div className=\"message-list\">\n      <Toolbar\n        title={props.activeConvo ? props.activeConvo.name : 'Select a conversation'}\n        rightItems={[\n          <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n          <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n          <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n        ]}\n      />\n\n      <div className=\"message-list-container\">{renderMessages()}\n        <div ref={messagesEndRef} />\n      </div>\n\n\n      <Compose\n        value={newMessage}\n        onChange={setNewMessage}\n        onSend={sendMessage}\n        onPicSend={onPicSend}\n        onDrop={setSelectedFile}\n        rightItems={[\n\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]} />\n    </div>\n  );\n}","import React , { useState } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\n\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n  \n  const [activeConvo, setactiveConvo] = useState(null);\n  const [client, setClient]= useState(null)\n  \n  return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList setactiveConvo={setactiveConvo} setClient={setClient} client={client} />\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList activeConvo={activeConvo} client={client} />\n        </div>\n      </div>\n    );\n}","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport bookingstoday from '../views/bookingToday'\nimport todayDaycare from '../views/todayDaycare'\nimport todayGrooming from '../views/todayGrooming'\nimport grooming from '../views/grooming'\nimport daycare from '../views/daycare'\nimport messenger from '../views/messenger'\nimport bookings from '../views/allbookings'\nimport clients from '../views/clients'\nimport dogs from '../views/dogs'\n\n\n\nexport default\n\n[\n\n    <Route   exact path=\"/bookingstoday\" component={bookingstoday}   />,\n    <Route   exact path=\"/clients\" component={clients}   />,\n    <Route   exact path=\"/todaydaycare\" component={todayDaycare}   />,\n    <Route   exact path=\"/dogs\" component={dogs}   />,\n    <Route   exact path=\"/todaygrooming\" component={todayGrooming}   />,\n    <Route   exact path=\"/grooming\" component={grooming}  />,\n    <Route   exact path=\"/daycare\" component={daycare}  />,\n    <Route   exact path=\"/bookings\" component={bookings}  />,\n    <Route   exact path=\"/messenger\" component={messenger}  />,\n\n\n\n];","import React from 'react';\nimport Messenger from './messenger/Messenger';\nimport Card from '@material-ui/core/Card';\n\nimport { Title } from 'react-admin';\n\nexport default function messenger() {\n\n\n    return (\n        <Card>\n            <Title title=\"Messenger\" />\n\n\n\n                <Messenger />\n\n        </Card>\n\n\n\n    );\n}","/* eslint-disable import/no-anonymous-default-export */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\n\nimport {\n    adminReducer,\n    adminSaga,\n    USER_LOGOUT,\n} from 'react-admin';\n\nexport default ({\n    authProvider,\n    dataProvider,\n    history,\n}) => {\n    const reducer = combineReducers({\n        admin: adminReducer,\n        router: connectRouter(history),\n     \n\n        // add your own reducers here\n    });\n    const resettableAppReducer = (state, action) =>\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\n\n    const saga = function* rootSaga() {\n        yield all(\n            [\n                adminSaga(dataProvider, authProvider),\n                // add your own sagas here\n            ].map(fork)\n        );\n    };\n    const sagaMiddleware = createSagaMiddleware();\n\n    const composeEnhancers =\n        (process.env.NODE_ENV === 'development' &&\n            typeof window !== 'undefined' &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                trace: true,\n                traceLimit: 25,\n            })) ||\n        compose;\n  \n    const store = createStore(\n        resettableAppReducer,\n        { /* set your initial state here */ },\n        composeEnhancers(\n            applyMiddleware(\n                sagaMiddleware,\n                routerMiddleware(history),\n                // add your own middlewares here\n            ),\n            // add your own enhancers here\n        ),        \n    );\n    sagaMiddleware.run(saga);\n    return store;\n};","import * as React from \"react\";\nimport {\n    List,\n\n    Datagrid,\n    TextField,\n\n    EmailField,\n\n    NumberField\n  \n} from 'react-admin';\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n        </Datagrid>\n    </List>\n)","import * as React from \"react\";\nimport { Admin, Resource, ListGuesser, Layout, EditGuesser } from 'react-admin';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport {  UserCreate, UserEdit } from './views/clients';\nimport { DogList, DogEdit, DogCreate } from './views/dogs';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Dashboard from './views/Dashboard';\nimport { authProvider, dataProvider, getFCMToken, onMessageReceved } from './components/authProvider';\nimport Utils from '@date-io/moment'\nimport GroupIcon from '@material-ui/icons/Group';\nimport MyLayout from './components/MyLayout';\nimport { BookingList } from './views/allbookings'\nimport muCustomRoutes from './components/muCustomRoutes'\nimport createAdminStore from './components/createAdminStore';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport { PaymentList } from './views/payments'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { ContextProvider } from './components/Context'\nimport 'react-lightbox-component/build/css/index.css';\n\n\nconst history = createHashHistory();\n\n\nconst App = () => {\n\n\n  const [isTokenFound, setTokenFound] = React.useState(false);\n  getFCMToken(setTokenFound);\n\n  onMessageReceved(payload => {\n\n    NotificationManager.success(payload.notification.body, payload.notification.title);\n  })\n\n\n  return (\n\n    <Provider\n      store={createAdminStore({\n        authProvider,\n        dataProvider,\n        history,\n      })}\n    >\n      <ContextProvider>\n        <MuiPickersUtilsProvider utils={Utils}>\n          <NotificationContainer />\n          <Admin disableTelemetry layout={MyLayout} history={history} customRoutes={muCustomRoutes} dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider}>\n\n            <Resource name=\"clients\"  icon={PetsIcon} create={UserCreate} to='/clients' edit={UserEdit} options={{ \"label\": \"Clients\" }} />\n            <Resource name=\"dogs\" create={DogCreate} edit={DogEdit} />\n            <Resource name=\"bookings\"  edit={EditGuesser} />\n            <Resource name=\"services\" list={ListGuesser} />\n            <Resource name=\"payments\" list={PaymentList} />\n\n          </Admin>\n        </MuiPickersUtilsProvider>\n      </ContextProvider>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}