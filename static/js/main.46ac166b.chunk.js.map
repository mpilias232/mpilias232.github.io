{"version":3,"sources":["fields/MyUrlField.js","views/clients.js","components/authProvider.js","components/dogsBulk.js","views/dogs.js","views/Dashboard.js","notIcon.png","components/MyNotifis.js","components/MyAppbar.js","components/myMenu.js","components/MyLayout.js","fields/myChipField.js","fields/myRefField.js","components/BookingBulk.js","views/allbookings.js","views/bookingToday.js","views/todayDaycare.js","views/todayGrooming.js","views/grooming.js","components/muCustomRoutes.js","components/createAdminStore.js","views/payments.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","link","textDecoration","icon","width","paddingLeft","PostPagination","props","Pagination","rowsPerPageOptions","UserList","isSmall","useMediaQuery","theme","breakpoints","down","List","perPage","pagination","SimpleList","primaryText","record","name","secondaryText","email","tertiaryText","phone","TextField","source","EmailField","EditButton","PostTitle","UserCreate","Create","SimpleForm","TextInput","label","UserEdit","Edit","title","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","messaging","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","getToken","a","checkAuth","token","_lat","getList","haha","page","list","axios","require","qs","DogBulk","selectedIds","useStyles","root","margin","spacing","useState","open","setOpen","notify","useNotify","unselectAll","useUnselectAll","useGetIdentity","identity","loading","React","topic","setTopic","message","setMessage","setLoading","handleDialogClose","handleConfirm","data","stringify","method","url","headers","then","res","catch","err","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","Input","fullWidth","placeholder","defaultValue","onChange","event","target","value","multiline","DialogActions","BulkDeleteButton","MaleFemaleFilter","FilterList","FilterListItem","sex","desexed","Card","withStyles","up","order","marginRight","display","MuiCard","FilterSidebar","CardContent","FilterLiveSearch","DogList","aside","bulkActionButtons","dog_name","Client","ReferenceField","reference","SelectField","choices","id","BooleanField","DateField","DogEdit","TabbedForm","FormTab","ReferenceInput","filterToQuery","searchText","AutocompleteInput","optionText","optionValue","SelectInput","BooleanInput","options","checkedIcon","DateInput","format","DogCreate","CardHeader","Notifis","detailPage","style","color","notIcon","cardOption","console","log","viewAllbtn","text","linkTo","markAsRead","headerBackgroundColor","header","option","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","className","maxWidth","backgroundColor","palette","background","paper","nested","NestedList","onMenuClick","logout","open1","setOpen1","open2","setOpen2","useSelector","getResources","component","DashboardMenuItem","sidebarIsOpen","MenuItemLink","to","leftIcon","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MyLayout","Layout","menu","appBar","TextArrayField","array","length","map","item","Chip","defaultProps","addLabel","MyClientRefField","filterBy","linkToUser","linkToRecord","MyServiceRef","linkToService","service","category","MydogRef","linkToDogs","dogName","MytimeRange","Date","start","toLocaleString","split","trim","end","BookingBulk","amount","setAmount","handleDialogClose1","handleConfirm1","BookingFilter","Filter","alwaysOn","SearchInput","ReferenceArrayInput","sort","field","word","CategoryFilter","StatusFilter","status","BookingList","filters","weekday","year","month","day","SingleFieldList","ChipField","dateFormat","selectors","Data","Selectors","AutoCompleteFilter","Filters","NumericFilter","columns","MultiSelectFilter","SingleSelectFilter","key","resizable","formatter","params","row","href","filterable","filterRenderer","date","bookingstoday","onRowsSelected","rows","setState","selectedIndexes","state","concat","r","rowIdx","onRowsDeselected","rowIndexes","filter","i","indexOf","handleFilterChange","newFilters","filterTerm","column","getValidFilterValues","columnId","getRows","today","error","filteredRows","this","height","rowGetter","rowsCount","onColumnResize","idx","rowSelection","showCheckbox","enableShiftSelect","selectBy","indexes","toolbar","enableFilter","onAddFilter","onClearFilters","columnKey","Component","todayDaycare","todayGrooming","window","moment","defaultWidth","render","filterEditor","DateFilter","filterEditorProps","index","cellProps","gridStyle","minHeight","defaultFilterValue","operator","type","grooming","selected","Object","keys","idProperty","dataSource","onSelectionChange","select","multiSelect","checkboxColumn","enableFiltering","exact","path","history","reducer","combineReducers","admin","adminReducer","router","connectRouter","saga","rootSaga","all","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","action","USER_LOGOUT","undefined","applyMiddleware","routerMiddleware","run","PaymentList","Datagrid","rowClick","NumberField","createHashHistory","App","callback","setTokenFound","vapidKey","currentToken","NotificationManager","alert","getFCMToken","payload","success","notification","body","onMessage","payloaf","createAdminStore","utils","Utils","Admin","disableTelemetry","layout","customRoutes","muCustomRoutes","dashboard","Dashboard","Resource","PetsIcon","create","edit","ListGuesser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4UAKkBA,YAAW,CACzBC,KAAM,CACFC,eAAgB,QAEpBC,KAAM,CACFC,MAAO,QACPC,YAAa,K,0BCLfC,EAAiB,SAAAC,GAAK,OAAI,cAACC,EAAA,EAAD,aAAYC,mBAAoB,CAAC,GAAI,IAAK,MAAUF,KAIvEG,EAAW,SAAAH,GACpB,IAAMI,EAAUC,aAAc,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,KAAK,SAC/D,OACC,cAACC,EAAA,EAAD,yBAAOC,QAAS,IAAQV,GAAxB,IAA+BW,WAAY,cAAC,EAAD,IAA3C,SAAiEP,EAC7D,cAACQ,EAAA,EAAD,CACIC,YAAa,SAAAC,GAAM,OAAIA,EAAOC,MAC9BC,cAAe,SAAAF,GAAM,OAAIA,EAAOG,OAChCC,aAAc,SAAAJ,GAAM,OAAIA,EAAOK,SAKvC,eAAC,IAAD,WACQ,cAACC,EAAA,EAAD,CAAWC,OAAO,SAClB,cAACC,EAAA,EAAD,CAAYD,OAAO,UACnB,cAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,cACrB,cAACE,EAAA,EAAD,WAOHC,EAAY,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OACjB,OAAO,2CAAcA,EAAM,WAAOA,EAAOC,KAAd,KAAwB,OAG1CU,EAAa,SAAAzB,GAAK,OAC3B,cAAC0B,EAAA,EAAD,2BAAY1B,GAAZ,aACK,eAAC2B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWP,OAAO,OAAOQ,MAAM,SAC/B,cAACD,EAAA,EAAD,CAAWP,OAAO,QAAQQ,MAAM,UAChC,cAACD,EAAA,EAAD,CAAWP,OAAO,QAAQQ,MAAM,UAChC,cAACD,EAAA,EAAD,CAAWP,OAAO,YAAYQ,MAAM,qBAKlCC,EAAW,SAAA9B,GAAK,OAC3B,cAAC+B,EAAA,EAAD,yBAAMC,MAAO,cAAC,EAAD,KAAmBhC,GAAhC,aACI,eAAC2B,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAWP,OAAO,OAAOQ,MAAM,SAC1B,cAACD,EAAA,EAAD,CAAWP,OAAO,QAAQQ,MAAM,UAChC,cAACD,EAAA,EAAD,CAAWP,OAAO,QAAQQ,MAAM,UAChC,cAACD,EAAA,EAAD,CAAWP,OAAO,YAAYQ,MAAM,qB,+aC7C3CI,GAAS,CACbC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,kDACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAIjBC,KAASC,cAAcV,IAGtB,IAAMW,GAAYF,KAASE,YAqCfC,GAAeC,gCAAqBb,GAFjC,IAIHc,GAAeC,gCAAqBf,IAEpCgB,GAAQ,yCAAG,6BAAAC,EAAA,sEAEJH,GAAaI,YAFT,cAElBC,EAFkB,yBAGfA,EAAMC,MAHS,2CAAH,qDAORC,GAAO,yCAAG,WAAOC,GAAP,gBAAAL,EAAA,sEACJL,GAAaS,QAAQC,EAAM,CAAE5C,WAAY,CAAE6C,KAAM,EAAG9C,QAAS,OADzD,cACjB+C,EADiB,yBAEdA,GAFc,2CAAH,sDCjDhBC,GAAQC,EAAQ,KAChBC,GAAKD,EAAQ,KAyHFE,GArHE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAGVC,EAAYtE,aAAW,SAACa,GAAD,MAAY,CACrC0D,KAAM,CACJ,uBAAwB,CACtBC,OAAQ3D,EAAM4D,QAAQ,GACtBrE,MAAO,aAPmB,EAaVsE,oBAAS,GAbC,mBAa3BC,EAb2B,KAarBC,EAbqB,KAe5BC,EAASC,eACTC,EAAcC,eAhBc,EAiBaC,eAjBb,KAiB1BC,SAjB0B,EAiBhBC,QACFb,IACUc,cAnBQ,mBAmB3BC,EAnB2B,KAmBpBC,EAnBoB,OAoBJF,aApBI,mBAoB3BG,EApB2B,KAoBlBC,EApBkB,OAqBJd,oBAAS,GArBL,mBAqB3BS,EArB2B,KAqBlBM,EArBkB,KAwB5BC,EAAqB,WAAQd,GAAQ,IAErCe,EAAa,yCAAG,+BAAAlC,EAAA,6DACpBgC,GAAW,GADS,SAEFjC,KAFE,OAEhBG,EAFgB,OAKdiC,EAAOzB,GAAG0B,UAAU,CAAClC,EAAMU,EAAY,OAAQgB,EAAOE,IAW1DtB,GATa,CACX6B,OAAQ,OACRC,IAAK,gCACLC,QAAS,CACP,eAAgB,qCAElBJ,KAAOA,IAIRK,MAAK,SAAUC,GACdT,GAAW,GACXb,GAAQ,GACRC,EAAO,iBACPE,EAAY,QACZO,EAAS,MACTE,EAAW,SAGZW,OAAM,SAAUC,GACfX,GAAW,GACXZ,EAAO,gCAAiC,cA5BxB,2CAAH,qDA0CnB,OACI,eAAC,WAAD,WACI,cAACwB,GAAA,EAAD,CAAQjE,MAAM,eAAekE,QA/CjB,kBAAM1B,GAAQ,MAiD1B,eAAC2B,GAAA,EAAD,CAGQ5B,KAAMA,EACN6B,QAASd,EAJjB,UAOQ,cAACe,GAAA,EAAD,6BAEE,eAACC,GAAA,EAAD,WAEE,cAACC,GAAA,EAAD,CAAOrF,KAAK,QAAQsF,WAAS,EAACC,YAAY,QAAQC,aAAczB,GAASA,EAAQ0B,SAAU,SAAAC,GAAS1B,EAAS0B,EAAMC,OAAOC,UAC1H,cAACP,GAAA,EAAD,CAAOrF,KAAK,UAAU6F,WAAS,EAACP,WAAS,EAACC,YAAY,UAAUC,aAAcvB,GAAWA,EAAUwB,SAAU,SAAAC,GAASxB,EAAWwB,EAAMC,OAAOC,cAGrI,IAAV/B,GACD,eAACiC,GAAA,EAAD,WAIE,cAACf,GAAA,EAAD,CACIjE,MAAM,SACNkE,QAASZ,EAFb,SAKI,cAAC,KAAD,MAEV,cAACW,GAAA,EAAD,CACUjE,MAAM,OACNkE,QAASX,EAFnB,SAKU,cAAC,KAAD,YAKpB,cAAC0B,GAAA,EAAD,QCnGF/G,GAAiB,SAAAC,GAAK,OAAI,cAACC,EAAA,EAAD,aAAYC,mBAAoB,CAAC,GAAI,IAAK,MAAUF,KAc9E+G,GAAmB,kBACrB,eAACC,EAAA,EAAD,CAAYnF,MAAM,MAAMjC,KAAM,cAAC,KAAD,IAA9B,UAGI,cAACqH,EAAA,EAAD,CACIpF,MAAM,OACN8E,MAAO,CACHO,IAAK,OAGZ,cAACD,EAAA,EAAD,CACGpF,MAAM,SACN8E,MAAO,CACJO,IAAK,OAIZ,cAACD,EAAA,EAAD,CACIpF,MAAM,UACN8E,MAAO,CACJQ,SAAS,SAOlBC,GAAOC,aAAW,SAAA/G,GAAK,YAAK,CAC9B0D,MAAI,mBACC1D,EAAMC,YAAY+G,GAAG,MAAQ,CAC1BC,OAAQ,EACR1H,MAAO,OACP2H,YAAa,QAJjB,cAMClH,EAAMC,YAAYC,KAAK,MAAQ,CAC5BiH,QAAS,SAPb,MADKJ,CAWTK,KAEEC,GAAgB,kBAClB,cAAC,GAAD,UACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAkBxG,OAAO,aAErB,cAAC,GAAD,UAKCyG,GAAU,SAAC9H,GACpB,IAAMI,EAAUC,aAAc,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,KAAK,SAC9D,OACI,cAACC,EAAA,EAAD,yBAAMsH,MAAO,cAAC,GAAD,IAAmBrH,QAAS,GAAIC,WAAY,cAAC,GAAD,IAAqBqH,kBAAmB,cAAC,GAAD,KAAkBhI,GAAnH,aAEKI,EACG,cAACQ,EAAA,EAAD,CACIC,YAAa,SAAAC,GAAM,OAAIA,EAAOmH,UAC9BjH,cAAe,SAAAF,GAAM,OAAGA,EAAOoH,UAInC,eAAC,IAAD,WACM,cAAC9G,EAAA,EAAD,CAAWC,OAAO,WAAWQ,MAAM,aACrC,cAACsG,EAAA,EAAD,CAAgBtG,MAAM,SAASR,OAAO,QAAQ+G,UAAU,UAAxD,SACI,cAAChH,EAAA,EAAD,CAAWC,OAAO,WAEtB,cAAC8G,EAAA,EAAD,CAAgBtG,MAAM,QAAQR,OAAO,QAAQ+G,UAAU,aAAvD,SACI,cAAChH,EAAA,EAAD,CAAWC,OAAO,WAEtB,cAACgH,EAAA,EAAD,CAAahH,OAAO,MAAMiH,QAAS,CACpD,CAAEC,GAAI,IAAKxH,KAAM,QACjB,CAAEwH,GAAI,IAAKxH,KAAM,aAEA,cAACyH,EAAA,EAAD,CAAcnH,OAAO,UAAUQ,MAAM,YACrC,cAACP,EAAA,EAAD,CAAYD,OAAO,YAAYQ,MAAM,cACrC,cAACT,EAAA,EAAD,CAAWC,OAAO,MAAMQ,MAAM,QAC9B,cAAC4G,EAAA,EAAD,CAAWpH,OAAO,SAASQ,MAAM,WACjC,cAAC4G,EAAA,EAAD,CAAWpH,OAAO,SAASQ,MAAM,WACjC,cAAC4G,EAAA,EAAD,CAAWpH,OAAO,SAASQ,MAAM,WACjC,cAACN,EAAA,EAAD,WAQdC,GAAY,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OACd,OAAO,wCAAWA,EAAM,WAAOA,EAAOmH,SAAd,KAA4B,OAG9CS,GAAU,SAAA1I,GAAK,OACxB,cAAC+B,EAAA,EAAD,yBAAMC,MAAO,cAAC,GAAD,KAAmBhC,GAAhC,aACI,eAAC2I,EAAA,EAAD,WACS,eAACC,EAAA,EAAD,CAAS/G,MAAM,cAAf,UACT,cAACD,EAAA,EAAD,CAAWP,OAAO,WAAWQ,MAAM,aACnC,cAACgH,EAAA,EAAD,CAAiBC,cAAe,SAAAC,GAAU,MAAK,CAAEhI,KAAMgI,IAAe1H,OAAO,QAAQ+G,UAAU,UAA/F,SAAyG,cAACY,EAAA,EAAD,CAAmBC,WAAW,WACvI,cAACJ,EAAA,EAAD,CAAiBC,cAAe,SAAAC,GAAU,MAAK,CAAEhI,KAAMgI,IAAe1H,OAAO,QAAQ+G,UAAU,aAA/F,SAA4G,cAACY,EAAA,EAAD,CAAmBE,YAAY,KAAKD,WAAW,WAEzJ,cAACE,EAAA,EAAD,CAAa9H,OAAO,MAAOiH,QAAS,CAC3C,CAAEC,GAAI,IAAKxH,KAAM,QACjB,CAAEwH,GAAI,IAAKxH,KAAM,WACjBc,MAAM,QAAO,cAACuH,EAAA,EAAD,CAChB/H,OAAO,UACPgI,QAAS,CACLC,YAAa,cAAC,KAAD,UAIjB,eAACV,EAAA,EAAD,CAAS/G,MAAM,kBAAf,UACA,cAACD,EAAA,EAAD,CAAWP,OAAO,MAAMQ,MAAM,QAC9B,cAACD,EAAA,EAAD,CAAWP,OAAO,YAAYQ,MAAM,cACpC,cAAC0H,EAAA,EAAD,CAAWlI,OAAO,SAASQ,MAAM,SAASwH,QAAS,CAAEG,OAAQ,gBAC7D,cAACD,EAAA,EAAD,CAAWlI,OAAO,SAASQ,MAAM,SAASwH,QAAS,CAAEG,OAAQ,gBAC7D,cAACD,EAAA,EAAD,CAAWlI,OAAO,SAASQ,MAAM,SAASwH,QAAS,CAAEG,OAAQ,0BAQhDC,GAAY,SAAAzJ,GAAK,OACxB,cAAC0B,EAAA,EAAD,2BAAY1B,GAAZ,aACW,eAAC2I,EAAA,EAAD,WACA,eAACC,EAAA,EAAD,CAAS/G,MAAM,cAAf,UACN,cAACgH,EAAA,EAAD,CAAiBC,cAAe,SAAAC,GAAU,MAAK,CAAEhI,KAAMgI,IAAe1H,OAAO,QAAQ+G,UAAU,UAA/F,SAAyG,cAACY,EAAA,EAAD,CAAmBC,WAAW,WAEnI,cAACrH,EAAA,EAAD,CAAWP,OAAO,WAAWQ,MAAM,aACnC,cAACD,EAAA,EAAD,CAAYP,OAAO,QAAQQ,MAAM,UACjC,cAACsH,EAAA,EAAD,CAAa9H,OAAO,MAAMiH,QAAS,CAC/C,CAAEC,GAAI,IAAKxH,KAAM,QACjB,CAAEwH,GAAI,IAAKxH,KAAM,WACjBc,MAAM,QACT,cAACuH,EAAA,EAAD,CACI/H,OAAO,UACPgI,QAAS,CACLC,YAAa,cAAC,KAAD,UAIrB,eAACV,EAAA,EAAD,CAAS/G,MAAM,kBAAf,UACA,cAACD,EAAA,EAAD,CAAWP,OAAO,MAAMQ,MAAM,QAC9B,cAACD,EAAA,EAAD,CAAWP,OAAO,YAAYQ,MAAM,cACpC,cAAC0H,EAAA,EAAD,CAAWlI,OAAO,SAASQ,MAAM,SAASwH,QAAS,CAAEG,OAAQ,gBAC7D,cAACD,EAAA,EAAD,CAAWlI,OAAO,SAASQ,MAAM,SAASwH,QAAS,CAAEG,OAAQ,gBAC7D,cAACD,EAAA,EAAD,CAAWlI,OAAO,SAASQ,MAAM,SAASwH,QAAS,CAAEG,OAAQ,0B,gCCrM9C,qBACX,eAACpC,EAAA,EAAD,WACI,cAACsC,GAAA,EAAD,CAAY1H,MAAM,kCAClB,cAAC4F,EAAA,EAAD,gD,iDCNO,OAA0B,oCCwC1B+B,GArCC,SAAC3J,GAGb,OACI,cAAC,KAAD,CACAqF,KAAM,CACJ,CAEEL,QAAS,gDACT4E,WAAY,KAEd,CAEE5E,QACE,2DAC6B,IAC3B,sBAAM6E,MAAO,CAAEC,MAAO,WAAtB,sBAFF,gBAKFF,WAAY,MAGhBhK,KAAMmK,GACNC,WAAY,SAAA3E,GAAI,OAAI4E,QAAQC,IAAI7E,IAChC8E,WAAY,CAAEC,KAAM,UAAWC,OAAQ,WACvCC,WAAY,SAAAjF,GAAI,OAAI4E,QAAQC,IAAI7E,IAChCkF,sBAAsB,MACtBC,OACE,CACExI,MAAO,gBACPyI,OAAQ,CAAEL,KAAM,WAAYrE,QAAS,kBC1B3ChC,GAAYtE,YAAW,CAC3BuC,MAAO,CACL0I,KAAM,EACNC,aAAc,WACdC,WAAY,SACZC,SAAU,UAEZC,OAAQ,CACNJ,KAAM,KAwBKK,GAnBE,SAAA/K,GACf,IAAMgL,EAAUjH,KAGhB,OACE,eAACkH,GAAA,EAAD,2BAAYjL,GAAZ,cACE,cAACkL,GAAA,EAAD,CACEC,QAAQ,KACRrB,MAAM,UACNsB,UAAWJ,EAAQhJ,MACnBuG,GAAG,sBAGL,sBAAM6C,UAAWJ,EAAQF,SACzB,cAAC,GAAD,S,mSCVA/G,GAAYtE,aAAW,SAACa,GAAD,MAAY,CACvC0D,KAAM,CACJnE,MAAO,OACPwL,SAAU,IACVC,gBAAiBhL,EAAMiL,QAAQC,WAAWC,OAE5CC,OAAQ,CACN5L,YAAaQ,EAAM4D,QAAQ,QAQ/B,SAASyH,GAAT,GAA8C,IAAxBC,EAAuB,EAAvBA,YACdZ,GADqC,EAAVa,OACjB9H,MAD2B,EAGnBc,YAAe,GAHI,mBAGpCT,EAHoC,KAG9BC,EAH8B,OAUjBQ,YAAe,GAVE,mBAUpCiH,EAVoC,KAU7BC,EAV6B,OAWjBlH,YAAe,GAXE,mBAWpCmH,EAXoC,KAW7BC,EAX6B,KAoBzBC,YAAYC,MAQ9B,OAEE,eAAC,KAAD,CACEC,UAAU,MACVhB,UAAWJ,EAAQhH,KAFrB,UAIE,cAACqI,GAAA,EAAD,CAAmBtG,QAAS6F,EAAaU,cAAelI,IACxD,cAACmI,GAAA,EAAD,CAEEC,GAAG,WACH3L,YAAY,UACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GATX,WAcN,eAACsI,GAAA,EAAD,CAAUC,QAAM,EAAC5G,QA3CD,WAClB1B,GAASD,IA0CP,UACE,cAACwI,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,SACrB1I,EAAO,cAAC,KAAD,IAAiB,cAAC,KAAD,OAG3B,eAAC2I,GAAA,EAAD,CAAUC,GAAI5I,EAAM6I,QAAQ,OAAOC,eAAa,EAAhD,UACE,cAACX,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,QACH3L,YAAY,WACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GATX,QAWN,cAACmI,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,cACH3L,YAAY,aACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GATX,iBAYR,eAACsI,GAAA,EAAD,CAAUC,QAAM,EAAC5G,QAnEA,WACnBgG,GAAUD,IAkER,UACE,cAACc,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,aACrBhB,EAAQ,cAAC,KAAD,IAAiB,cAAC,KAAD,OAE5B,eAACiB,GAAA,EAAD,CAAUC,GAAIlB,EAAOmB,QAAQ,OAAOC,eAAa,EAAjD,UACE,cAACX,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,YACH3L,YAAY,eACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GATX,YAWN,cAACmI,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,iBAEH3L,YAAY,iBACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GAVX,iBAYN,cAACmI,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,gBAEH3L,YAAY,gBACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GAVX,gBAYN,cAACmI,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,iBAEH3L,YAAY,iBACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GAVX,iBAYN,cAACmI,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,YAEH3L,YAAY,WACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GAVX,YAYN,cAACmI,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,YACH3L,YAAY,WACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GATX,eAaR,eAACsI,GAAA,EAAD,CAAUC,QAAM,EAAC5G,QA7JA,WACnBkG,GAAUD,IA4JR,UACE,cAACY,GAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAACC,GAAA,EAAD,CAAcC,QAAQ,aACrBd,EAAQ,cAAC,KAAD,IAAiB,cAAC,KAAD,OAE5B,cAACe,GAAA,EAAD,CAAUC,GAAIhB,EAAOiB,QAAQ,OAAOC,eAAa,EAAjD,SACE,cAACX,GAAA,EAAD,CAAcnB,UAAWJ,EAAQU,OAAQyB,gBAAc,EAErDX,GAAG,YACH3L,YAAY,eACZ4L,SAEE,cAAC,KAAD,IAGF1G,QAAS6F,EACTU,cAAelI,GATX,iBCrNd,IAOegJ,GAPE,SAAApN,GAAK,OAAI,cAACqN,GAAA,EAAD,2BAClBrN,GADkB,IAGtBsN,KAAM3B,GACN4B,OAAQxC,O,mDCHNyC,GAAiB,SAAC,GAAwB,IAExCC,EAFuC,EAArB3M,OAAqB,EAAbO,QAGhC,MAAqB,qBAAVoM,GAAmC,OAAVA,GAAmC,IAAjBA,EAAMC,OACnD,wBAGL,mCACGD,EAAME,KAAI,SAAAC,GAAI,OAEf,cAACC,GAAA,EAAD,CAAM/D,MAAM,YAAYjI,MAAO+L,GAAWA,SAMlDJ,GAAeM,aAAe,CAAEC,UAAU,GAE3BP,U,wCCnBFQ,GAAmB,SAAnBA,EAAoB,GAAwB,IAAtBlN,EAAqB,EAArBA,OAAQO,EAAa,EAAbA,OAIvC,GAFF2M,EAAiBF,aAAe,CAACG,SAAWnN,EAAOC,MAE7CD,EAAOO,GAAS,CAChB,IAAM6M,EAAaC,aAAa,WAAYrN,EAAOO,IAInD,OAAS,cAAC,KAAD,CAAMmL,GAAI0B,EAAV,SAAuBpN,EAAOC,OAKzC,OAEE,+BAAQD,EAAOC,QAOVqN,GAAe,SAAC,GAAwB,IAAtBtN,EAAqB,EAArBA,OAAQO,EAAa,EAAbA,OAInC,GAAIP,EAAOO,GAAS,CAChB,IAAMgN,EAAgBF,aAAa,YAAarN,EAAOO,IAIvD,OAAS,cAAC,KAAD,CAAMmL,GAAI6B,EAAV,SAA0BvN,EAAOwN,QAAU,IAAMxN,EAAOyN,WAKnE,OAEE,+BAAQzN,EAAOwN,QAAU,IAAMxN,EAAOyN,YASjCC,GAAW,SAAC,GAAwB,IAAtB1N,EAAqB,EAArBA,OAAQO,EAAa,EAAbA,OAI/B,GAAIP,EAAOO,GAAS,CAChB,IAAMoN,EAAaN,aAAa,QAASrN,EAAOO,IAIhD,OAAS,cAAC,KAAD,CAAMmL,GAAIiC,EAAV,SAAuB3N,EAAO4N,UAIpC,IAAK5N,EAAOO,GACjB,OAEE,+BAAQP,EAAO4N,WAOVC,GAAc,SAAC,GAAgB,IAAd7N,EAAa,EAAbA,OAI1B,OAEE,+BAAQ,IAAI8N,KAAM9N,EAAO+N,OAAOC,iBAAiBC,MAAM,KAAK,GAAGC,OAAS,MAAQ,IAAIJ,KAAM9N,EAAOmO,KAAKH,iBAAiBC,MAAM,KAAK,GAAGC,U,qBCzDvItL,GAAQC,EAAQ,KAChBC,GAAKD,EAAQ,KAuMFuL,GAlMK,SAAC,GAAqB,IAAnBpL,EAAkB,EAAlBA,YAGfC,EAAYtE,aAAW,SAACa,GAAD,MAAY,CACvC0D,KAAM,CACJ,uBAAwB,CACtBC,OAAQ3D,EAAM4D,QAAQ,GACtBrE,MAAO,aAP0B,EAafsE,oBAAS,GAbM,mBAahCC,EAbgC,KAa1BC,EAb0B,OAcbF,oBAAS,GAdI,mBAchC2H,EAdgC,KAczBC,EAdyB,KAgBjCzH,EAASC,eACTC,EAAcC,eAjBmB,EAkBQC,eAlBR,KAkB/BC,SAlB+B,EAkBrBC,QACFb,IACUc,cApBa,mBAoBhCC,EApBgC,KAoBzBC,EApByB,OAqBTF,aArBS,mBAqBhCG,EArBgC,KAqBvBC,EArBuB,OAsBXJ,aAtBW,mBAsBhCsK,EAtBgC,KAsBxBC,EAtBwB,OAuBTjL,oBAAS,GAvBA,mBAuBhCS,EAvBgC,KAuBvBM,EAvBuB,KA2BjCC,EAAoB,WAAQd,GAAQ,IACpCgL,EAAqB,WAAQtD,GAAS,IACtC3G,EAAa,yCAAG,+BAAAlC,EAAA,6DACpBgC,GAAW,GADS,SAEFjC,KAFE,OAEhBG,EAFgB,OAKhBiC,EAAOzB,GAAG0B,UAAU,CAAClC,EAAOU,EAAa,WAAYgB,EAAOE,IAWhEtB,GATa,CACX6B,OAAQ,OACRC,IAAK,gCACLC,QAAS,CACP,eAAgB,qCAElBJ,KAAMA,IAILK,MAAK,SAAUC,GACdT,GAAW,GACXb,GAAQ,GACRC,EAAO,iBACPE,EAAY,YACZO,EAAS,MACTE,EAAW,SAGZW,OAAM,SAAUC,GACfX,GAAW,GACXZ,EAAO,gCAAiC,cA5BxB,2CAAH,qDAkCbgL,EAAc,yCAAG,+BAAApM,EAAA,6DACrBgC,GAAW,GADU,SAEHjC,KAFG,OAEjBG,EAFiB,OAKjBiC,EAAOzB,GAAG0B,UAAU,CAAClC,EAAOU,EAAaqL,IAW7CzL,GATa,CACX6B,OAAQ,OACRC,IAAK,qCACLC,QAAS,CACP,eAAgB,qCAElBJ,KAAMA,IAILK,MAAK,SAAUC,GACdT,GAAW,GACXb,GAAQ,GACRC,EAAO,iBACPE,EAAY,YAEZ4K,EAAU,SAGXxJ,OAAM,SAAUC,GACfX,GAAW,GACXZ,EAAO,gCAAiC,cA5BvB,2CAAH,qDA2CpB,OAEE,eAAC,WAAD,WACyB,GAAtBR,EAAY4J,QAAe,cAAC5H,GAAA,EAAD,CAAQjE,MAAM,cAAckE,QAnFlC,kBAAMgG,GAAS,MAoFrC,cAACjG,GAAA,EAAD,CAAQjE,MAAM,eAAekE,QArFb,kBAAM1B,GAAQ,MAuF9B,eAAC2B,GAAA,EAAD,CAGE5B,KAAM0H,EACN7F,QAASoJ,EAJX,UAOE,cAACnJ,GAAA,EAAD,kCAEA,cAACC,GAAA,EAAD,UAEE,cAACC,GAAA,EAAD,CAAOrF,KAAK,SAASsF,WAAS,EAACC,YAAY,SAASC,aAAc4I,GAAUA,EAAQ3I,SAAU,SAAAC,GAAW2I,EAAU3I,EAAMC,OAAOC,YAIlI,eAACE,GAAA,EAAD,WAIE,cAACf,GAAA,EAAD,CACEjE,MAAM,SACNkE,QAASsJ,EAFX,SAKE,cAAC,KAAD,MAEF,cAACvJ,GAAA,EAAD,CACEjE,MAAM,SACNkE,QAASuJ,EAFX,SAKE,cAAC,KAAD,YAMN,eAACtJ,GAAA,EAAD,CAGE5B,KAAMA,EACN6B,QAASd,EAJX,UAOE,cAACe,GAAA,EAAD,6BAEA,eAACC,GAAA,EAAD,WAEE,cAACC,GAAA,EAAD,CAAOrF,KAAK,QAAQsF,WAAS,EAACC,YAAY,QAAQC,aAAczB,GAASA,EAAO0B,SAAU,SAAAC,GAAW1B,EAAS0B,EAAMC,OAAOC,UAC3H,cAACP,GAAA,EAAD,CAAOrF,KAAK,UAAU6F,WAAS,EAACP,WAAS,EAACC,YAAY,UAAUC,aAAcvB,GAAWA,EAASwB,SAAU,SAAAC,GAAWxB,EAAWwB,EAAMC,OAAOC,cAGpI,IAAZ/B,GACC,eAACiC,GAAA,EAAD,WAIE,cAACf,GAAA,EAAD,CACEjE,MAAM,SACNkE,QAASZ,EAFX,SAKE,cAAC,KAAD,MAEF,cAACW,GAAA,EAAD,CACEjE,MAAM,OACNkE,QAASX,EAFX,SAKE,cAAC,KAAD,YAKR,cAAC0B,GAAA,EAAD,QC3KA/G,GAAiB,SAAAC,GAAK,OAAI,cAACC,EAAA,EAAD,aAAYC,mBAAoB,CAAC,GAAI,IAAK,MAAUF,KAC9EuP,GAAgB,SAACvP,GAAD,OAElB,eAACwP,EAAA,EAAD,2BAAYxP,GAAZ,cACI,cAACuJ,EAAA,EAAD,CAAW1H,MAAM,eAAeR,OAAO,QAAQoO,UAAQ,IACvD,cAACC,GAAA,EAAD,CAAarO,OAAO,OAAOiF,YAAY,kBACvC,cAACoJ,GAAA,EAAD,CAAarO,OAAO,UAAUiF,YAAY,eAC1C,cAACqJ,GAAA,EAAD,CACI9N,MAAM,UACNR,OAAO,cACP+G,UAAU,WACVwH,KAAM,CAAEC,MAAO,OAAQtI,MAAO,OAC9BuB,cAAe,SAAAC,GAAU,MAAK,CAAEuF,QAASvF,IAL7C,SASI,cAACC,EAAA,EAAD,CAAmBC,WAAY,SAAA6G,GAAU,OAAOA,EAAKxB,QAAU,IAAMwB,EAAKvB,cAE9E,cAACmB,GAAA,EAAD,CAAarO,OAAO,OAAOiF,YAAY,qBAKzCc,GAAOC,aAAW,SAAA/G,GAAK,YAAK,CAC9B0D,MAAI,mBACC1D,EAAMC,YAAY+G,GAAG,MAAQ,CAC1BC,OAAQ,EACR1H,MAAO,OACP2H,YAAa,QAJjB,cAMClH,EAAMC,YAAYC,KAAK,MAAQ,CAC5BiH,QAAS,SAPb,MADKJ,CAWTK,KAEEqI,GAAiB,kBACnB,eAAC/I,EAAA,EAAD,CACInF,MAAM,WACNjC,KAAM,cAAC,KAAD,IAFV,UAII,cAACqH,EAAA,EAAD,CACIpF,MAAM,UACN8E,MAAO,CACH4H,SAAU,aAGlB,cAACtH,EAAA,EAAD,CACIpF,MAAM,WACN8E,MAAO,CACH4H,SAAU,aAGlB,cAACtH,EAAA,EAAD,CACIpF,MAAM,cACN8E,MAAO,CACH4H,SAAU,qBASpByB,GAAe,kBACjB,eAAChJ,EAAA,EAAD,CACInF,MAAM,SACNjC,KAAM,cAAC,KAAD,IAFV,UAII,cAACqH,EAAA,EAAD,CACIpF,MAAM,YACN8E,MAAO,CACHsJ,OAAQ,eAGhB,cAAChJ,EAAA,EAAD,CACIpF,MAAM,WACN8E,MAAO,CACHsJ,OAAQ,cAGhB,cAAChJ,EAAA,EAAD,CACIpF,MAAM,YACN8E,MAAO,CACHsJ,OAAQ,mBAOlBtI,GAAgB,kBAClB,cAAC,GAAD,UACI,eAACC,EAAA,EAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,UAOCsI,GAAc,SAAAlQ,GAEvB,IAAMI,EAAUC,aAAc,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,KAAK,SAC9D,OACI,cAACC,EAAA,EAAD,yBAAMsH,MAAO,cAAC,GAAD,IAAmBC,kBAAmB,cAAC,GAAD,IAAiBtH,QAAS,IAAQV,GAArF,IAA4FW,WAAY,cAAC,GAAD,IAAoBwP,QAAS,cAAC,GAAD,IAArI,SAA0J/P,EACtJ,cAACQ,EAAA,EAAD,CACIC,YAAa,SAAAC,GAAM,OAAIA,EAAOC,MAC9BC,cAAe,SAAAF,GAAM,OAAIA,EAAOG,OAChCC,aAAc,SAAAJ,GAAM,OAAIA,EAAOK,SAKnC,eAAC,IAAD,WACI,cAAC,GAAD,CAAkBU,MAAM,SAASR,OAAO,aAAa+G,UAAU,YAE/D,cAAC,GAAD,CAAUvG,MAAM,WAAWR,OAAO,UAAU+G,UAAU,SAEtD,cAAC,GAAD,CAAcvG,MAAM,UAAUR,OAAO,cAAc+G,UAAU,aAC7D,cAACK,EAAA,EAAD,CAAW5G,MAAM,eAAeR,OAAO,QAAQgI,QAAS,CAAE+G,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,aAChH,cAAC,GAAD,CAAa1O,MAAM,SACnB,cAACT,EAAA,EAAD,CAAWC,OAAO,WAElB,cAAC,GAAD,CAAgBA,OAAO,SAAvB,SACI,cAACmP,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAWpP,OAAO,WAI1B,cAACD,EAAA,EAAD,CAAWC,OAAO,aAIlB,cAACoH,EAAA,EAAD,CAAWpH,OAAO,YAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,cAACE,EAAA,EAAD,W,wFCvKZmP,GAAa/M,EAAQ,KAEnBgN,GAAYC,QAAKC,UAGrBC,IAGEC,WAJFC,cAIED,WAHFD,oBAoEIG,IAjEFF,WAFFG,kBAEEH,WADFI,mBAkEc,CACd,CAAEC,IAAK,OAAQrQ,KAAM,OAAQsQ,WAAW,EAAMC,UA5B1B,SAACC,GAErB,OAAIA,EAAOC,IAAP,WAGM,mBAAGC,KAAM,YAAcF,EAAOC,IAAP,WAAvB,SAAmDD,EAAO5K,QAI1D,+BAAQ4K,EAAO5K,SAmB+C+K,YAAY,GACpF,CAAEN,IAAK,UAAWrQ,KAAM,MAAOsQ,WAAW,EAAMC,UAjB/B,SAACC,GAElB,OAAIA,EAAOC,IAAP,QAGM,mBAAGC,KAAM,SAAWF,EAAOC,IAAP,QAApB,SAA6CD,EAAO5K,QAIpD,+BAAQ4K,EAAO5K,SAQ8C+K,YAAY,GACnF,CAAEN,IAAK,UAAWrQ,KAAM,UAAWsQ,WAAW,EAAMC,UAnC7B,SAACC,GAExB,OAAQ,iCAAQA,EAAO5K,OAAS,GAAxB,IAA6B4K,EAAOC,IAAIjD,UAAY,OAiCqBmD,YAAY,EAAMC,eAAgBb,IACnH,CAAEM,IAAK,QAASrQ,KAAM,eAAgBsQ,WAAW,EAAMC,UA5C3B,SAACC,GAG7B,IAAIK,EAAOlB,GAAWa,EAAO5K,MAAO,mBACpC,OAAQ,+BAAQiL,KAwCyEF,YAAY,GACrG,CAAEN,IAAK,MAAOrQ,KAAM,OAAQsQ,WAAW,EAAMC,UAnD1B,SAACC,GAEpB,OAAQ,iCAAQb,GAAWa,EAAOC,IAAP,MAAqB,YAAc,GAAtD,IAA2Dd,GAAWa,EAAO5K,MAAO,YAAc,OAiDpC+K,YAAY,GAClF,CAAEN,IAAK,SAAUrQ,KAAM,SAAUsQ,WAAW,EAAMC,UArEjC,SAACC,GAClB,OAA4B,IAAxBA,EAAO5K,MAAM+G,OAGb,mCACG6D,EAAO5K,MAAMgH,KAAI,SAAAC,GAAI,OAEpB,cAACC,GAAA,EAAD,CAAM/D,MAAM,YAAYjI,MAAO+L,GAAWA,QAOxC,0BAuD+D8D,YAAY,GACrF,CAAEN,IAAK,OAAQrQ,KAAM,eAAgBsQ,WAAW,EAAMK,YAAY,KAI/CG,G,oDAGnB,WAAY7R,GAAQ,IAAD,+BACjB,cAAMA,IAYR8R,eAAiB,SAAAC,GACf,EAAKC,SAAS,CACZC,gBAAiB,EAAKC,MAAMD,gBAAgBE,OAC1CJ,EAAKpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEC,cAhBH,EAqBnBC,iBAAmB,SAAAP,GACjB,IAAIQ,EAAaR,EAAKpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEC,UACjC,EAAKL,SAAS,CACZC,gBAAiB,EAAKC,MAAMD,gBAAgBO,QAC1C,SAAAC,GAAC,OAA+B,IAA3BF,EAAWG,QAAQD,SAzBX,EA6CnBE,mBAAqB,SAACH,EAAQrC,GAC5B,IAAMyC,EAAU,eAAQzC,GAMxB,OALIqC,EAAOK,WACTD,EAAWJ,EAAOM,OAAO1B,KAAOoB,SAEzBI,EAAWJ,EAAOM,OAAO1B,KAE3BwB,GApDU,EAuDnBG,qBAAuB,SAAChB,EAAMiB,GAC5B,OAAOjB,EACJpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEY,MACXR,QAAO,SAAC5E,EAAM6E,EAAGvP,GAChB,OAAOuP,IAAMvP,EAAEwP,QAAQ9E,OA3DV,EA+DnBqF,QAAU,SAAClB,EAAM5B,GACf,OAAOQ,GAAUsC,QAAQ,CAAElB,OAAM5B,aA7DjC,EAAK+B,MAAQ,CACXH,KAAM,GACNE,gBAAiB,GACjB9B,QAAS,IANM,E,sDA6BnB,WAAqB,IAAD,OACd+C,EAAQ,IAAItE,KAChB/L,GAAaS,QAAQ,WAAY,CAACkP,OAAQ,CAAC,MAAS9B,GAAWwC,EAAO,eAAgBvS,WAAY,CAAE6C,KAAM,EAAG9C,QAAS,OACnHgF,MAAK,YAAe,IAAZL,EAAW,EAAXA,KACP,EAAK2M,SAAS,CAAED,KAAM1M,OAIvBO,OAAM,SAAAuN,S,oBA+BX,WAAU,IAAD,OAEDC,EAAeC,KAAKJ,QAAQI,KAAKnB,MAAMH,KAAMsB,KAAKnB,MAAM/B,SAC9D,OAEE,qBAAKtG,MAAO,CAAEyJ,OAAQ,OAAtB,SACE,cAAC,KAAD,CACErC,QAASA,GACTsC,UAAW,SAAAd,GAAC,OAAIW,EAAaX,IAC7Be,UAAWJ,EAAa1F,OACxB+F,eAAgB,SAACC,EAAK7T,GAAN,OACdoK,QAAQC,IAAR,iBAAsBwJ,EAAtB,gCAAiD7T,KAEnD8T,aAAc,CACZC,cAAc,EACdC,mBAAmB,EACnB/B,eAAgBuB,KAAKvB,eACrBQ,iBAAkBe,KAAKf,iBACvBwB,SAAU,CACRC,QAASV,KAAKnB,MAAMD,kBAGxB+B,QAAS,eAAC,WAAD,CAASC,cAAc,EAAvB,UAAoE,IAAtCZ,KAAKnB,MAAMD,gBAAgBvE,QAAgB,cAAC5H,GAAA,EAAD,CAEhFjE,MAAM,cAF0E,SAGhF,cAAC,KAAD,MAC+C,IAAtCwR,KAAKnB,MAAMD,gBAAgBvE,QAAgB,cAAC5H,GAAA,EAAD,CACpDjE,MAAM,iBAD8C,SAEpD,cAAC,KAAD,MANO,OAQTqS,YAAa,SAAA1B,GAAM,OAAI,EAAKR,SAAS,CAAE7B,QAAS,EAAKwC,mBAAmBH,MACxE2B,eAAgB,kBAAM,EAAKnC,SAAS,CAAE7B,QAAS,MAC/C4C,qBAAsB,SAAAqB,GAAS,OAAI,EAAKrB,qBAAqB,EAAKb,MAAMH,KAAMqC,Y,GAvG7CvP,IAAMwP,WCpF7C3D,GAAa/M,EAAQ,KAEnBgN,GAAYC,QAAKC,UAGrBC,IAGEC,WAJFC,cAIED,WAHFD,oBAoEIG,IAjEFF,WAFFG,kBAEEH,WADFI,mBAkEc,CACd,CAAEC,IAAK,OAAQrQ,KAAM,OAAQsQ,WAAW,EAAMC,UA5B1B,SAACC,GAErB,OAAIA,EAAOC,IAAP,WAGM,mBAAGC,KAAM,YAAcF,EAAOC,IAAP,WAAvB,SAAmDD,EAAO5K,QAI1D,+BAAQ4K,EAAO5K,SAmB+C+K,YAAY,GACpF,CAAEN,IAAK,UAAWrQ,KAAM,MAAOsQ,WAAW,EAAMC,UAjB/B,SAACC,GAElB,OAAIA,EAAOC,IAAP,QAGM,mBAAGC,KAAM,SAAWF,EAAOC,IAAP,QAApB,SAA6CD,EAAO5K,QAIpD,+BAAQ4K,EAAO5K,SAQ8C+K,YAAY,GACnF,CAAEN,IAAK,UAAWrQ,KAAM,UAAWsQ,WAAW,EAAMC,UAnC7B,SAACC,GAExB,OAAQ,iCAAQA,EAAO5K,OAAS,GAAxB,IAA6B4K,EAAOC,IAAIjD,UAAY,OAiCqBmD,YAAY,EAAMC,eAAgBb,IACnH,CAAEM,IAAK,QAASrQ,KAAM,eAAgBsQ,WAAW,EAAMC,UA5C3B,SAACC,GAG7B,IAAIK,EAAOlB,GAAWa,EAAO5K,MAAO,mBACpC,OAAQ,+BAAQiL,KAwCyEF,YAAY,GACrG,CAAEN,IAAK,MAAOrQ,KAAM,OAAQsQ,WAAW,EAAMC,UAnD1B,SAACC,GAEpB,OAAQ,iCAAQb,GAAWa,EAAOC,IAAP,MAAqB,YAAc,GAAtD,IAA2Dd,GAAWa,EAAO5K,MAAO,YAAc,OAiDpC+K,YAAY,GAClF,CAAEN,IAAK,SAAUrQ,KAAM,SAAUsQ,WAAW,EAAMC,UArEjC,SAACC,GAClB,OAA4B,IAAxBA,EAAO5K,MAAM+G,OAGb,mCACG6D,EAAO5K,MAAMgH,KAAI,SAAAC,GAAI,OAEpB,cAACC,GAAA,EAAD,CAAM/D,MAAM,YAAYjI,MAAO+L,GAAWA,QAOxC,0BAuD+D8D,YAAY,GACrF,CAAEN,IAAK,OAAQrQ,KAAM,eAAgBsQ,WAAW,EAAMK,YAAY,KAI/C4C,G,oDAGnB,WAAYtU,GAAQ,IAAD,+BACjB,cAAMA,IAYR8R,eAAiB,SAAAC,GACf,EAAKC,SAAS,CACZC,gBAAiB,EAAKC,MAAMD,gBAAgBE,OAC1CJ,EAAKpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEC,cAhBH,EAqBnBC,iBAAmB,SAAAP,GACjB,IAAIQ,EAAaR,EAAKpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEC,UACjC,EAAKL,SAAS,CACZC,gBAAiB,EAAKC,MAAMD,gBAAgBO,QAC1C,SAAAC,GAAC,OAA+B,IAA3BF,EAAWG,QAAQD,SAzBX,EA6CnBE,mBAAqB,SAACH,EAAQrC,GAC5B,IAAMyC,EAAU,eAAQzC,GAMxB,OALIqC,EAAOK,WACTD,EAAWJ,EAAOM,OAAO1B,KAAOoB,SAEzBI,EAAWJ,EAAOM,OAAO1B,KAE3BwB,GApDU,EAuDnBG,qBAAuB,SAAChB,EAAMiB,GAC5B,OAAOjB,EACJpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEY,MACXR,QAAO,SAAC5E,EAAM6E,EAAGvP,GAChB,OAAOuP,IAAMvP,EAAEwP,QAAQ9E,OA3DV,EA+DnBqF,QAAU,SAAClB,EAAM5B,GACf,OAAOQ,GAAUsC,QAAQ,CAAElB,OAAM5B,aA7DjC,EAAK+B,MAAQ,CACXH,KAAM,GACNE,gBAAiB,GACjB9B,QAAS,IANM,E,sDA6BnB,WAAqB,IAAD,OACd+C,EAAQ,IAAItE,KAChB/L,GAAaS,QAAQ,WAAY,CAACkP,OAAQ,CAAC,MAAS9B,GAAWwC,EAAO,cAAe,SAAW,WAAYvS,WAAY,CAAE6C,KAAM,EAAG9C,QAAS,OACzIgF,MAAK,YAAe,IAAZL,EAAW,EAAXA,KACP,EAAK2M,SAAS,CAAED,KAAM1M,OAIvBO,OAAM,SAAAuN,S,oBA+BX,WAAU,IAAD,OAEDC,EAAeC,KAAKJ,QAAQI,KAAKnB,MAAMH,KAAMsB,KAAKnB,MAAM/B,SAC9D,OAEE,qBAAKtG,MAAO,CAAEyJ,OAAQ,OAAtB,SACE,cAAC,KAAD,CACErC,QAASA,GACTsC,UAAW,SAAAd,GAAC,OAAIW,EAAaX,IAC7Be,UAAWJ,EAAa1F,OACxB+F,eAAgB,SAACC,EAAK7T,GAAN,OACdoK,QAAQC,IAAR,iBAAsBwJ,EAAtB,gCAAiD7T,KAEnD8T,aAAc,CACZC,cAAc,EACdC,mBAAmB,EACnB/B,eAAgBuB,KAAKvB,eACrBQ,iBAAkBe,KAAKf,iBACvBwB,SAAU,CACRC,QAASV,KAAKnB,MAAMD,kBAGxB+B,QAAS,eAAC,WAAD,CAASC,cAAc,EAAvB,UAAoE,IAAtCZ,KAAKnB,MAAMD,gBAAgBvE,QAAgB,cAAC5H,GAAA,EAAD,CAEhFjE,MAAM,cAF0E,SAGhF,cAAC,KAAD,MAC+C,IAAtCwR,KAAKnB,MAAMD,gBAAgBvE,QAAgB,cAAC5H,GAAA,EAAD,CACpDjE,MAAM,iBAD8C,SAEpD,cAAC,KAAD,MANO,OAQTqS,YAAa,SAAA1B,GAAM,OAAI,EAAKR,SAAS,CAAE7B,QAAS,EAAKwC,mBAAmBH,MACxE2B,eAAgB,kBAAM,EAAKnC,SAAS,CAAE7B,QAAS,MAC/C4C,qBAAsB,SAAAqB,GAAS,OAAI,EAAKrB,qBAAqB,EAAKb,MAAMH,KAAMqC,Y,GAvG9CvP,IAAMwP,WCpF5C3D,GAAa/M,EAAQ,KAEnBgN,GAAYC,QAAKC,UAGrBC,IAGEC,WAJFC,cAIED,WAHFD,oBAoEIG,IAjEFF,WAFFG,kBAEEH,WADFI,mBAkEc,CACd,CAAEC,IAAK,OAAQrQ,KAAM,OAAQsQ,WAAW,EAAMC,UA5B1B,SAACC,GAErB,OAAIA,EAAOC,IAAP,WAGM,mBAAGC,KAAM,YAAcF,EAAOC,IAAP,WAAvB,SAAmDD,EAAO5K,QAI1D,+BAAQ4K,EAAO5K,SAmB+C+K,YAAY,GACpF,CAAEN,IAAK,UAAWrQ,KAAM,MAAOsQ,WAAW,EAAMC,UAjB/B,SAACC,GAElB,OAAIA,EAAOC,IAAP,QAGM,mBAAGC,KAAM,SAAWF,EAAOC,IAAP,QAApB,SAA6CD,EAAO5K,QAIpD,+BAAQ4K,EAAO5K,SAQ8C+K,YAAY,GACnF,CAAEN,IAAK,UAAWrQ,KAAM,UAAWsQ,WAAW,EAAMC,UAnC7B,SAACC,GAExB,OAAQ,iCAAQA,EAAO5K,OAAS,GAAxB,IAA6B4K,EAAOC,IAAIjD,UAAY,OAiCqBmD,YAAY,EAAMC,eAAgBb,IACnH,CAAEM,IAAK,QAASrQ,KAAM,eAAgBsQ,WAAW,EAAMC,UA5C3B,SAACC,GAG7B,IAAIK,EAAOlB,GAAWa,EAAO5K,MAAO,mBACpC,OAAQ,+BAAQiL,KAwCyEF,YAAY,GACrG,CAAEN,IAAK,MAAOrQ,KAAM,OAAQsQ,WAAW,EAAMC,UAnD1B,SAACC,GAEpB,OAAQ,iCAAQb,GAAWa,EAAOC,IAAP,MAAqB,YAAc,GAAtD,IAA2Dd,GAAWa,EAAO5K,MAAO,YAAc,OAiDpC+K,YAAY,GAClF,CAAEN,IAAK,SAAUrQ,KAAM,SAAUsQ,WAAW,EAAMC,UArEjC,SAACC,GAClB,OAA4B,IAAxBA,EAAO5K,MAAM+G,OAGb,mCACG6D,EAAO5K,MAAMgH,KAAI,SAAAC,GAAI,OAEpB,cAACC,GAAA,EAAD,CAAM/D,MAAM,YAAYjI,MAAO+L,GAAWA,QAOxC,0BAuD+D8D,YAAY,GACrF,CAAEN,IAAK,OAAQrQ,KAAM,eAAgBsQ,WAAW,EAAMK,YAAY,KAI/C6C,G,oDAGnB,WAAYvU,GAAQ,IAAD,+BACjB,cAAMA,IAYR8R,eAAiB,SAAAC,GACf,EAAKC,SAAS,CACZC,gBAAiB,EAAKC,MAAMD,gBAAgBE,OAC1CJ,EAAKpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEC,cAhBH,EAqBnBC,iBAAmB,SAAAP,GACjB,IAAIQ,EAAaR,EAAKpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEC,UACjC,EAAKL,SAAS,CACZC,gBAAiB,EAAKC,MAAMD,gBAAgBO,QAC1C,SAAAC,GAAC,OAA+B,IAA3BF,EAAWG,QAAQD,SAzBX,EA6CnBE,mBAAqB,SAACH,EAAQrC,GAC5B,IAAMyC,EAAU,eAAQzC,GAMxB,OALIqC,EAAOK,WACTD,EAAWJ,EAAOM,OAAO1B,KAAOoB,SAEzBI,EAAWJ,EAAOM,OAAO1B,KAE3BwB,GApDU,EAuDnBG,qBAAuB,SAAChB,EAAMiB,GAC5B,OAAOjB,EACJpE,KAAI,SAAAyE,GAAC,OAAIA,EAAEY,MACXR,QAAO,SAAC5E,EAAM6E,EAAGvP,GAChB,OAAOuP,IAAMvP,EAAEwP,QAAQ9E,OA3DV,EA+DnBqF,QAAU,SAAClB,EAAM5B,GACf,OAAOQ,GAAUsC,QAAQ,CAAElB,OAAM5B,aA7DjC,EAAK+B,MAAQ,CACXH,KAAM,GACNE,gBAAiB,GACjB9B,QAAS,IANM,E,sDA6BnB,WAAqB,IAAD,OACd+C,EAAQ,IAAItE,KAChB/L,GAAaS,QAAQ,WAAY,CAACkP,OAAQ,CAAC,MAAS9B,GAAWwC,EAAO,cAAe,SAAW,WAAYvS,WAAY,CAAE6C,KAAM,EAAG9C,QAAS,OACzIgF,MAAK,YAAe,IAAZL,EAAW,EAAXA,KACP,EAAK2M,SAAS,CAAED,KAAM1M,OAIvBO,OAAM,SAAAuN,S,oBA+BX,WAAU,IAAD,OAEDC,EAAeC,KAAKJ,QAAQI,KAAKnB,MAAMH,KAAMsB,KAAKnB,MAAM/B,SAC9D,OAEE,qBAAKtG,MAAO,CAAEyJ,OAAQ,OAAtB,SACE,cAAC,KAAD,CACErC,QAASA,GACTsC,UAAW,SAAAd,GAAC,OAAIW,EAAaX,IAC7Be,UAAWJ,EAAa1F,OACxB+F,eAAgB,SAACC,EAAK7T,GAAN,OACdoK,QAAQC,IAAR,iBAAsBwJ,EAAtB,gCAAiD7T,KAEnD8T,aAAc,CACZC,cAAc,EACdC,mBAAmB,EACnB/B,eAAgBuB,KAAKvB,eACrBQ,iBAAkBe,KAAKf,iBACvBwB,SAAU,CACRC,QAASV,KAAKnB,MAAMD,kBAGxB+B,QAAS,eAAC,WAAD,CAASC,cAAc,EAAvB,UAAoE,IAAtCZ,KAAKnB,MAAMD,gBAAgBvE,QAAgB,cAAC5H,GAAA,EAAD,CAEhFjE,MAAM,cAF0E,SAGhF,cAAC,KAAD,MAC+C,IAAtCwR,KAAKnB,MAAMD,gBAAgBvE,QAAgB,cAAC5H,GAAA,EAAD,CACpDjE,MAAM,iBAD8C,SAEpD,cAAC,KAAD,MANO,OAQTqS,YAAa,SAAA1B,GAAM,OAAI,EAAKR,SAAS,CAAE7B,QAAS,EAAKwC,mBAAmBH,MACxE2B,eAAgB,kBAAM,EAAKnC,SAAS,CAAE7B,QAAS,MAC/C4C,qBAAsB,SAAAqB,GAAS,OAAI,EAAKrB,qBAAqB,EAAKb,MAAMH,KAAMqC,Y,GAvG7CvP,IAAMwP,W,0FCvFjDG,OAAOC,OAASA,KACC9Q,EAAQ,KAAzB,IAEMsN,GAAU,CACd,CACElQ,KAAM,OAAQyJ,OAAQ,OAAQkK,aAAc,IAAKC,OAAQ,YAAsB,IAAnBhO,EAAkB,EAAlBA,MAAOtB,EAAW,EAAXA,KAEjE,OAAIA,EAAI,WAEE,mBAAGoM,KAAM,YAAcpM,EAAI,WAA3B,SAA6CsB,IAI7C,+BAAQA,MAItB,CACE5F,KAAM,UAAWyJ,OAAQ,MAAOkK,aAAc,IAAKC,OAAQ,YAAsB,IAAnBhO,EAAkB,EAAlBA,MAAOtB,EAAW,EAAXA,KACnE,OAAIA,EAAI,QAGE,mBAAGoM,KAAM,SAAWpM,EAAI,QAAxB,SAAuCsB,IAIvC,+BAAQA,MAGtB,CACE5F,KAAM,UAAWyJ,OAAQ,UAAWkK,aAAc,IAAKC,OAAQ,YAAsB,IAAnBhO,EAAkB,EAAlBA,MAAOtB,EAAW,EAAXA,KACvE,OAAQ,iCAAQsB,GAAS,GAAjB,IAAsBtB,EAAKkJ,UAAY,QAGnD,CACExN,KAAM,QAASyJ,OAAQ,QAASkK,aAAc,IAAME,aAAcC,KAAYC,kBAAmB,SAAC9U,EAAD,GAC/F,MAAQ,CACN0Q,WAAY,iBACZpK,YAAuB,IAH4F,EAAZyO,MAG5E,6BAA+B,0BAG9DJ,OAAQ,YAA2C,IAAxChO,EAAuC,EAAvCA,MAAuC,EAAhCqO,UAAatE,WAC7B,OAAO+D,KAAO9N,GAAO6C,OAAO,oBAGhC,CACEzI,KAAM,SAAUyJ,OAAQ,SAAUkK,aAAc,IAAMC,OAAQ,YAAgB,IAAbhO,EAAY,EAAZA,MAC/D,OAAqB,IAAjBA,EAAM+G,OAGN,mCACG/G,EAAMgH,KAAI,SAAAC,GAAI,OAEb,cAACC,GAAA,EAAD,CAAM/D,MAAM,YAAYjI,MAAO+L,GAAWA,QAOxC,4BAKVqH,GAAY,CAAEC,UAAW,KAEzBC,GAAqB,CAEzB,CAAEpU,KAAM,QAASqU,SAAU,KAAMC,KAAM,OAAQ1O,MAAO,KAGnC2O,G,oDAEnB,WAAYtV,GAAQ,IAAD,+BACjB,cAAMA,IAEDkS,MAAQ,CACXH,KAAM,GACNwD,SAAU,IALK,E,sDAWnB,WAAqB,IAAD,OAElBjS,GAAQ,YACLoC,MAAK,YAAe,IAAZL,EAAW,EAAXA,KACP,EAAK2M,SAAS,CAAED,KAAM1M,OAIvBO,OAAM,SAAAuN,S,oBAMX,WAAU,IAAD,OACP,OACE,qCACE,gCAC+C,IAA5CqC,OAAOC,KAAKpC,KAAKnB,MAAMqD,UAAU7H,QAAgB,cAAC5H,GAAA,EAAD,CAChDjE,MAAM,cAD0C,SAEhD,cAAC,KAAD,MAE2C,IAA5C2T,OAAOC,KAAKpC,KAAKnB,MAAMqD,UAAU7H,QAAgB,cAAC5H,GAAA,EAAD,CAChDjE,MAAM,iBAD0C,SAEhD,cAAC,KAAD,SAGJ,cAAC,KAAD,CACE6T,WAAW,KACXzE,QAASA,GACT0E,WAAYtC,KAAKnB,MAAMH,KACvBlI,MAAOoL,GACPE,mBAAoBA,GACpBS,kBAAmB,SAAAC,GAAM,OAAI,EAAK7D,SAAS,CAAEuD,SAAUM,EAAON,YAC9DO,aAAW,EACXC,gBAAc,EACdC,iBAAe,W,GAjDanR,IAAMwP,WC3E5C,IAEI,cAAC,KAAD,CAAS4B,OAAK,EAACC,KAAK,iBAAiB9J,UAAWyF,KAChD,cAAC,KAAD,CAASoE,OAAK,EAACC,KAAK,gBAAgB9J,UAAWkI,KAC/C,cAAC,KAAD,CAAS2B,OAAK,EAACC,KAAK,iBAAiB9J,UAAWmI,KAChD,cAAC,KAAD,CAAS0B,OAAK,EAACC,KAAK,YAAY9J,UAAWkJ,M,8ECJhC,eAIR,IAHHvS,EAGE,EAHFA,aACAF,EAEE,EAFFA,aACAsT,EACE,EADFA,QAEMC,EAAUC,aAAgB,CAC5BC,MAAOC,KACPC,OAAQC,aAAcN,KAQpBO,EAAI,WAAG,SAAUC,IAAV,kEACT,OADS,SACHC,aACF,CACIC,aAAUhU,EAAcE,IAE1B4K,IAAImJ,OALD,oCAAUH,MAQjBI,EAAiBC,eAEjBC,EAQFC,KAEEC,EAAQC,cAvBe,SAAClF,EAAOmF,GAAR,OACzBjB,EAAQiB,EAAOhC,OAASiC,KAAcpF,OAAQqF,EAAWF,KAwBzD,GACAJ,EACIO,aACIT,EACAU,aAAiBtB,MAO7B,OADAY,EAAeW,IAAIhB,GACZS,G,+BChDEQ,GAAc,SAAA3X,GAAK,OAC5B,cAACS,EAAA,EAAD,2BAAUT,GAAV,aACI,eAAC4X,GAAA,EAAD,CAAUC,SAAS,OAAnB,UACI,cAACzW,EAAA,EAAD,CAAWC,OAAO,OAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,gBAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,cAACyW,GAAA,EAAD,CAAazW,OAAO,WACpB,cAACC,EAAA,EAAD,CAAYD,OAAO,UACnB,cAACD,EAAA,EAAD,CAAWC,OAAO,WAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,cAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,WAClB,cAACD,EAAA,EAAD,CAAWC,OAAO,oBCHxB8U,I,QAAU4B,eAuCDC,GApCH,WAAM,IpB8BeC,EoB9BhB,EAGuBpT,YAAe,GAHtC,wBAYf,OpBP0B,SAACqT,GAEpBtV,GAAUK,SAAS,CAACkV,SAAU,4FAA4FzS,MAAK,SAAC0S,GAEjIA,GAEFnO,QAAQC,IAAI,6BAA8BkO,GAC1CF,GAAc,KAIdjO,QAAQC,IAAI,wEACZgO,GAAc,OAIftS,OAAM,SAACC,GACRoE,QAAQC,IAAI,6CAA8CrE,GAC1DwS,uBAAoBlF,MAAM,6BAA8B,uCAAwC,KAAQ,WACtGmF,MAAM,kBoBpBVC,CAJe,MpB8BgBN,EoBxBd,SAAAO,GAEfH,uBAAoBI,QAAQD,EAAQE,aAAaC,KAAMH,EAAQE,aAAa1W,QpBwB9EY,GAAUgW,WAAU,SAAAC,GACnBZ,EAASY,MoBpBV,cAAC,IAAD,CACM1B,MAAO2B,GAAiB,CACpB/V,gBACAF,gBACAsT,aAJV,SAOM,eAAC,KAAD,CAAyB4C,MAAOC,KAAhC,UACA,cAAC,yBAAD,IACH,eAACC,EAAA,EAAD,CAAOC,kBAAgB,EAACC,OAAQ/L,GAAU+I,QAASA,GAASiD,aAAcC,GAAkBC,UAAWC,GAAW1W,aAAcA,GAAcE,aAAcA,GAA5J,UAEG,cAACyW,EAAA,EAAD,CAAUzY,KAAK,UAAW0C,KAAMtD,EAAWP,KAAM6Z,KAAUC,OAAQjY,EAAY+K,GAAG,WAAWmN,KAAM7X,EAAUuH,QAAS,CAAE,MAAS,aAClI,cAACmQ,EAAA,EAAD,CAAUzY,KAAK,OAAO0C,KAAMqE,GAAU4R,OAAQjQ,GAAWkQ,KAAMjR,KAC/D,cAAC8Q,EAAA,EAAD,CAAUzY,KAAK,aAAa0C,KAAMmW,MAClC,cAACJ,EAAA,EAAD,CAAUzY,KAAK,WAAW0C,KAAMyM,KAChC,cAACsJ,EAAA,EAAD,CAAUzY,KAAK,WAAW0C,KAAMmW,MAChC,cAACJ,EAAA,EAAD,CAAUzY,KAAK,WAAW0C,KAAMkU,cCxCxBkC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBrU,MAAK,YAAkD,IAA/CsU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS1F,OACP,cAAC,IAAM2F,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.46ac166b.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;\n","import * as React from \"react\";\nimport { List, Datagrid,Edit ,Pagination,     EditButton ,SimpleList, TextField, EmailField, TextInput, Create, SimpleForm} from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\n\nexport const UserList = props =>{\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n   return (\n    <List  perPage={50} {...props} pagination={<PostPagination />} >{isSmall ? (\n        <SimpleList\n            primaryText={record => record.name}\n            secondaryText={record => record.email}\n            tertiaryText={record => record.phone}\n        />\n    ) : (\n    \n      \n    <CustomizableDatagrid>\n            <TextField source=\"name\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"instagram\" />\n         <EditButton/>\n         </CustomizableDatagrid>\n  \n       )}\n    </List>\n);}\n\nconst PostTitle = ({ record }) => {\n    return <span>Client {record ? `\"${record.name}\"` : ''}</span>;\n }\n\nexport const UserCreate = props => (\n    <Create {...props}>\n         <SimpleForm>\n             <TextInput source=\"name\" label='Name' />\n             <TextInput source=\"phone\" label=\"Phone\" />\n             <TextInput source=\"email\" label=\"Email\" />\n             <TextInput source=\"instagram\" label=\"Instagram\" />\n         </SimpleForm>\n     </Create>\n  );\n\n  export const UserEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <SimpleForm>\n        <TextInput source=\"name\" label='Name' />\n             <TextInput source=\"phone\" label=\"Phone\" />\n             <TextInput source=\"email\" label=\"Email\" />\n             <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Edit>\n);","import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n\n} from 'react-admin-firebase';\n\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { NotificationManager} from 'react-notifications';\n\nconst config = {\n  apiKey: \"AIzaSyAUqOhdFbfRiCRqSzxKpYeTppBGsHfAAug\",\n  authDomain: \"admin-a4a00.firebaseapp.com\",\n  databaseURL: \"https://admin-a4a00-default-rtdb.firebaseio.com\",\n  projectId: \"admin-a4a00\",\n  storageBucket: \"admin-a4a00.appspot.com\",\n  messagingSenderId: \"328849622350\",\n  appId: \"1:328849622350:web:cf2cd21a20f108e7aeca1f\",\n  measurementId: \"G-YKBC2Q28P1\"\n\n\n};\nfirebase.initializeApp(config);\n\n\n const messaging = firebase.messaging();\n\n\n export const getFCMToken = (setTokenFound) => {\n\n  return messaging.getToken({vapidKey: 'BGXh163BEaceHzjq8oIfgZfCnHEze0njY12K3FFlv8N0lLtNYTsKWpE0L7darB0Yiqzt2P_6VCcuHnSvo6beecs'}).then((currentToken) => {\n  \n    if (currentToken) {\n\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true);\n      // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false);\n     \n      // shows on the UI that permission is required \n    }\n  }).catch((err) => {\n    console.log('An error occurred while retrieving token. ', err);\n    NotificationManager.error('Notifications not enabled!', 'Allow notifications and refresh page', 500000, () => {\n      alert('callback');\n    });\n    // catch error while creating client token\n  });\n}\n\nexport const onMessageReceved = (callback) => {\n\n  messaging.onMessage(payloaf=>{\n   callback(payloaf)\n   })\n  }\n\nconst options = {};\n\nexport const dataProvider = FirebaseDataProvider(config, options);\n\nexport const authProvider = FirebaseAuthProvider(config);\n\nexport const getToken = async () => {\n\n  let token = await authProvider.checkAuth()\n  return token._lat\n\n}\n\nexport const getList = async (haha) => {\n  let list = await dataProvider.getList(haha, { pagination: { page: 1, perPage: 100 }, })\n  return list\n}\n\n\n\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport {\n\n\n\n    useNotify,\n    useUnselectAll,\n    BulkDeleteButton,\n    useGetIdentity,\n    Button,\n    Loading\n\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Input from '@material-ui/core/Input';\nimport SendIcon from '@material-ui/icons/Send';\nimport {getToken} from './authProvider'\n\nvar axios = require('axios');\nvar qs = require('qs');\n\n\n\nconst DogBulk =  ({ selectedIds }) => {\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n          },\n        },\n      }));    \n\n\n    const [open, setOpen] = useState(false);\n\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const { identity, loading: identityLoading } = useGetIdentity();\n    const classes = useStyles();\n    const [topic, setTopic] = React.useState();\n    const [message, setMessage] = React.useState();\n    const [loading, setLoading] = useState(false);\n   \n    const handleClick = () => setOpen(true);\n    const handleDialogClose =  () => { setOpen(false);}\n\n    const handleConfirm = async () => {\n      setLoading(true)\n      let token = await getToken()\n    \n\n        var data = qs.stringify([token,selectedIds,'dogs', topic, message]);\n\n        var config = {\n          method: 'post',\n          url: 'https://7a314e3ed3bb.ngrok.io',\n          headers: { \n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          data : data\n        };\n        \n        axios(config)\n        .then(function (res) {\n          setLoading(false)\n          setOpen(false);\n          notify('Messages sent');\n          unselectAll('dogs');\n          setTopic(null)\n          setMessage(null)\n\n        })\n        .catch(function (err) {\n          setLoading(false)\n          notify('Error: Could not reach server', 'warning')\n\n        });\n\n\n    };\n\n//        \n\n\n\n\n\n\n    return (\n        <Fragment>\n            <Button label=\"Text clients\" onClick={handleClick}  />\n\n            <Dialog\n\n                  \n                    open={open}\n                    onClose={handleDialogClose}\n                >\n                    \n                    <DialogTitle>Message Owners</DialogTitle>\n                   \n                      <DialogContent> \n\n                        <Input name='Topic' fullWidth placeholder=\"Topic\" defaultValue={topic && topic } onChange={event =>{setTopic(event.target.value)}}  />\n                        <Input name='Message' multiline fullWidth placeholder='Message' defaultValue={message && message } onChange={event =>{setMessage(event.target.value)}}  />\n\n                      </DialogContent>\n                      {loading===false &&\n                      <DialogActions>\n                 \n   \n                 \n                        <Button\n                            label=\"Cancel\"\n                            onClick={handleDialogClose}\n                \n                        >\n                            <IconCancel />\n                        </Button>\n                  <Button\n                            label=\"Send\"\n                            onClick={handleConfirm}\n                            \n                        >\n                            <SendIcon />\n                        </Button>\n                    </DialogActions>}\n                    \n                    </Dialog>\n        <BulkDeleteButton  />\n        </Fragment>\n        \n    );\n}\n\n \n\nexport default DogBulk;","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField,TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField\n  \n} from 'react-admin';\nimport { useMediaQuery,  Card as MuiCard, CardContent, withStyles  } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOnOutlined';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport DogBulk from '../components/dogsBulk'\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\n\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\nconst PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Owner\" source=\"owner\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\n\n\nconst MaleFemaleFilter = () => (\n    <FilterList label=\"Sex\" icon={<AccessTimeIcon />}>\n\n    \n        <FilterListItem\n            label=\"Male\"\n            value={{\n                sex: \"M\"\n            }}\n        />\n         <FilterListItem\n            label=\"Female\"\n            value={{\n               sex: 'F'\n  \n            }}\n        />\n        <FilterListItem\n            label=\"Desexed\"\n            value={{\n               desexed: true\n  \n            }}\n        />\n    </FilterList>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n        <FilterLiveSearch source=\"dog_name\" />\n\n            <MaleFemaleFilter />\n        </CardContent>\n    </Card>\n);\n\nexport const DogList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} perPage={50} pagination={<PostPagination />}  bulkActionButtons={<DogBulk />}  {...props}>\n         \n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.dog_name}\n                    secondaryText={record =>record.Client}\n                />\n            ) : (\n                \n                <CustomizableDatagrid>\n                      <TextField source=\"dog_name\" label='Dog Name' />\n                    <ReferenceField label=\"Client\" source=\"owner\" reference=\"clients\"  >\n                        <TextField source=\"name\"  />\n                    </ReferenceField>\n                    <ReferenceField label=\"Breed\" source='breed' reference=\"dog_breeds\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <SelectField source=\"sex\" choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} />\n                    <BooleanField source=\"desexed\" label='Desexed' />\n                    <EmailField source=\"vet_email\" label='Vet Email' />\n                    <TextField source=\"vet\" label='Vet' />\n                    <DateField source=\"kc_due\" label='KC Due' />\n                    <DateField source=\"c3_due\" label='C3 Due' />\n                    <DateField source=\"c5_due\" label='C5 Due' />\n                    <EditButton />\n                    </CustomizableDatagrid>\n \n            )}\n    \n        </List>\n    );\n}\nconst PostTitle = ({ record }) => {\n       return <span>Dog {record ? `\"${record.dog_name}\"` : ''}</span>;\n    }\n\nexport const DogEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n        <TextInput source=\"dog_name\" label='Dog Name' />\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"breed\" reference=\"dog_breeds\"><AutocompleteInput optionValue=\"id\" optionText=\"name\" /></ReferenceInput>\n        \n          <SelectInput source='sex'  choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/><BooleanInput\nsource=\"desexed\"\noptions={{\n    checkedIcon: <FavoriteIcon />,\n}}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n    </Edit>\n);\n\n\n\nexport const DogCreate = props => (\n      <Create {...props}>\n                 <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n           <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n            \n               <TextInput source=\"dog_name\" label='Dog Name' />\n               <TextInput  source=\"breed\" label='Breed' />\n               <SelectInput source='sex' choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/>\n<BooleanInput\n    source=\"desexed\"\n    options={{\n        checkedIcon: <FavoriteIcon />,\n    }}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n       </Create>\n    \n    );\n","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","export default __webpack_public_path__ + \"static/media/notIcon.3ae80bc9.png\";","import Notifications from \"react-notifications-menu\";\nimport notIcon from '../notIcon.png'\n\nconst Notifis = (props)=>{\n\n\n    return (\n        <Notifications\n        data={[\n          {\n\n            message: 'Kameshwaran S had shared a feedback with you.',\n            detailPage: '/',\n          },\n          {\n\n            message: (\n              <p>\n                Kameshwaran S had shared a{' '}\n                <span style={{ color: '#7ac2fa' }}>feedback</span> with you.\n              </p>\n            ),\n            detailPage: '/',\n          },\n        ]}\n        icon={notIcon}\n        cardOption={data => console.log(data)}\n        viewAllbtn={{ text: 'see all', linkTo: '/seeAll' }}\n        markAsRead={data => console.log(data)}\n        headerBackgroundColor='red'\n        header={\n          {\n            title: 'Notifications',\n            option: { text: 'View All', onClick: () => { } }\n          }\n        }\n      />\n    )\n}\n\nexport default Notifis","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notifis from './MyNotifis'\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\n\nconst MyAppBar = props => {\n  const classes = useStyles()\n\n\n  return (\n    <AppBar {...props}>\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n\n      <span className={classes.spacer} />\n      <Notifis/>\n    </AppBar>\n  )\n};\n\nexport default MyAppBar;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DashboardMenuItem, MenuItemLink, getResources } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\n\n\n\nfunction NestedList({ onMenuClick, logout }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const resources = useSelector(getResources);\n\n  const linkBookingrange = {\n    pathname: \"/bookings\",\n    hash: \"bookingsrange\"\n  }\n\n\n  return (\n\n    <List\n      component=\"nav\"\n      className={classes.root}\n    >\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <MenuItemLink\n        key='clients'\n        to='/clients'\n        primaryText='Clients'\n        leftIcon={\n\n          <PeopleIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <PetsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dogs\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dogs'\n          to='/dogs'\n          primaryText='All Dogs'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dog_breeds'\n          to='/dog_breeds'\n          primaryText='Dog breeds'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n      </Collapse>\n      <ListItem button onClick={handleClick1}>\n        <ListItemIcon>\n          <CalendarTodayIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Bookings\" />\n        {open1 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookings'\n          to='/bookings'\n          primaryText='All Bookings'\n          leftIcon={\n\n            <EventNoteIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookingstoday'\n          to='/bookingstoday'\n\n          primaryText='Bookings Today'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaydaycare'\n          to='/todaydaycare'\n\n          primaryText='Today Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaygrooming'\n          to='/todaygrooming'\n\n          primaryText='Today Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='grooming'\n          to='/grooming'\n\n          primaryText='Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='services'\n          to='/services'\n          primaryText='Services'\n          leftIcon={\n\n            <AssignmentIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick2}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Payments\" />\n        {open2 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='payments'\n          to='/payments'\n          primaryText='All Payments'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n\n      </Collapse>\n    </List>\n  );\n}\n\nexport { NestedList }\n\n  ;","import { Layout } from 'react-admin';\nimport MyAppBar from './MyAppbar'\nimport  {NestedList} from './myMenu';\n\n\nconst MyLayout = props => <Layout\n    {...props}\n\n    menu={NestedList}\n    appBar={MyAppBar}\n/>;\n\nexport default MyLayout;","\nimport Chip from '@material-ui/core/Chip'\n\n\n\n\nconst TextArrayField = ({ record, source }) => {\n\n  const array = record[source]\n  if (typeof array === 'undefined' || array === null || array.length === 0) {\n    return <div/>\n  } else {\n    return (\n      <>\n        {array.map(item => \n       \n        <Chip color='secondary' label={item} key={item}/>\n)}\n      </>\n    )    \n  }\n}\nTextArrayField.defaultProps = { addLabel: true }\n\nexport default TextArrayField","\nimport { linkToRecord } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\n\nexport const MyClientRefField = ({ record, source }) => {\n\n  MyClientRefField.defaultProps = {filterBy : record.name}\n\n    if (record[source]) {\n        const linkToUser = linkToRecord('/clients', record[source], ); //'show'\n      \n    \n\n        return ( <Link to={linkToUser}>{record.name}</Link>\n\n\n       )\n    } else {\n      return (\n     \n        <span >{record.name}</span>\n     \n      )    \n    }\n\n    \n}\nexport const MyServiceRef = ({ record, source }) => {\n\n\n\n    if (record[source]) {\n        const linkToService = linkToRecord('/services', record[source]);\n      \n    \n\n        return ( <Link to={linkToService}>{record.service + ' ' + record.category}</Link>\n\n\n       )\n    } else {\n      return (\n     \n        <span >{record.service + ' ' + record.category}</span>\n     \n      )    \n    }\n  \n    \n}\n\n\nexport const MydogRef = ({ record, source }) => {\n\n  \n\n    if (record[source]) {\n        const linkToDogs = linkToRecord('/dogs', record[source]);\n      \n    \n\n        return ( <Link to={linkToDogs}>{record.dogName}</Link>\n\n\n       )\n    } else if (!record[source]) {\n      return (\n     \n        <span >{record.dogName}</span>\n     \n      )    \n    }\n    \n}\n\nexport const MytimeRange = ({ record }) => {\n\n\n\n    return (\n   \n      <span >{new Date (record.start).toLocaleString().split(',')[1].trim() + ' - ' + new Date (record.end).toLocaleString().split(',')[1].trim()}</span>\n   \n    )    \n  \n  \n}\n\n\n\n    ","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport {\n\n\n\n  useNotify,\n  useUnselectAll,\n  BulkDeleteButton,\n  useGetIdentity,\n  Button,\n  Loading\n\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Input from '@material-ui/core/Input';\nimport SendIcon from '@material-ui/icons/Send';\nimport { getToken } from './authProvider'\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nvar axios = require('axios');\nvar qs = require('qs');\n\n\n\n\nconst BookingBulk = ({ selectedIds }) => {\n\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\n\n  const [open, setOpen] = useState(false);\n  const [open1, setOpen1] = useState(false);\n\n  const notify = useNotify();\n  const unselectAll = useUnselectAll();\n  const { identity, loading: identityLoading } = useGetIdentity();\n  const classes = useStyles();\n  const [topic, setTopic] = React.useState();\n  const [message, setMessage] = React.useState();\n  const [amount, setAmount] = React.useState();\n  const [loading, setLoading] = useState(false);\n\n  const handleClick = () => setOpen(true);\n  const handleChargeClick = () => setOpen1(true);\n  const handleDialogClose = () => { setOpen(false); }\n  const handleDialogClose1 = () => { setOpen1(false); }\n  const handleConfirm = async () => {\n    setLoading(true)\n    let token = await getToken()\n\n\n    var data = qs.stringify([token, selectedIds, 'bookings', topic, message]);\n\n    var config = {\n      method: 'post',\n      url: 'https://7a314e3ed3bb.ngrok.io',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (res) {\n        setLoading(false)\n        setOpen(false);\n        notify('Messages sent');\n        unselectAll('bookings');\n        setTopic(null)\n        setMessage(null)\n\n      })\n      .catch(function (err) {\n        setLoading(false)\n        notify('Error: Could not reach server', 'warning')\n\n      });\n\n\n  };\n  const handleConfirm1 = async () => {\n    setLoading(true)\n    let token = await getToken()\n\n\n    var data = qs.stringify([token, selectedIds, amount]);\n\n    var config = {\n      method: 'post',\n      url: 'https://a9548241041d.ngrok.io/talk',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (res) {\n        setLoading(false)\n        setOpen(false);\n        notify('Messages sent');\n        unselectAll('bookings');\n\n        setAmount(null)\n\n      })\n      .catch(function (err) {\n        setLoading(false)\n        notify('Error: Could not reach server', 'warning')\n\n      });\n\n\n  };\n\n\n  //        \n\n\n\n\n\n\n  return (\n\n    <Fragment>\n      {selectedIds.length == 1 && <Button label=\"Charge Card\" onClick={handleChargeClick} />}\n      <Button label=\"Text clients\" onClick={handleClick} />\n\n      <Dialog\n\n\n        open={open1}\n        onClose={handleDialogClose1}\n      >\n\n        <DialogTitle>Charge Card on File</DialogTitle>\n\n        <DialogContent>\n\n          <Input name='Amount' fullWidth placeholder=\"Amount\" defaultValue={amount && amount} onChange={event => { setAmount(event.target.value) }} />\n\n\n        </DialogContent>\n        <DialogActions>\n\n\n\n          <Button\n            label=\"Cancel\"\n            onClick={handleDialogClose1}\n\n          >\n            <IconCancel />\n          </Button>\n          <Button\n            label=\"Charge\"\n            onClick={handleConfirm1}\n\n          >\n            <MonetizationOnIcon />\n          </Button>\n        </DialogActions>\n\n      </Dialog>\n\n      <Dialog\n\n\n        open={open}\n        onClose={handleDialogClose}\n      >\n\n        <DialogTitle>Message Owners</DialogTitle>\n\n        <DialogContent>\n\n          <Input name='Topic' fullWidth placeholder=\"Topic\" defaultValue={topic && topic} onChange={event => { setTopic(event.target.value) }} />\n          <Input name='Message' multiline fullWidth placeholder='Message' defaultValue={message && message} onChange={event => { setMessage(event.target.value) }} />\n\n        </DialogContent>\n        {loading === false &&\n          <DialogActions>\n\n\n\n            <Button\n              label=\"Cancel\"\n              onClick={handleDialogClose}\n\n            >\n              <IconCancel />\n            </Button>\n            <Button\n              label=\"Send\"\n              onClick={handleConfirm}\n\n            >\n              <SendIcon />\n            </Button>\n          </DialogActions>}\n\n      </Dialog>\n      <BulkDeleteButton />\n    </Fragment>\n\n  );\n}\n\n\n\nexport default BookingBulk;","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField, TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField, ArrayField,\n    ChipField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ReferenceManyField,\n    SearchInput,\n    ReferenceArrayInput\n\n} from 'react-admin';\nimport { useMediaQuery, Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport TextArrayField from '../fields/myChipField'\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { MyClientRefField, MyServiceRef, MydogRef } from '../fields/myRefField'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport BookingBulk from '../components/BookingBulk'\n\nimport { MytimeRange } from '../fields/myRefField'\n\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\nconst BookingFilter = (props) => (\n\n    <Filter {...props}>\n        <DateInput label=\"Booking Date\" source=\"start\" alwaysOn />\n        <SearchInput source=\"name\" placeholder='Search client' />\n        <SearchInput source=\"dogName\" placeholder='Search dog' />\n        <ReferenceArrayInput\n            label=\"Service\"\n            source=\"service_ref\"\n            reference=\"services\"\n            sort={{ field: 'name', order: 'ASC' }}\n            filterToQuery={searchText => ({ service: searchText })}\n\n\n        >\n            <AutocompleteInput optionText={word => { return word.service + ' ' + word.category }} />\n        </ReferenceArrayInput>\n        <SearchInput source=\"code\" placeholder='Search code' />\n\n    </Filter>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst CategoryFilter = () => (\n    <FilterList\n        label=\"Category\"\n        icon={<ControlPointIcon />}\n    >\n        <FilterListItem\n            label=\"Daycare\"\n            value={{\n                category: 'daycare'\n            }}\n        />\n        <FilterListItem\n            label=\"Grooming\"\n            value={{\n                category: 'stylist'\n            }}\n        />\n        <FilterListItem\n            label=\"Coiffuriste\"\n            value={{\n                category: 'coiffuriste'\n            }}\n        />\n\n\n    </FilterList>\n);\n\n\nconst StatusFilter = () => (\n    <FilterList\n        label=\"Status\"\n        icon={<ControlPointIcon />}\n    >\n        <FilterListItem\n            label=\"Confirmed\"\n            value={{\n                status: 'confirmed'\n            }}\n        />\n        <FilterListItem\n            label=\"Modified\"\n            value={{\n                status: 'modified'\n            }}\n        />\n        <FilterListItem\n            label=\"Cancelled\"\n            value={{\n                status: 'cancelled'\n            }}\n        />\n    </FilterList>\n);\n\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n            <CategoryFilter />\n            <StatusFilter />\n        </CardContent>\n    </Card>\n);\n\n\n\nexport const BookingList = props => {\n\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} bulkActionButtons={<BookingBulk />} perPage={50} {...props} pagination={<PostPagination />} filters={<BookingFilter />} >{isSmall ? (\n            <SimpleList\n                primaryText={record => record.name}\n                secondaryText={record => record.email}\n                tertiaryText={record => record.phone}\n            />\n        ) : (\n\n\n            <CustomizableDatagrid>\n                <MyClientRefField label=\"Client\" source=\"client_ref\" reference=\"clients\" />\n\n                <MydogRef label=\"Dog Name\" source='dog_ref' reference='dogs' />\n\n                <MyServiceRef label=\"Service\" source=\"service_ref\" reference=\"services\" />\n                <DateField label='Booking Date' source=\"start\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n                <MytimeRange label='Time' />\n                <TextField source=\"status\" />\n\n                <TextArrayField source=\"addOns\">\n                    <SingleFieldList>\n                        <ChipField source=\"id\" />\n                    </SingleFieldList>\n                </TextArrayField>\n\n                <TextField source=\"comments\" />\n\n\n\n                <DateField source=\"updated\" />\n                <TextField source=\"code\" />\n                <EditButton />\n            </CustomizableDatagrid>\n\n        )}\n        </List>\n\n    );\n}\n","import React from \"react\";\nimport { ReactDOM, Link } from \"react-dom\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"../styles.css\";\nimport { dataProvider } from '../components/authProvider'\nimport Chip from '@material-ui/core/Chip'\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n\n\n  Button\n\n\n} from 'react-admin';\n\nvar dateFormat = require(\"dateformat\");\n\nconst selectors = Data.Selectors;\nconst {\n  NumericFilter,\n  AutoCompleteFilter,\n  MultiSelectFilter,\n  SingleSelectFilter\n} = Filters;\n\nconst addonsChip = (params) => {\n  if (params.value.length !== 0) {\n\n    return (\n      <>\n        {params.value.map(item =>\n\n          <Chip color='secondary' label={item} key={item} />\n        )}\n      </>\n    )\n\n  }\n  else\n    return (<span></span>)\n}\n\nconst getDateRange = (params) => {\n\n  return (<span >{dateFormat(params.row['start'], 'h:mm TT') || ''}-{dateFormat(params.value, 'h:mm TT') || ''\n  }</span>)\n}\n\nconst BookingDaateFormatter = (params) => {\n\n\n  let date = dateFormat(params.value, \"dddd dd/mm/yyyy\");\n  return (<span >{date}</span>)\n\n}\n\nconst ServiceFormatter = (params) => {\n\n  return (<span >{params.value || ''} {params.row.category || ''}</span>)\n};\n\nconst LinktoClients = (params) => {\n\n  if (params.row['client_ref']) {\n\n\n    return (<a href={'#clients/' + params.row['client_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\nconst LinktoDogs = (params) => {\n\n  if (params.row['dog_ref']) {\n\n\n    return (<a href={'#dogs/' + params.row['dog_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\n\n\n\nconst columns = [\n  { key: \"name\", name: \"Name\", resizable: true, formatter: LinktoClients, filterable: true, },\n  { key: \"dogName\", name: \"Dog\", resizable: true, formatter: LinktoDogs, filterable: true, },\n  { key: \"service\", name: \"Service\", resizable: true, formatter: ServiceFormatter, filterable: true, filterRenderer: AutoCompleteFilter },\n  { key: \"start\", name: \"Booking Date\", resizable: true, formatter: BookingDaateFormatter, filterable: true, },\n  { key: \"end\", name: \"Time\", resizable: true, formatter: getDateRange, filterable: true, },\n  { key: \"addOns\", name: \"AddOns\", resizable: true, formatter: addonsChip, filterable: true, },\n  { key: \"code\", name: \"Booking Code\", resizable: true, filterable: true, }\n];\n\n\nexport default class bookingstoday extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selectedIndexes: [],\n      filters: {}\n    }\n  }\n\n\n\n\n  onRowsSelected = rows => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(\n        rows.map(r => r.rowIdx)\n      )\n    });\n  };\n\n  onRowsDeselected = rows => {\n    let rowIndexes = rows.map(r => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter(\n        i => rowIndexes.indexOf(i) === -1\n      )\n    });\n  };\n  componentDidMount() {\n    let today = new Date()\n    dataProvider.getList('bookings', {filter: {'start': dateFormat(today, \"yyyy-mm-dd\")}, pagination: { page: 1, perPage: 100000 }} )\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n\n\n  handleFilterChange = (filter, filters) => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\n  getValidFilterValues = (rows, columnId) => {\n    return rows\n      .map(r => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n\n  getRows = (rows, filters) => {\n    return selectors.getRows({ rows, filters });\n  }\n\n\n  render() {\n\n    const filteredRows = this.getRows(this.state.rows, this.state.filters);\n    return (\n\n      <div style={{ height: '94%' }}>\n        <ReactDataGrid\n          columns={columns}\n          rowGetter={i => filteredRows[i]}\n          rowsCount={filteredRows.length}\n          onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n          rowSelection={{\n            showCheckbox: true,\n            enableShiftSelect: true,\n            onRowsSelected: this.onRowsSelected,\n            onRowsDeselected: this.onRowsDeselected,\n            selectBy: {\n              indexes: this.state.selectedIndexes\n            }\n          }}\n          toolbar={<Toolbar enableFilter={true}>{this.state.selectedIndexes.length === 1 && <Button\n          \n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}{this.state.selectedIndexes.length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>} </Toolbar>}\n          onAddFilter={filter => this.setState({ filters: this.handleFilterChange(filter) })}\n          onClearFilters={() => this.setState({ filters: {} })}\n          getValidFilterValues={columnKey => this.getValidFilterValues(this.state.rows, columnKey)}\n        />\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { ReactDOM, Link } from \"react-dom\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"../styles.css\";\nimport { dataProvider } from '../components/authProvider'\nimport Chip from '@material-ui/core/Chip'\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n\n\n  Button\n\n\n} from 'react-admin';\n\nvar dateFormat = require(\"dateformat\");\n\nconst selectors = Data.Selectors;\nconst {\n  NumericFilter,\n  AutoCompleteFilter,\n  MultiSelectFilter,\n  SingleSelectFilter\n} = Filters;\n\nconst addonsChip = (params) => {\n  if (params.value.length !== 0) {\n\n    return (\n      <>\n        {params.value.map(item =>\n\n          <Chip color='secondary' label={item} key={item} />\n        )}\n      </>\n    )\n\n  }\n  else\n    return (<span></span>)\n}\n\nconst getDateRange = (params) => {\n\n  return (<span >{dateFormat(params.row['start'], 'h:mm TT') || ''}-{dateFormat(params.value, 'h:mm TT') || ''\n  }</span>)\n}\n\nconst BookingDaateFormatter = (params) => {\n\n\n  let date = dateFormat(params.value, \"dddd dd/mm/yyyy\");\n  return (<span >{date}</span>)\n\n}\n\nconst ServiceFormatter = (params) => {\n\n  return (<span >{params.value || ''} {params.row.category || ''}</span>)\n};\n\nconst LinktoClients = (params) => {\n\n  if (params.row['client_ref']) {\n\n\n    return (<a href={'#clients/' + params.row['client_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\nconst LinktoDogs = (params) => {\n\n  if (params.row['dog_ref']) {\n\n\n    return (<a href={'#dogs/' + params.row['dog_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\n\n\n\nconst columns = [\n  { key: \"name\", name: \"Name\", resizable: true, formatter: LinktoClients, filterable: true, },\n  { key: \"dogName\", name: \"Dog\", resizable: true, formatter: LinktoDogs, filterable: true, },\n  { key: \"service\", name: \"Service\", resizable: true, formatter: ServiceFormatter, filterable: true, filterRenderer: AutoCompleteFilter },\n  { key: \"start\", name: \"Booking Date\", resizable: true, formatter: BookingDaateFormatter, filterable: true, },\n  { key: \"end\", name: \"Time\", resizable: true, formatter: getDateRange, filterable: true, },\n  { key: \"addOns\", name: \"AddOns\", resizable: true, formatter: addonsChip, filterable: true, },\n  { key: \"code\", name: \"Booking Code\", resizable: true, filterable: true, }\n];\n\n\nexport default class todayDaycare extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selectedIndexes: [],\n      filters: {}\n    }\n  }\n\n\n\n\n  onRowsSelected = rows => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(\n        rows.map(r => r.rowIdx)\n      )\n    });\n  };\n\n  onRowsDeselected = rows => {\n    let rowIndexes = rows.map(r => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter(\n        i => rowIndexes.indexOf(i) === -1\n      )\n    });\n  };\n  componentDidMount() {\n    let today = new Date()\n    dataProvider.getList('bookings', {filter: {'start': dateFormat(today, \"yyyy-mm-dd\"), 'category':'daycare'}, pagination: { page: 1, perPage: 100000 }} )\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n\n\n  handleFilterChange = (filter, filters) => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\n  getValidFilterValues = (rows, columnId) => {\n    return rows\n      .map(r => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n\n  getRows = (rows, filters) => {\n    return selectors.getRows({ rows, filters });\n  }\n\n\n  render() {\n\n    const filteredRows = this.getRows(this.state.rows, this.state.filters);\n    return (\n\n      <div style={{ height: '94%' }}>\n        <ReactDataGrid\n          columns={columns}\n          rowGetter={i => filteredRows[i]}\n          rowsCount={filteredRows.length}\n          onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n          rowSelection={{\n            showCheckbox: true,\n            enableShiftSelect: true,\n            onRowsSelected: this.onRowsSelected,\n            onRowsDeselected: this.onRowsDeselected,\n            selectBy: {\n              indexes: this.state.selectedIndexes\n            }\n          }}\n          toolbar={<Toolbar enableFilter={true}>{this.state.selectedIndexes.length === 1 && <Button\n          \n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}{this.state.selectedIndexes.length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>} </Toolbar>}\n          onAddFilter={filter => this.setState({ filters: this.handleFilterChange(filter) })}\n          onClearFilters={() => this.setState({ filters: {} })}\n          getValidFilterValues={columnKey => this.getValidFilterValues(this.state.rows, columnKey)}\n        />\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { ReactDOM, Link } from \"react-dom\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"../styles.css\";\nimport { dataProvider } from '../components/authProvider'\nimport Chip from '@material-ui/core/Chip'\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n\n\n  Button,\n  \n\n} from 'react-admin';\n\nvar dateFormat = require(\"dateformat\");\n\nconst selectors = Data.Selectors;\nconst {\n  NumericFilter,\n  AutoCompleteFilter,\n  MultiSelectFilter,\n  SingleSelectFilter\n} = Filters;\n\nconst addonsChip = (params) => {\n  if (params.value.length !== 0) {\n\n    return (\n      <>\n        {params.value.map(item =>\n\n          <Chip color='secondary' label={item} key={item} />\n        )}\n      </>\n    )\n\n  }\n  else\n    return (<span></span>)\n}\n\nconst getDateRange = (params) => {\n\n  return (<span >{dateFormat(params.row['start'], 'h:mm TT') || ''}-{dateFormat(params.value, 'h:mm TT') || ''\n  }</span>)\n}\n\nconst BookingDaateFormatter = (params) => {\n\n\n  let date = dateFormat(params.value, \"dddd dd/mm/yyyy\");\n  return (<span >{date}</span>)\n\n}\n\nconst ServiceFormatter = (params) => {\n\n  return (<span >{params.value || ''} {params.row.category || ''}</span>)\n};\n\nconst LinktoClients = (params) => {\n\n  if (params.row['client_ref']) {\n\n\n    return (<a href={'#clients/' + params.row['client_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\nconst LinktoDogs = (params) => {\n\n  if (params.row['dog_ref']) {\n\n\n    return (<a href={'#dogs/' + params.row['dog_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\n\n\n\nconst columns = [\n  { key: \"name\", name: \"Name\", resizable: true, formatter: LinktoClients, filterable: true, },\n  { key: \"dogName\", name: \"Dog\", resizable: true, formatter: LinktoDogs, filterable: true, },\n  { key: \"service\", name: \"Service\", resizable: true, formatter: ServiceFormatter, filterable: true, filterRenderer: AutoCompleteFilter },\n  { key: \"start\", name: \"Booking Date\", resizable: true, formatter: BookingDaateFormatter, filterable: true, },\n  { key: \"end\", name: \"Time\", resizable: true, formatter: getDateRange, filterable: true, },\n  { key: \"addOns\", name: \"AddOns\", resizable: true, formatter: addonsChip, filterable: true, },\n  { key: \"code\", name: \"Booking Code\", resizable: true, filterable: true, }\n];\n\n\nexport default class todayGrooming extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selectedIndexes: [],\n      filters: {}\n    }\n  }\n\n\n\n\n  onRowsSelected = rows => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(\n        rows.map(r => r.rowIdx)\n      )\n    });\n  };\n\n  onRowsDeselected = rows => {\n    let rowIndexes = rows.map(r => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter(\n        i => rowIndexes.indexOf(i) === -1\n      )\n    });\n  };\n  componentDidMount() {\n    let today = new Date()\n    dataProvider.getList('bookings', {filter: {'start': dateFormat(today, \"yyyy-mm-dd\"), 'category':'stylist'}, pagination: { page: 1, perPage: 100000 }} )\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n\n\n  handleFilterChange = (filter, filters) => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\n  getValidFilterValues = (rows, columnId) => {\n    return rows\n      .map(r => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n\n  getRows = (rows, filters) => {\n    return selectors.getRows({ rows, filters });\n  }\n\n\n  render() {\n\n    const filteredRows = this.getRows(this.state.rows, this.state.filters);\n    return (\n\n      <div style={{ height: '94%' }}>\n        <ReactDataGrid\n          columns={columns}\n          rowGetter={i => filteredRows[i]}\n          rowsCount={filteredRows.length}\n          onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n          rowSelection={{\n            showCheckbox: true,\n            enableShiftSelect: true,\n            onRowsSelected: this.onRowsSelected,\n            onRowsDeselected: this.onRowsDeselected,\n            selectBy: {\n              indexes: this.state.selectedIndexes\n            }\n          }}\n          toolbar={<Toolbar enableFilter={true}>{this.state.selectedIndexes.length === 1 && <Button\n          \n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}{this.state.selectedIndexes.length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>} </Toolbar>}\n          onAddFilter={filter => this.setState({ filters: this.handleFilterChange(filter) })}\n          onClearFilters={() => this.setState({ filters: {} })}\n          getValidFilterValues={columnKey => this.getValidFilterValues(this.state.rows, columnKey)}\n        />\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n  Button\n} from 'react-admin';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\nconst columns = [\n  {\n    name: 'name', header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n\n      if (data['client_ref']) {\n\n        return (<a href={'#clients/' + data['client_ref']} >{value}</a>)\n\n      }\n      else\n        return (<span >{value}</span>)\n\n    }\n  },\n  {\n    name: 'dogName', header: 'Dog', defaultWidth: 150, render: ({ value, data }) => {\n      if (data['dog_ref']) {\n\n\n        return (<a href={'#dogs/' + data['dog_ref']} >{value}</a>)\n\n      }\n      else\n        return (<span >{value}</span>)\n    }\n  },\n  {\n    name: 'service', header: 'Service', defaultWidth: 250, render: ({ value, data }) => {\n      return (<span >{value || ''} {data.category || ''}</span>)\n    }\n  },\n  {\n    name: 'start', header: 'Start', defaultWidth: 250,  filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n      return ({\n        dateFormat: 'ddd DD/MM/YYYY',\n        placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n      })\n    },\n    render: ({ value, cellProps: { dateFormat } }) => {\n      return moment(value).format('ddd DD/MM/YYYY')\n    },\n  },\n  {\n    name: 'addOns', header: 'AddOns', defaultWidth: 250,  render: ({ value }) => {\n      if (value.length !== 0) {\n\n        return (\n          <>\n            {value.map(item =>\n\n              <Chip color='secondary' label={item} key={item} />\n            )}\n          </>\n        )\n\n      }\n      else\n        return (<span></span>)\n    }\n  },\n];\n\nconst gridStyle = { minHeight: 550 };\n\nconst defaultFilterValue = [\n\n  { name: 'start', operator: 'eq', type: 'date', value: '' }\n];\n\nexport default class grooming extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selected: {}\n    }\n  }\n\n\n\n  componentDidMount() {\n\n    getList('bookings')\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n  render() {\n    return (\n      <>\n        <div>\n          {Object.keys(this.state.selected).length === 1 && <Button\n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}\n          {Object.keys(this.state.selected).length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>}\n        </div>\n        <ReactDataGrid\n          idProperty=\"id\"\n          columns={columns}\n          dataSource={this.state.rows}\n          style={gridStyle}\n          defaultFilterValue={defaultFilterValue}\n          onSelectionChange={select => this.setState({ selected: select.selected })}\n          multiSelect\n          checkboxColumn\n          enableFiltering\n        />\n      </>\n    )\n  }\n}","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport bookingstoday from '../views/bookingToday'\nimport todayDaycare from '../views/todayDaycare'\nimport todayGrooming from '../views/todayGrooming'\nimport grooming from '../views/grooming'\n\n\n\nexport default\n\n[\n\n    <Route   exact path=\"/bookingstoday\" component={bookingstoday}   />,\n    <Route   exact path=\"/todaydaycare\" component={todayDaycare}   />,\n    <Route   exact path=\"/todaygrooming\" component={todayGrooming}   />,\n    <Route   exact path=\"/grooming\" component={grooming}  />,\n\n\n\n];","/* eslint-disable import/no-anonymous-default-export */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\n\nimport {\n    adminReducer,\n    adminSaga,\n    USER_LOGOUT,\n} from 'react-admin';\n\nexport default ({\n    authProvider,\n    dataProvider,\n    history,\n}) => {\n    const reducer = combineReducers({\n        admin: adminReducer,\n        router: connectRouter(history),\n     \n\n        // add your own reducers here\n    });\n    const resettableAppReducer = (state, action) =>\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\n\n    const saga = function* rootSaga() {\n        yield all(\n            [\n                adminSaga(dataProvider, authProvider),\n                // add your own sagas here\n            ].map(fork)\n        );\n    };\n    const sagaMiddleware = createSagaMiddleware();\n\n    const composeEnhancers =\n        (process.env.NODE_ENV === 'development' &&\n            typeof window !== 'undefined' &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                trace: true,\n                traceLimit: 25,\n            })) ||\n        compose;\n  \n    const store = createStore(\n        resettableAppReducer,\n        { /* set your initial state here */ },\n        composeEnhancers(\n            applyMiddleware(\n                sagaMiddleware,\n                routerMiddleware(history),\n                // add your own middlewares here\n            ),\n            // add your own enhancers here\n        ),        \n    );\n    sagaMiddleware.run(saga);\n    return store;\n};","import * as React from \"react\";\nimport {\n    List,\n\n    Datagrid,\n    TextField,\n\n    EmailField,\n\n    NumberField\n  \n} from 'react-admin';\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n        </Datagrid>\n    </List>\n)","import * as React from \"react\";\nimport { Admin,  Resource , ListGuesser, Layout } from 'react-admin';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport { UserList ,UserCreate, UserEdit} from './views/clients';\nimport { DogList, DogEdit, DogCreate } from './views/dogs';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Dashboard from './views/Dashboard';\nimport {authProvider,dataProvider, getFCMToken,onMessageReceved } from './components/authProvider';\nimport Utils from '@date-io/moment'\nimport GroupIcon from '@material-ui/icons/Group';\nimport MyLayout from './components/MyLayout';\nimport {BookingList} from './views/allbookings'\nimport muCustomRoutes from './components/muCustomRoutes'\nimport createAdminStore from './components/createAdminStore';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport {PaymentList} from './views/payments'\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nconst history = createHashHistory();\n\n\nconst App = () =>{\n\n\n  const [isTokenFound, setTokenFound] = React.useState(false);\n  getFCMToken(setTokenFound);\n  \n  onMessageReceved(payload=> {\n\n    NotificationManager.success(payload.notification.body, payload.notification.title);\n  })\n\n \n  return (\n  <Provider\n        store={createAdminStore({\n            authProvider,\n            dataProvider,\n            history,\n        })}\n    >\n        <MuiPickersUtilsProvider utils={Utils}>\n        <NotificationContainer/>\n     <Admin disableTelemetry layout={MyLayout} history={history} customRoutes={muCustomRoutes}   dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider}>\n\n        <Resource name=\"clients\"  list={UserList}  icon={PetsIcon} create={UserCreate} to='/clients' edit={UserEdit} options={{ \"label\": \"Clients\"  }}  />\n       <Resource name=\"dogs\" list={DogList}  create={DogCreate} edit={DogEdit}  />\n       <Resource name=\"dog_breeds\" list={ListGuesser}     />\n       <Resource name=\"bookings\" list={BookingList}     />\n       <Resource name=\"services\" list={ListGuesser}     />\n       <Resource name=\"payments\" list={PaymentList}     />\n       \n     </Admin>\n     </MuiPickersUtilsProvider>\n</Provider>\n  );}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}