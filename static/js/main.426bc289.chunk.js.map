{"version":3,"sources":["fields/MyUrlField.js","views/clientsView.js","components/authProvider.js","components/imageUploader.js","components/ImageDeleter.js","components/AttachmentsShow.js","views/DogsView.js","views/Dashboard.js","components/Context.js","components/MyNotifis.js","components/MyAppbar.js","components/myMenu.js","components/MyLayout.js","components/printFunc.js","views/BookingView.js","views/bookingToday.js","views/todayDaycare.js","views/todayGrooming.js","views/messenger/ConversationSearch/index.js","views/messenger/ConversationListItem/index.js","views/messenger/Toolbar/index.js","views/messenger/ToolbarButton/index.js","components/newCovoCreate/index.js","views/messenger/ConversationList/index.js","views/messenger/Compose/index.js","views/messenger/Message/index.js","components/TwilioHelper.js","views/messenger/MessageList/index.js","views/messenger/Messenger/index.js","components/linkSquarePayment.js","views/PaymentsView.js","components/muCustomRoutes.js","views/clients.js","views/dogs.js","views/grooming.js","views/daycare.js","views/allbookings.js","views/messenger.js","views/payments.js","views/unlinkedPayments.js","App.js","index.js"],"names":["makeStyles","link","textDecoration","icon","width","paddingLeft","window","moment","require","ClientView","props","dataProvider","useDataProvider","React","selected","setSelected","filter","setFilter","rows","setRows","gridRef","setGridRef","cellDOMProps","cellProps","onClick","current","startEdit","columnId","id","rowIndex","filterTypes","Object","assign","ReactDataGrid","defaultProps","dogs","type","emptyValue","operators","name","fn","value","filterValue","data","map","i","dog_name","toLowerCase","indexOf","columns","header","defaultWidth","editable","render","href","style","paddingRight","a","getList","allDogs","clientsWDogs","forEach","client","dog","owner","fetchFata","Title","title","Button","label","keys","length","EditButton","basePath","record","values","idProperty","dataSource","onReady","onEditComplete","nrows","findIndex","suburb","update","instagram","phone","email","minHeight","defaultFilterValue","operator","onSelectionChange","select","enableFiltering","multiSelect","checkboxColumn","PostTitle","UserCreate","Create","SimpleForm","TextInput","source","UserEdit","Edit","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","messaging","duration","Proxy","get","target","resource","params","then","response","validUntil","Date","setTime","getTime","proxy","FirebaseDataProvider","disableMeta","authProvider","FirebaseAuthProvider","getToken","checkAuth","token","ya","getTWToken","axios","JSON","stringify","method","url","headers","catch","error","console","log","getAttchaments","dogId","full","storage","links","storageRef","ref","listRef","child","listAll","list","items","getDownloadURL","push","ifAttchaments","prefixes","location","path_","split","UploadAttach","len","file","Len","put","vapidKey","currentToken","total","create","err","NotificationManager","alert","Imageuploader","Dialog","open","DialogTitle","DialogContent","withIcon","buttonText","onChange","onDrop","imgExtension","withPreview","DialogActions","onCancel","onPicSend","ImageDeleter","Select","labelId","Array","MenuItem","AttachmentsShow","useState","setUrl","setOpen","open1","setOpen1","setonDrop","event","fetchData","Images","img","src","useEffect","images","onSend","DogView","loading","setLoading","filterEditor","StringFilter","Chip","color","backgroundColor","BoolFilter","htmlColor","textAlign","verticalAlign","DateFilter","SelectFilter","filterEditorProps","multiple","wrapMultiple","c","ClientIds","Set","item","getManyReference","ids","clientData","attachments","clientDataIndex","Loading","Error","DogEdit","TabbedForm","FormTab","ReferenceInput","filterToQuery","searchText","reference","AutocompleteInput","optionText","SelectInput","choices","BooleanInput","options","checkedIcon","DateInput","format","check","DogCreate","Card","CardHeader","CardContent","NotificationContext","createContext","ContextProvider","Consumer","state","notifications","linkSquareModal","selectedPayments","setPayments","payments","setState","openSquareLink","setNotifications","notifi","notif","removeNotif","removeAllMessNotif","convoItem","sid","children","this","Provider","Component","Notifis","useContext","anchorEl","setAnchorEl","history","useHistory","Badge","height","badgeContent","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","onClose","ListItemIcon","fontSize","message","disabled","useStyles","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","className","theme","root","maxWidth","palette","background","paper","nested","spacing","NestedList","onMenuClick","logout","open2","setOpen2","List","component","DashboardMenuItem","sidebarIsOpen","MenuItemLink","to","primaryText","leftIcon","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MyLayout","Layout","menu","appBar","dateFormat","DaycareToPrint","sort","b","start","Promise","all","booking","client_ref","breed","today","dogName","PureComponent","GroomingPrint","service","addOns","BookingView","anchroEl","setAcnhhorEl","componentRef","useRef","componentRef1","checkedIn","status","editor","SelectEditor","editorProps","collapseOnSelect","clearIcon","BoolEditor","category","depositAmount","placeholder","index","onMouseEnter","success","payIds","payment_ref","y","paymentData","date","substring","paydata","z","deposit","w","amount","content","handlePrint","display","ConversationSearch","searchFilterFunction","ConversationListItem","shave","photo","text","unreadCount","Toolbar","leftItems","rightItems","ToolbarButton","NewConvoCreate","allCust","setAllCust","allCustHolder","setAllCustHolder","setTotal","setSearchText","pagination","page","perPage","all_clients","handleClick","search","activeConvos","setActiveConvo","visible","createNewConvo","newData","toUpperCase","itemData","textData","itemSize","itemCount","Conversations","ConversationList","conversations","setConversations","conversationHolder","setConverrsationHolder","newConvoVisible","setNewConvoVisible","getConversations","notify","conversation","channelState","uniqueName","info","refreshConvoList","useCallback","processChannels","paginator","hasNextPage","nextPage","nextPaginator","concat","getSubscribedConversations","clientconvo","result","friendlyName","dateUpdated","lastMessage","dateCreated","lastReadMessageIndex","newConversations","refreshToken","updateToken","getClient","callback","Client","addListener","setClient","_eventsCount","createConvo","number","createConversation","twiConvo","addNonChatParticipant","add","setactiveConvo","convos","obj","Compose","dialog","setDialog","spellCheck","minRows","Message","isMine","startsSequence","endsSequence","showTimestamp","searchPattern","RegExp","friendlyTimestamp","timestamp","join","test","thumbnailWidth","thumbnailHeight","SendPicToServ","readFile","resolve","reject","fr","FileReader","onload","x","onerrror","readAsDataURL","base64","replace","MessageList","messages","setMessages","newMessage","setNewMessage","convo","setConvo","messagesEndRef","selectedFile","setSelectedFile","sendMessage","scrollIntoView","behavior","scrollToBottom","getMessages","tempMessages","activeConvo","getConversationBySid","_events","messageAdded","advanceLastReadMessageIndex","author","body","removeListener","messageCount","previous","next","currentMoment","previousMoment","previousDuration","diff","as","nextMoment","nextDuration","renderMessages","Messenger","LinkSquarePayment","todayBookings","setTodayBookings","todayBookinsHolder","setTodaysBookingsHolder","checked","setChecked","viewToday","setViewToday","paymentsIDS","bookingIDS","updateMany","booking_ref","linked","goBack","DialogContentText","secondary","Checkbox","edge","currentIndex","newChecked","splice","charAt","slice","bookingData","code","NumberFilter","BookinIds","payment","bookingsData","selectedPayme","handleLinkButton","exact","path","useQueryWithStore","payload","loaded","refetch","createHashHistory","App","onMessage","payloaf","utils","Utils","Admin","disableTelemetry","layout","customRoutes","muCustomRoutes","dashboard","Dashboard","Resource","PetsIcon","edit","EditGuesser","ListGuesser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.426bc289.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;\n","import * as React from \"react\";\nimport { List, Datagrid, Edit, Pagination,useMutation ,Title, EditButton,useDataProvider, SimpleList, TextField, Button, EmailField, TextInput, Create, SimpleForm, changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\n\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n\nimport * as firebase from \"firebase/app\";\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\n\nexport default function ClientView (props) {\n    const dataProvider = useDataProvider();\n    const [selected, setSelected] = React.useState({})\n    const [filter, setFilter] = React.useState(false)\n    const [rows, setRows] = React.useState([])\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState();\n    const [gridRef, setGridRef] = React.useState(null)\n\n\n  const cellDOMProps = (cellProps) => {\n    return {\n      onClick: () => {\n        gridRef.current.startEdit({ columnId: cellProps.id, rowIndex: cellProps.rowIndex })\n      }\n    }\n  }\n\n    const onEditComplete =  ({ value, columnId, rowIndex, data }) => {\n        try {\n          if (columnId === 'suburb') {\n    \n    \n            let nrows = rows\n            nrows[nrows.findIndex(i => i.id === data.id)].suburb = value\n            setRows(nrows)\n             dataProvider.update('clients', { id: data.id, data: { suburb: value } })\n           \n           \n          }\n         else if (columnId === 'instagram') {\n    \n    \n            let nrows = rows\n            nrows[nrows.findIndex(i => i.id === data.id)].instagram = value\n            setRows(nrows)\n             dataProvider.update('clients', { id: data.id, data: { instagram: value } })\n           \n           \n          }\n          else if (columnId === 'phone') {\n    \n    \n            let nrows = rows\n            nrows[nrows.findIndex(i => i.id === data.id)].phone = value\n            setRows(nrows)\n             dataProvider.update('clients', { id: data.id, data: { phone: value } })\n           \n           \n          }\n          else if (columnId === 'email') {\n    \n    \n            let nrows = rows\n            nrows[nrows.findIndex(i => i.id === data.id)].email = value\n            setRows(nrows)\n             dataProvider.update('clients', { id: data.id, data: { email: value } })\n           \n           \n          }\n    \n    \n    \n   \n        }\n        catch { }\n    \n      }\n\n    const   filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        dogs: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n              {\n                name:'contains',\n                fn: ({ value, filterValue, data }) => {\n                 debugger\n                    return !filterValue ?\n                    true :\n                 value && value.map(i=> {if (i.dog_name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1){return true}})[0];\n                }\n                 }   ],\n        }\n          });\n\n\n          const  columns = [\n        {\n            name: 'name', header: 'Name', defaultWidth: 200, editable: false\n        },\n        {\n            name: 'email', header: 'E-mail', defaultWidth: 280, render: ({ value }) => {\n\n                return (<a href={\"mailto:\" + value} >{value}</a>)\n            }\n            ,cellDOMProps},\n        {\n            name: 'phone', header: 'Phone', defaultWidth: 150,cellDOMProps\n        },\n        {\n            name: 'dog', header: 'Dog', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n                    return <>\n                        { value.map(i => {\n\n                            return (<a href={'#dogs/' + i.id} ><span style={{ paddingRight: '5px' }}>{i.dog_name}</span></a>)\n\n                        })}\n                    </>\n                }\n                catch { return }\n\n\n            }\n            , editable: false  },\n        {\n            name: 'instagram', header: 'Instagram', defaultWidth: 150,cellDOMProps\n        },\n        {\n            name: 'suburb', header: 'Suburb', defaultWidth: 150, cellDOMProps\n        },\n\n    ];\n\n  const  gridStyle = { minHeight: 550 };\n\n  const defaultFilterValue = [\n\n\n        { name: 'phone', operator: 'contains', type: 'string', value: '' },\n        { name: 'email', operator: 'contains', type: 'string', value: '' },\n        { name: 'name', operator: 'contains', type: 'string', value: '' },\n        {name: 'dog', operator: 'contains', type: 'dogs', value: ''}, \n        { name: 'instagram', operator: 'contains', type: 'string', value: '' },\n        { name: 'suburb', operator: 'contains', type: 'string', value: '' },\n\n    ];\n\n\n\n\n   React.useEffect(()=>{\n\n\n\n\n\nasync function fetchFata(){\n        let allDogs = await dataProvider.getList('dogs',{'pagination': { \"page\": 1, \"perPage\": 1000000 }} )\n        let clientsWDogs = props.rows || []\n         clientsWDogs.forEach(client=>{ client.dog = allDogs.data.filter(dog=> dog.owner=== client.id)  })\n        \n\n        setRows( clientsWDogs)\n    }\n        fetchFata()\n        \n\n    },[props.rows])\n\n\n    const create =(event) => {\n        let rows = this.state.rows\n        let id = event.id\n        let even = event.data()\n        even.id = id\n        rows.push(even)\n    }\n\n    const  update = (event) => {\n        let rows = this.state.rows\n        debugger\n        let id = event.id\n        let index = this.state.rows.findIndex(i => i.id === id)\n        rows[index] = event.data()\n        rows[index].id = id\n  \n        this.setState({ rows: rows })\n    }\n/*\n    componentWillUnmount() {\n\n      //  this.subs()\n    }\n\n\n*/\n\n\n\n\n        return (\n            <>\n                <Title title='Clients' />\n                <div>\n                    <Button\n                        label=\"Filters\"\n                        onClick={() =>setFilter(!filter)}>\n                        <FilterListIcon />\n                    </Button>\n                    {Object.keys(selected).length === 1 && <EditButton\n                        basePath='/clients' label='Edit' record={Object.values(selected)[0]}\n                    />}\n                    {Object.keys(selected).length !== 0 && <Button\n                        label=\"Message Client\">\n                        <SendIcon />\n                    </Button>}\n                </div>\n                <ReactDataGrid\n                    idProperty=\"id\"\n                    columns={columns}\n                    dataSource={rows}\n                    filterTypes={filterTypes}\n                    onReady={setGridRef}\n                    onEditComplete={onEditComplete}\n                    editable={true}\n                    style={gridStyle}\n                    defaultFilterValue={defaultFilterValue}\n                    onSelectionChange={select => setSelected(select.selected)}\n                    enableFiltering={filter}\n                    multiSelect\n                    checkboxColumn\n                />\n            </>\n        )\n    }\n\n\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n    return <span>Client {record ? `\"${record.name}\"` : ''}</span>;\n}\n\nexport const UserCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const UserEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Edit>\n);\n\n\n\n\n/*\n        this.subs = firebase.firestore().collection('clients').onSnapshot(a => {\n\n            if (a.docChanges().length !== this.state.length) {\n                a.docChanges().forEach(change => {\n                    if (change.type === 'added'){\n                        this.create(change.doc)\n                    }\n\n\n                   else if (change.type === 'modified') {\n                        this.update(change.doc)\n                    }\n\n\n                    \n                })\n            }\n\n\n\n        })\n*/","import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n\n} from 'react-admin-firebase';\n\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { NotificationManager } from 'react-notifications';\nimport {useDataProvider} from 'react-admin';\n\nconst config = {\n  apiKey: \"AIzaSyAUqOhdFbfRiCRqSzxKpYeTppBGsHfAAug\",\n  authDomain: \"admin-a4a00.firebaseapp.com\",\n  databaseURL: \"https://admin-a4a00-default-rtdb.firebaseio.com\",\n  projectId: \"admin-a4a00\",\n  storageBucket: \"admin-a4a00.appspot.com\",\n  messagingSenderId: \"328849622350\",\n  appId: \"1:328849622350:web:cf2cd21a20f108e7aeca1f\",\n  measurementId: \"G-YKBC2Q28P1\"\n\n\n};\n\nfirebase.initializeApp(config);\n\n\nconst messaging = firebase.messaging();\n\n\n\nconst options = {\n  disableMeta: false,\n};\n\nconst PredataProvider = FirebaseDataProvider(config, options);\nconst proxy = (dataProvider, duration =  30 * 60 * 1000) =>\n    new Proxy(dataProvider, {\n        get: (target, name) => (resource, params) => {\n            if (name === 'getOne' || name === 'getMany' || name === 'getList') {\n                return dataProvider[name](resource, params).then(response => {\n                    const validUntil = new Date();\n                    validUntil.setTime(validUntil.getTime() + duration);\n                    response.validUntil = validUntil;\n                    return response;\n                });\n            }\n            return dataProvider[name](resource, params);\n        },\n    });\n\nexport const dataProvider = proxy(PredataProvider)\n\nexport const authProvider = FirebaseAuthProvider(config);\n\nexport const getToken = async () => {\n\n  let token = await authProvider.checkAuth()\n  return token.ya\n\n}\n\n\nexport const getTWToken = async () => {\n  var axios = require('axios');\n  let token = await getToken()\n  var data = JSON.stringify({\n    \"token\": token\n  });\n\n  var config = {\n    method: 'post',\n    url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/getToken',\n    headers: {\n      'Authorization': 'Basic MkMzRDBFMkMtODQ3Qi00OEI4LUI1NTItOENCQTlDQkEzREQ4OjgwOEFGMDlBLTBFODgtNDU3Mi04QzJGLUUwOEIwOEE4N0RFMQ==',\n      'Content-Type': 'application/json'\n    },\n    data: data\n  };\n\n  return axios(config)\n    .then(function (response) {\n\n      return response.data;\n    })\n    .catch(function (error) {\n\n      console.log(error);\n    });\n\n}\n\nexport const getAttchaments = async (dogId, full) => {\n\n\n  var storage = firebase.storage();\n  var links = []\n  var storageRef = storage.ref();\n  try {\n    var listRef = storageRef.child(`attachments/${dogId}`);\n    var list = await listRef.listAll()\n    for (let i of list.items) {\n      let url = await i.getDownloadURL()\n      links.push(url)\n    }\n  }\n  catch {\n\n    return false\n  }\n\n  return links\n\n}\n\nexport const ifAttchaments = async () => {\n\n\n  var storage = firebase.storage();\n\n  var storageRef = storage.ref();\n\n  var listRef = storageRef.child(`attachments`);\n  var list = await listRef.listAll()\n  list = list.prefixes.map(i => { return i.location.path_.split('/')[1] })\n\n  return list\n\n\n\n}\n\nexport const UploadAttach = async (dogId, len, file) => {\n\n  var storage = firebase.storage();\n  var storageRef = storage.ref();\n  let Len = len\n  try {\n\n    for (let i of file) {\n      let listRef = storageRef.child(`attachments/${dogId}/file${Len}.jpg`);\n      Len++\n      await listRef.put(i)\n    }\n\n\n  }\n  catch (e) {\n\n\n  }\n\n\n}\n\n\n\nmessaging.getToken({ vapidKey: 'BGXh163BEaceHzjq8oIfgZfCnHEze0njY12K3FFlv8N0lLtNYTsKWpE0L7darB0Yiqzt2P_6VCcuHnSvo6beecs' }).then(async (currentToken) => {\n\n  if (currentToken) {\n\n    console.log('current token for client: ', currentToken);\n    let searchToken = await dataProvider.getList('notifications', { 'filter': {'fcmtoken':currentToken}, 'pagination': { \"page\": 1, \"perPage\": 1000 } })\n    if (searchToken.total ===0){\n      \n      await dataProvider.create('notifications',{data:{'fcmtoken':currentToken}})\n    \n    }\n    // Track the token -> client mapping, by sending to backend server\n    // show on the UI that permission is secured\n  } else {\n    console.log('No registration token available. Request permission to generate one.');\n\n\n    // shows on the UI that permission is required \n  }\n}).catch((err) => {\n  \n  console.log('An error occurred while retrieving token. ', err);\n  NotificationManager.error('Notifications not enabled!', 'Allow notifications and refresh page', 500000, () => {\n    alert('callback');\n  });\n  // catch error while creating client token\n});\n\nexport const onMessageReceved = (callback) => {\n\nmessaging.onMessage(payloaf => {\n  callback(payloaf)\n})\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageUploader from 'react-images-upload';\nimport { useState, Fragment } from 'react';\nimport {\n  Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nconst Imageuploader = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Upload Pictures</DialogTitle>\n\n                <DialogContent>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={props.onDrop}\n                        imgExtension={['.jpg', '.jpeg', '.png']}\n                        withPreview\n                    />\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        onClick={()=>{props.onPicSend();props.onCancel()}}\n                        label=\"Send\"\n                    >\n                        <SendIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default Imageuploader","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport Lightbox from 'react-lightbox-component';\nimport { useState, Fragment } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ImageDeleter = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Delete Pictures</DialogTitle>\n\n                <DialogContent>\n\n                    <Select\n                        labelId=\"demo-simple-select-disabled-label\"\n                        id=\"demo-simple-select-disabled\"\n                    // value={age}\n                    //  onChange={handleChange}\n                    >\n                        {Array(props.length).map(i=>{return  <MenuItem value={i}>{`File${i}`}</MenuItem>})}\n                    </Select>\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        //   onClick={()=>{props.onPicDelete();props.onCancel()}}\n                        label=\"Delete\"\n                    >\n                        <DeleteOutlineIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default ImageDeleter","import React from 'react';\nimport Lightbox from 'react-lightbox-component';\nimport { getAttchaments, UploadAttach } from './authProvider'\nimport { Button } from 'react-admin';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Imageuploader from '../components/imageUploader'\nimport ImageDeleter from '../components/ImageDeleter'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\n\nexport default function AttachmentsShow(props) {\n\n    const [url, setUrl] = React.useState([])\n    const [open, setOpen] = React.useState(false)\n    const [open1, setOpen1] = React.useState(false)\n    const [onDrop, setonDrop] = React.useState(null)\n    const [dlete, setDelete] = React.useState(null)\n\n    async function onSend(event) {\n        await UploadAttach(event, url.length, onDrop)\n        await fetchData()\n        \n    }\n    async function fetchData() {\n        let Images = []\n        let url = await getAttchaments(props.record.id, true)\n\n\n        url.forEach(i => {\n\n            let img = {}\n            img.src = i\n            Images.push(img)\n        })\n\n        setUrl(Images)\n    }\n\n    React.useEffect(\n        () => {\n    \n            fetchData()\n        }, [])\n\n    return (<>\n        <Button\n            label=\"Upload\"\n            onClick={() => setOpen(!open)}>\n            <PublishIcon />\n        </Button>\n        {url.length !== 0 && <Button\n            label=\"Delete Picture\"\n            onClick={() => setOpen1(!open1)}\n        >\n            <DeleteIcon />\n        </Button>}\n        <div>\n            {url !== [] && <Lightbox images={url} />}\n        </div>\n        <Imageuploader onDrop={(event) => { setonDrop(event) }} onPicSend={() => onSend(props.record.id)} open={open} onCancel={() => { setOpen(!open) }} />\n        <ImageDeleter open={open1} onCancel={() => setOpen1(!open1)} length={url.length} />\n    </>\n    );\n}\n","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField,TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField,useDataProvider, Loading, Error, useQueryWithStore\n  \n} from 'react-admin';\nimport {   Title,  Button,  changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport StringFilter from \"@inovua/reactdatagrid-community/StringFilter\"\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentsShow from '../components/AttachmentsShow'\nimport {ifAttchaments} from '../components/authProvider'\n\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default function DogView (props) {\n\n    const dataProvider = useDataProvider();\n    const [selected, setSelected] = React.useState({})\n    const [filter, setFilter] = React.useState(false)\n    const [rows, setRows] = React.useState([])\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState();\n\n\n    \n\n\n const   filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        client: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n              {\n                name:'contains',\n                fn: ({ value, filterValue, data }) => {\n                             debugger\n                    return !filterValue ?\n                    true :\n                 value && value.name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1;\n                }\n                 }  \n         ],\n        }\n          });\n\n      \n  const  columns = [\n        {\n            name: 'dog_name', header: 'Name', defaultWidth: 200,\n        },\n        \n            \n        {\n            name: 'client', header: 'Client', defaultWidth: 200, filterEditor: StringFilter,render: ({ value, data }) => {\n                try {\n                    return <>\n                     \n\n                         <a href={'#clients/' + value.id} ><span style={{ paddingRight: '5px' }}>{value.name}</span></a>\n\n                        \n                    </>\n                }\n                catch { return }\n\n\n            },\n            \n        },\n        {\n            name: 'breed', header: 'Breed', defaultWidth: 200,  render:({value})=>{ \n             return  value &&  (<Chip color='primary' style={{ backgroundColor: 'orange' }} label={value} key={value} />)}\n        },\n        {\n            name: 'vet_email', header: 'Vet Email', defaultWidth: 200,\n        },\n        {\n            name: 'vet', header: 'Vet', defaultWidth: 200\n        },\n        {\n            name: 'DaycareAttendee', header: 'Daycare Attendee', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='green' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'dogdob', header: 'DOB',filterEditor:DateFilter, defaultWidth: 200,\n        },\n        {\n            name: 'comments', header: 'Comments', defaultWidth: 200,\n        },\n        {\n            name: 'sex', header: 'Sex', defaultWidth: 100, filterEditor: SelectFilter,\n            filterEditorProps: {\n              multiple: true,\n              wrapMultiple: false,\n              dataSource: [\"Male\", 'Female'].map(c => {\n                return { id: c, label: c}\n              }),\n            }\n        },\n        {\n            name: 'desexed', header: 'Desexed', defaultWidth: 100, render:({value}) =>{\n                return value && (< DoneIcon htmlColor='pink' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            },  filterEditor:BoolFilter\n        },\n        {\n            name: 'PassedTemperamentTrial', header: 'Passed Temperament Trial', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='blue' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'kcDue', header: 'KC Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n        {\n            name: 'c3Due', header: 'C3 Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n        {\n            name: 'attachments', header: 'Attachments', defaultWidth: 130,render:({value}) =>{\n                return value && (  < DoneIcon  htmlColor='red' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n\n\n\n\n\n    ];\n\n   const gridStyle = { minHeight: 550 };\n\n  \n   const defaultFilterValue = [\n\n\n\n        { name: 'dog_name', operator: 'contains', type: 'string', value: '' },\n        { name: 'client', operator: 'contains', type: 'client', value: '' },\n        { name: 'breed', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet_email', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet', operator: 'contains', type: 'string', value: '' },\n        { name: 'DaycareAttendee', operator: 'eq', type: 'boolean', value: null },\n        { name: 'dogdob', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'comments', operator: 'contains', type: 'string', value: '' },\n        { name: 'sex', operator: 'inlist', type: 'select', value: null },\n        { name: 'desexed', operator: 'eq', type: 'boolean', value: null },\n        { name: 'PassedTemperamentTrial', operator: 'eq', type: 'boolean', value: null },\n        { name: 'kcDue', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'c3Due', operator: 'beforeOrOn', type: 'date', value: ''},\n    ];\n\n\n\n\n    React.useEffect( ()=>{\n        \n  async function fetchData()  {  \n    let data = props.rows || []\n      let ClientIds = [...new Set(data.map(item => { return item.owner}))]   \n        let clientData = await dataProvider.getManyReference('clients', { ids: ClientIds ,'pagination': { \"page\": 1, \"perPage\": 1000000 }})\n      let attachments = await ifAttchaments()\n      \n\n\n\n\n            data.forEach(dog=>{\n                dog.attachments = attachments.indexOf(dog.id) >-1 ? true : false\n                let clientDataIndex = clientData.data.findIndex(i=>i.id===dog.owner)\n                if (clientDataIndex>-1){\n                    dog.client = clientData.data[clientDataIndex]\n                }\n            })\n     \n            setRows(data);\n            setLoading(false);\n\n    }\nfetchData()\n\n    },[props.rows])\n\n\n\n\n   \n    if (loading) return <Loading />;\n    if (error) return <Error />;\n\n  \n\n\n\n\n        return (\n            <>\n                <Title title='Dogs' />\n                <div>\n                    <Button\n                        label=\"Filters\"\n                        onClick={() => setFilter(!filter)}>\n                        <FilterListIcon />\n                    </Button>\n                    {Object.keys(selected).length === 1 && <EditButton\n                        basePath='/dogs' label='Edit' record={Object.values(selected)[0]}\n                    />}\n                    {Object.keys(selected).length !== 0 && <Button\n                        label=\"Message Client\">\n                        <SendIcon />\n                    </Button>}\n                </div>\n                <ReactDataGrid\n                    idProperty=\"id\"\n                    columns={columns}\n                    filterTypes={filterTypes}\n                    dataSource={rows}\n                    style={gridStyle}\n                    defaultFilterValue={defaultFilterValue}\n                    onSelectionChange={select => setSelected(select.selected)}\n                    enableFiltering={filter}\n                    multiSelect\n                    checkboxColumn\n                />\n            </>\n        )\n    }\n\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n       return <span>Dog {record ? `\"${record.dog_name}\"` : ''}</span>;\n    }\n\nexport const DogEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n        <TextInput source=\"dog_name\" label='Dog Name' />\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n     \n          <SelectInput source='sex'  choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/><BooleanInput\nsource=\"desexed\"\noptions={{\n    checkedIcon: <FavoriteIcon />,\n}}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n<FormTab label=\"Attachments\">\n<AttachmentsShow check/>\n</FormTab>\n</TabbedForm>\n    </Edit>\n);\n\n\n\nexport const DogCreate = props => (\n      <Create {...props}>\n                 <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n           <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n            \n               <TextInput source=\"dog_name\" label='Dog Name' />\n               <TextInput  source=\"breed\" label='Breed' />\n               <SelectInput source='sex' choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/>\n<BooleanInput\n    source=\"desexed\"\n    options={{\n        checkedIcon: <FavoriteIcon />,\n    }}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n       </Create>\n    \n    );\n\n\n\n\n    /*\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\nconst PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Owner\" source=\"owner\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\n\n\nconst MaleFemaleFilter = () => (\n    <FilterList label=\"Sex\" icon={<AccessTimeIcon />}>\n\n    \n        <FilterListItem\n            label=\"Male\"\n            value={{\n                sex: \"M\"\n            }}\n        />\n         <FilterListItem\n            label=\"Female\"\n            value={{\n               sex: 'F'\n  \n            }}\n        />\n        <FilterListItem\n            label=\"Desexed\"\n            value={{\n               desexed: true\n  \n            }}\n        />\n    </FilterList>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n        <FilterLiveSearch source=\"dog_name\" />\n\n            <MaleFemaleFilter />\n        </CardContent>\n    </Card>\n);\n\nexport const DogList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} perPage={50} pagination={<PostPagination />}  bulkActionButtons={<DogBulk />}  {...props}>\n         \n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.dog_name}\n                    secondaryText={record =>record.Client}\n                />\n            ) : (\n                \n                <CustomizableDatagrid>\n                      <TextField source=\"dog_name\" label='Dog Name' />\n                    <ReferenceField label=\"Client\" source=\"owner\" reference=\"clients\"  >\n                        <TextField source=\"name\"  />\n                    </ReferenceField>\n                    <ReferenceField label=\"Breed\" source='breed' reference=\"dog_breeds\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <SelectField source=\"sex\" choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} />\n                    <BooleanField source=\"desexed\" label='Desexed' />\n                    <EmailField source=\"vet_email\" label='Vet Email' />\n                    <TextField source=\"vet\" label='Vet' />\n                    <DateField source=\"kc_due\" label='KC Due' />\n                    <DateField source=\"c3_due\" label='C3 Due' />\n                    <DateField source=\"c5_due\" label='C5 Due' />\n                    <EditButton />\n                    </CustomizableDatagrid>\n \n            )}\n    \n        </List>\n    );\n}\n*/","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","import React from \"react\";\n\n\nconst NotificationContext = React.createContext();\n\nexport const ContextConsumer = NotificationContext.Consumer\n\n\n\nclass ContextProvider extends React.Component {\n    state = {\n        notifications: [],\n        linkSquareModal: false,\n        selectedPayments:[]\n    }\n\n    setPayments = (payments)=>{\n        this.setState({selectedPayments: payments})\n    }\n\n    openSquareLink = ()=>{\n        this.setState({linkSquareModal:!this.state.linkSquareModal})\n    }\n\n\n    setNotifications = (notifi) => {\n        let notif = this.state.notifications\n        notif.push(notifi)\n        this.setState({ notifications: notif })\n    }\n\n    removeNotif = (notif) => {\n        this.setState({notifications: this.state.notifications.filter(i => i !== notif)})\n    }\n\n    removeAllMessNotif = (notif) => {\n        \n        this.setState({notifications: this.state.notifications.filter(i => i.convoItem.sid !== notif.sid)})\n    }\n\n    render() {\n        const { children } = this.props\n        const { notifications, linkSquareModal, selectedPayments } = this.state\n        const { setNotifications, removeNotif, removeAllMessNotif, openSquareLink, setPayments } = this\n\n        return (\n            <NotificationContext.Provider\n                value={{\n                    notifications, setNotifications, removeNotif,\n                    removeAllMessNotif , linkSquareModal, openSquareLink, selectedPayments, setPayments\n                }}\n            >\n                {children}\n            </NotificationContext.Provider>\n        );\n\n    }\n\n\n}\n\n\nexport { ContextProvider }\nexport default NotificationContext","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationContext from './Context'\nimport EmailIcon from '@material-ui/icons/Email';\nimport ContactlessIcon from '@material-ui/icons/Contactless';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Notifis(props) {\n\n  const { notifications,  removeNotif } = React.useContext(NotificationContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const history = useHistory();\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onItemClick = (item) => {\n\n    removeNotif(item)\n    history.push('/messenger');\n\n  }\n\n  const IconSelector = (item) => {\n    if (item.type === 'payment') {\n      return (<ListItemIcon >\n        <ContactlessIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n    else if (item.type === 'message') {\n      return (<ListItemIcon >\n        <EmailIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n  }\n\n\n  return (\n    <div>\n      <Badge style={{\n        height: \"25px\",\n        width: \"45px\"\n      }} badgeContent={notifications.length} color=\"error\">\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <NotificationsIcon htmlColor='white' />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >{notifications.length > 0 ? notifications.map(i => <MenuItem onClick={() => { onItemClick(i) }}>{IconSelector(i)}{i.message}</MenuItem>) :\n          <MenuItem disabled>All Caught Up</MenuItem>\n          }\n\n        </Menu>\n      </Badge>\n    </div>\n  );\n}\n\n ","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notifis from './MyNotifis'\n\n\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\n\nconst MyAppBar = props => {\n  const classes = useStyles()\n\n\n  return (\n\n  <AppBar {...props}>\n\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n\n      <span className={classes.spacer} />\n      <Notifis />\n\n    </AppBar>\n\n  )\n};\n\nexport default MyAppBar;","import * as React from 'react';\nimport { DashboardMenuItem, MenuItemLink } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MessageIcon from '@material-ui/icons/Message';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\n\n\n\nfunction NestedList({ onMenuClick, logout }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n\n\n  return (\n\n    <List\n      component=\"nav\"\n      className={classes.root}\n    >\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <MenuItemLink\n        key='clients'\n        to='/clients'\n        primaryText='Clients'\n        leftIcon={\n\n          <PeopleIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <PetsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dogs\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dogs'\n          to='/dogs'\n          primaryText='All Dogs'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick1}>\n        <ListItemIcon>\n          <CalendarTodayIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Bookings\" />\n        {open1 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookings'\n          to='/bookings'\n          primaryText='All Bookings'\n          leftIcon={\n\n            <EventNoteIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookingstoday'\n          to='/bookingstoday'\n\n          primaryText='Bookings Today'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaydaycare'\n          to='/todaydaycare'\n\n          primaryText='Today Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaygrooming'\n          to='/todaygrooming'\n\n          primaryText='Today Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='grooming'\n          to='/grooming'\n\n          primaryText='Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='daycare'\n          to='/daycare'\n\n          primaryText='Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='services'\n          to='/services'\n          primaryText='Services'\n          leftIcon={\n\n            <AssignmentIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick2}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Payments\" />\n        {open2 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='payments'\n          to='/payments'\n          primaryText='All Payments'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='unlinkedsquare'\n          to='/unlinked'\n          primaryText='Unlinked Square'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n\n      </Collapse>\n      <MenuItemLink\n        key='messenger'\n        to='/messenger'\n        primaryText='Messenger'\n        leftIcon={\n\n          <MessageIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n    </List>\n  );\n}\n\nexport { NestedList }\n\n  ;","import { Layout } from 'react-admin';\nimport MyAppBar from './MyAppbar'\nimport  {NestedList} from './myMenu';\n\n\nconst MyLayout = props => <Layout\n    {...props}\n\n    menu={NestedList}\n    appBar={MyAppBar}\n/>;\n\nexport default MyLayout;","import React from 'react';\nimport './printStyle.css'\nimport moment from 'moment';\nimport { dataProvider } from './authProvider'\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport class DaycareToPrint extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rows: []\n\n\n        }\n    }\n    async componentDidMount() {\n\n        if (this.props.selected) {\n            let list = this.props.selected\n            \n            list.sort((a, b) => new Date(a.start) - new Date (b.start))\n          await  Promise.all(list.map(async booking => {\n            \n                let instagram = await  dataProvider.getManyReference('clients', { \"filter\": { \"id\": booking.client_ref || ''}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.instagram = instagram.data[0].instagram? instagram.data[0].instagram : null\n                \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n\n                return booking\n    \n            }))\n\n            this.setState({ rows: list })\n        }\n\n        else {\n            let today = new Date()\n            \n            let list = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'category': 'daycare', 'start': dateFormat(today, \"yyyy-mm-dd\") } })\n            list.data.sort((a, b) => new Date(a.start) - new Date (b.start))\n            list = list.data\n          await  Promise.all(list.map(async booking => {\n            \n                let instagram = await  dataProvider.getManyReference('clients', { \"filter\": { \"id\": booking.client_ref || ''}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.instagram = instagram.data[0].instagram? instagram.data[0].instagram : null\n                \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n                \n                return booking\n    \n            }))\n            \n\n            this.setState({ rows: list })\n            \n        }\n\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h1>Daycare Attendance List</h1>\n\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Client</th>\n                        <th>Dog</th>\n                        <th>Breed</th>\n                        <th>Instagram</th>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.state.rows).length > 0 && Object.values(this.state.rows).map(i => {\n                            return (\n                                <tr>\n                                    <td>{moment(i.start).format('hh:mm A')}</td>\n                                    <td>{i.name}</td>\n                                    <td>{i.dogName}</td>\n                                    <td>{i.breed}</td>\n                                    <td>{i.instagram}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n\n\nexport class GroomingPrint extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rows: []\n\n\n        }\n    }\n\n async   componentDidMount() {\n        if (this.props.selected) {\n            let list = this.props.selected\n            \n            list.sort((a, b) => new Date(a.start) - new Date (b.start))\n          await  Promise.all(list.map(async booking => {\n  \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n\n                return booking\n    \n            }))\n\n            this.setState({ rows: list })\n        }\n\n        else {\n            let today = new Date()\n            \n            let list = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'category': 'stylist', 'start': dateFormat(today, \"yyyy-mm-dd\") } })\n            list.data.sort((a, b) => new Date(a.start) - new Date (b.start))\n            list = list.data\n          await  Promise.all(list.map(async booking => {\n            \n       \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n                \n                return booking\n    \n            }))\n            \n\n            this.setState({ rows: list })\n            \n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <h1>Grooming Attendance List</h1>\n\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Client</th>\n                        <th>Dog</th>\n                        <th>Breed</th>\n                        <th>Service</th>\n                        <th>AddOns</th>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.state.rows).length > 0 && Object.values(this.state.rows).map(i => {\n                            return (\n                                <tr>\n                                    <td>{moment(i.start).format('hh:mm A')}</td>\n                                    <td>{i.name}</td>\n                                    <td>{i.dogName}</td>\n                                    <td>{i.breed}</td>\n                                    <td>{i.service}</td>\n                                    <td>{i.addOns.map(i=> { return <>{i}<br /></> })}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport DateEditor from '@inovua/reactdatagrid-community/DateEditor'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport SelectEditor from '@inovua/reactdatagrid-community/SelectEditor'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport {\n  EditButton,\n  Button,\n  useQueryWithStore, useDataProvider, DateTimeInput\n} from 'react-admin';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Title } from 'react-admin';\nimport BoolEditor from '@inovua/reactdatagrid-community/BoolEditor'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport DoneIcon from '@material-ui/icons/Done';\nimport PrintIcon from '@material-ui/icons/Print';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReactToPrint, { PrintContextConsumer } from 'react-to-print';\nimport { DaycareToPrint, GroomingPrint } from '../components/printFunc'\nimport { useSelector } from 'react-redux'\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default function BookingView(props) {\n\n\n  // const theme = useSelector(state => state.admin);\n  const dataProvider = useDataProvider();\n  const [rows, setRows] = React.useState(props.rows)\n  const [selected, setSelected] = React.useState({})\n  const [filter, setFilter] = React.useState(false)\n  const [anchroEl, setAcnhhorEl] = React.useState(null)\n  const componentRef = React.useRef();\n  const componentRef1 = React.useRef();\n\n\n\n  const onEditComplete = async ({ value, columnId, rowIndex, data }) => {\n    try {\n      if (columnId === 'checkedIn') {\n\n\n        let nrows = rows\n        nrows[nrows.findIndex(i => i.id === data.id)].checkedIn = value\n        setRows(nrows)\n        await dataProvider.update('bookings', { id: data.id, data: { checkedIn: value } })\n      }\n\n      else if (columnId === 'status') {\n        let nrows = rows\n        nrows[nrows.findIndex(i => i.id === data.id)].status = value\n        setRows(nrows)\n        await dataProvider.update('bookings', { id: data.id, data: { status: value } })\n      }\n    }\n    catch { }\n\n  }\n\n  const GetService = () => {\n\n\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n\n      return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n  const GetCategory = () => {\n\n\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n      return [...new Set(response.data.map(item => { return item.category }))].map(item => { return { id: item, label: item } })\n      //return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n\n  const columns = [\n    {\n      name: 'name', header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n\n        if (data['client_ref']) {\n\n          return (<a href={'#clients/' + data['client_ref']} >{value}</a>)\n\n        }\n        else\n          return (<span >{value}</span>)\n\n      }, editable: false\n    },\n    {\n      name: 'dogName', header: 'Dog', defaultWidth: 150, render: ({ value, data }) => {\n        if (data['dog_ref']) {\n          return (<a href={'#dogs/' + data['dog_ref']} >{value}</a>)\n        }\n        else\n          return (<span >{value}</span>)\n      }, editable: false\n    }, {\n      name: 'status', header: 'Status', defaultWidth: 101,\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: [{ id: \"cancelled\", label: \"Cancelled\" }, { id: \"confirmed\", label: \"Confirmed\" }, { id: \"modified\", label: \"Modified\" }]\n      }, render: ({ value, data }) => {\n        if (value === 'confirmed') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'green' }} label='Confirmed' key={value} />\n          )\n        }\n        else if (value === 'modified') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'orange' }} label='Modified' key={value} />\n          )\n        }\n        else if (value === 'cancelled') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'red' }} label='Cancelled' key={value} />\n          )\n        }\n      }, editor: SelectEditor, editorProps: {\n        idProperty: 'id',\n        dataSource: [{ id: 'cancelled', label: \"Cancelled\" }, { id: 'modified', label: \"Modified\" }, { id: 'confirmed', label: \"Confirmed\" }],\n        collapseOnSelect: true,\n        clearIcon: null\n      }\n\n    },\n    { name: 'checkedIn', header: 'Checked In', width: 100, filterEditor: BoolFilter, render: ({ value }) => value ? < DoneIcon htmlColor='green' style={{ textAlign: 'center', verticalAlign: 'center' }} /> : null, editor: BoolEditor },\n    {\n      name: 'service', header: 'Service', defaultWidth: 250,\n\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: GetService(),\n      }, editable: false\n    },\n    {\n      name: 'category', header: 'Category', defaultWidth: 150,\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: GetCategory(),\n      }, editable: false\n    },\n    {\n      name: 'deposit', header: 'Deposit', defaultWidth: 110, filterEditor: BoolFilter, editable: false, render: ({ value, data }) => {\n\n        if (value) { return <> < DoneIcon htmlColor='blue' style={{ textAlign: 'center', verticalAlign: 'center' }} /> <span>{data.depositAmount}</span></> }\n      }\n\n\n    },\n\n    {\n      name: 'date', header: 'Booking Date', defaultWidth: 138, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, cellProps: { dateFormat } }) => {\n        return moment(value).format('ddd DD/MM/YYYY')\n      }, editable: false\n    },\n    {\n      name: 'start', header: 'Start Time', defaultWidth: 150, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, data }) => {\n\n        return `${moment(value).format('hh:mm A')}`\n      }\n    },\n    {\n      name: 'addOns', header: 'AddOns', defaultWidth: 180, render: ({ value }) => {\n        if (value.length !== 0) {\n\n          return (\n            <>\n              {value.map(item =>\n\n                <Chip color='secondary' label={item} key={item} />\n\n              )}\n            </>\n          )\n\n        }\n        else\n          return (<span></span>)\n      },\n      cellDOMProps: ({ data, value }) => {\n        if (value.length > 2) {\n          return {\n            onMouseEnter: () => {\n              NotificationManager.success(value.map(item => { return <>{item}<br /></> }), 'Extras', 5000, () => { alert(value.map(i => `${i}\\n`)) });\n            }\n          }\n        }\n      }, editable: false\n    },\n    { name: 'code', header: 'Booking Code', defaultWidth: 110, editable: false },\n  ];\n\n  const gridStyle = { minHeight: 550 };\n\n  const defaultFilterValue = [\n\n    { name: 'date', operator: 'eq', type: 'date', value: '' },\n    { name: 'service', operator: 'inlist', type: 'select', value: null },\n    { name: 'status', operator: 'inlist', type: 'select', value: null },\n    { name: 'category', operator: 'inlist', type: 'select', value: null },\n    { name: 'checkedIn', operator: 'eq', type: 'boolean', value: null },\n    { name: 'code', operator: 'contains', type: 'string', value: '' },\n    { name: 'dogName', operator: 'contains', type: 'string', value: '' },\n    { name: 'name', operator: 'contains', type: 'string', value: '' },\n    { name: 'deposit', operator: 'eq', type: 'boolean', value: null },\n  ];\n\n\n  const handlePrintClick = (event) => {\n\n    setAcnhhorEl(event.currentTarget);\n  };\n\n  const handlePrintClose = () => {\n    setAcnhhorEl(null);\n  };\n\n  React.useEffect(() => {\n\n\n    async function fetchData() {\n      let payIds = []\n      props.rows && props.rows.forEach(i => { if (i.payment_ref) { i.payment_ref.forEach(y => { payIds.push(y) }) } })\n      payIds = [...new Set(payIds.map(item => { return item }))]\n      let paymentData = await dataProvider.getManyReference('payments', { ids: payIds, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n      let rows = props.rows || []\n      rows.forEach(i => {\n        i.date = i.start.substring(0, 10);\n        if (i.payment_ref) {\n          let paydata = []\n          i.payment_ref.forEach(y => {\n            paydata.push(paymentData.data.filter(z => z.id === y)[0])\n          })\n          let deposit = false\n          let depositAmount\n          paydata.forEach(w => { if (w.deposit) { depositAmount = '$' + w.amount / 100; deposit = true } })\n          i.deposit = deposit\n          i.depositAmount = depositAmount\n          i.paymentData = paydata\n\n        }\n      })\n\n      setRows(rows)\n    }\n\n    fetchData()\n  }, [props.rows])\n\n\n\n\n\n\n  return (\n    <>\n      <Title title={props.title} />\n      <div>\n        <Button\n          label=\"Filters\"\n          onClick={() => setFilter(!filter)}>\n          <FilterListIcon />\n        </Button>\n        <Button\n          label=\"Print\"\n          onClick={handlePrintClick}\n        >\n          <PrintIcon />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchroEl}\n          keepMounted\n          open={Boolean(anchroEl)}\n          onClose={handlePrintClose}\n        >\n          <ReactToPrint content={() => componentRef.current}>\n            <PrintContextConsumer>\n              {({ handlePrint }) => (\n                <>\n                  <MenuItem onClick={handlePrint}>Daycare Attendance List</MenuItem>\n                  {Boolean(anchroEl) && <div style={{ display: \"none\" }}>\n                    <DaycareToPrint ref={componentRef} selected={props.title === 'Daycare Today' ? rows : false} />\n                  </div>}\n                </>\n              )}\n            </PrintContextConsumer>\n          </ReactToPrint>\n          <ReactToPrint content={() => componentRef1.current}>\n            <PrintContextConsumer>\n              {({ handlePrint }) => (\n                <>\n                  <MenuItem onClick={handlePrint}>Grooming Attendance List</MenuItem>\n                  {Boolean(anchroEl) && <div style={{ display: \"none\" }}>\n                    <GroomingPrint ref={componentRef1} selected={props.title === 'Grooming Today' ? rows : false} />\n                  </div>}\n                </>\n              )}\n            </PrintContextConsumer>\n          </ReactToPrint>\n        </Menu>\n        {Object.keys(selected).length === 1 && <EditButton\n          basePath='/bookings' label='Edit' record={Object.values(selected)[0]}\n        />}\n        {Object.keys(selected).length === 1 && <Button\n          label=\"Charge card\">\n          <MonetizationOnIcon />\n        </Button>}\n        {Object.keys(selected).length !== 0 && <Button\n          label=\"Message Owners\">\n          <SendIcon />\n        </Button>}\n      </div>\n      <ReactDataGrid\n        idProperty=\"id\"\n        columns={columns}\n        dataSource={rows}\n        style={gridStyle}\n        onEditComplete={onEditComplete}\n        editable={true}\n        defaultFilterValue={defaultFilterValue}\n        onSelectionChange={select => setSelected(select.selected)}\n        enableFiltering={filter}\n        multiSelect\n        checkboxColumn\n\n      />\n    </>\n  )\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default function BookingsToday() {\n\n\n\n\n  let today = new Date()\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload: { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'start': dateFormat(today, \"yyyy-mm-dd\") } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='Bookings Today' />\n\n\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport moment from 'moment';\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default function DaycareToday() {\n\n\n\n  let today = new Date()\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload: { 'pagination': { \"page\": 1, \"perPage\": 10000 }, filter: { 'category': 'daycare', 'start': dateFormat(today, \"yyyy-mm-dd\") } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n  \n\n    return   <BookingView  rows={data} title='Daycare Today' />\n    \n  \n};\n\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport moment from 'moment';\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default function GroomingToday() {\n\n\n\n  let today = new Date()\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload: { 'pagination': { \"page\": 1, \"perPage\": 10000 }, filter: { 'category': 'stylist', 'start': dateFormat(today, \"yyyy-mm-dd\") } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n  \n\n    return   <BookingView  rows={data} title='Grooming Today' />\n    \n  \n};\n\n\n\n","import React from 'react';\nimport './ConversationSearch.css';\n\nexport default function ConversationSearch(props) {\n\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Client\"\n        onChange={event => props.searchFilterFunction(event.target.value)}\n        value={props.searchText}\n      />\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport shave from 'shave';\n\n\nimport './ConversationListItem.css';\n\n\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n\n\n  const { photo, name, text, unreadCount } = props.data;\n\n  return (\n    <div className=\"conversation-list-item\" onClick={() => {\n\n      props.onClick({ sid: props.data.sid, name: props.data.name })\n    }}>\n\n      <div className=\"conversation-info\">\n        <h1 className=\"conversation-title\">{name}\n        </h1>\n        <p className=\"conversation-snippet\">{text}\n        {unreadCount !== 0 && <text className=\"badge\">{unreadCount}</text>}\n        </p>\n\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useState, Fragment, useEffect } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport ConversationSearch from '../../views/messenger/ConversationSearch'\nimport { useDataProvider, Loading } from 'react-admin';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 500,\n        maxWidth: 300,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function NewConvoCreate(props) {\n    const dataProvider = useDataProvider();\n    const classes = useStyles();\n    const [allCust, setAllCust] = useState([])\n    const [allCustHolder, setAllCustHolder] = useState([])\n    const [total, setTotal] = useState('')\n    const [searchText, setSearchText] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        \n        async function fetchData() {\n            let all_clients = await dataProvider.getList('clients', { pagination: { page: 1, perPage: 10000 }, })\n            setTotal(all_clients.total)\n            setAllCust(all_clients.data)\n            setAllCustHolder(all_clients.data)\n            setLoading(false)\n        }\n\n        fetchData()\n    }, [])\n    const searchFilterFunction = (text) => {\n\n        const newData = allCustHolder.filter(item => {\n\n\n            let name\n            try {\n                name = item.name.toUpperCase()\n            }\n            catch { name = null }\n\n\n            const itemData = `${name}`;\n            const textData = text.toUpperCase();\n\n            return itemData.indexOf(textData) > -1;\n        });\n\n        setSearchText(text)\n        setAllCust(newData)\n        setTotal(newData.length)\n\n    };\n\n    const handleClick = (event) => {\n\n        let search = props.activeConvos.filter(i => i.text === event.phone)\n        if (search.length > 0) {\n\n            props.setActiveConvo({ sid: search[0].sid, name: search[0].name })\n            props.open(!props.visible)\n        }\n        else {\n\n            props.createNewConvo(event.phone, event.name)\n            props.open(!props.visible)\n        }\n\n\n    }\n\n\n\n    function renderRow(props) {\n        const { index, style } = props;\n\n        return (\n            <ListItem onClick={async () => handleClick(allCust[index])} button style={style} key={index} >\n                <ListItemText primary={allCust[index].name} />\n            </ListItem>\n        );\n    }\n\n    renderRow.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.object.isRequired,\n    };\n\n    return (\n        loading ? <Loading /> : (<Fragment>\n            <Dialog open={props.visible}>\n\n                <DialogTitle>Create new Conversation</DialogTitle>\n\n                <DialogContent>\n                    <div className={classes.root}>\n                        <ConversationSearch searchText={searchText} searchFilterFunction={searchFilterFunction} />\n                        <FixedSizeList height={400} width={300} itemSize={46} itemCount={total} >\n                            {renderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={() => props.open(!props.visible)}\n                    >\n                        <IconCancel />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>)\n\n    )\n}\n\n\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport { getTWToken } from '../../../components/authProvider'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport {\n  Button\n} from 'react-admin';\nimport NewConvoCreate from '../../../components/newCovoCreate'\nimport './ConversationList.css';\nimport { NotificationManager } from 'react-notifications';\nimport NotificationContext from '../../../components/Context'\nimport { useDataProvider } from 'react-admin';\n\nconst Conversations = require('@twilio/conversations');\n\n\n\nexport default function ConversationList(props) {\n\n  const dataProvider = useDataProvider();\n  const { notifications, setNotifications, removeAllMessNotif } = useContext(NotificationContext)\n  const [conversations, setConversations] = useState([]);\n  const [conversationHolder, setConverrsationHolder] = useState([]);\n  const [searchText, setSearchText] = useState(null)\n  const [newConvoVisible, setNewConvoVisible] = useState(false)\n\n\n  useEffect(() => {\n    getConversations()\n  }, [])\n\n  const notify = (event, conversation) => {\n    let convoItem = conversation.filter(i => i.text === event.conversation.channelState.uniqueName.split(':')[1])[0]\n    NotificationManager.info(convoItem.name, 'New message', 3000);\n    setNotifications({ message: `Message from ${convoItem.name}`, type: 'message', convoItem:convoItem })\n\n  }\n\n\n  const refreshConvoList = useCallback(async (client, event) => {\n\n\n\n    if (client) {\n\n      let items = []\n      async function processChannels(paginator) {\n        if (paginator.hasNextPage) {\n\n          const nextPaginator = await paginator.nextPage();\n          items = items.concat(nextPaginator.items)\n          await processChannels(nextPaginator);\n        }\n      }\n      let clientconvo = await client.getSubscribedConversations()\n      items = clientconvo.items\n      await processChannels(clientconvo);\n      \n      let newConversations = await Promise.all(items.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n      event && notify(event, newConversations)\n    }\n\n  }, [conversations])\n\n  const refreshToken = async (client) => {\n\n\n    console.log('token about to expire')\n    let token = await getTWToken()\n    client.updateToken(token);\n\n    console.log('client\\'s token updated')\n  }\n\n  async function getClient(token, callback) {\n    let items = []\n    async function processChannels(paginator) {\n\n\n      if (paginator.hasNextPage) {\n\n        const nextPaginator = await paginator.nextPage();\n        items = items.concat(nextPaginator.items)\n        await processChannels(nextPaginator);\n      }\n    }\n\n    let client = await Conversations.Client.create(token);\n\n\n    client.addListener('tokenAboutToExpire', () => refreshToken(client));\n\n    client.addListener('connectionStateChanged', async (event) => {\n      if (event === 'connected') {\n        let clientconvo = await client.getSubscribedConversations()\n        items = clientconvo.items\n        await processChannels(clientconvo);\n        props.setClient(client)\n\n        if (client._eventsCount === 2) {\n          client.addListener('messageAdded', (event) => refreshConvoList(client, event))\n          client.addListener('conversationRemoved', () => refreshConvoList(client))\n          client.addListener('conversationAdded', (event) => refreshConvoList(client, event))\n        }\n        callback(items)\n      }\n    })\n  }\n\n  const searchFilterFunction = (text) => {\n\n    const newData = conversationHolder.filter(item => {\n\n\n      let name\n      try {\n        name = item.name.toUpperCase()\n      }\n      catch { name = null }\n      let phone\n      try {\n        phone = item.phone\n      }\n      catch { phone = null }\n\n      const itemData = `${name} ${phone}`;\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n\n    setSearchText(text)\n    setConversations(newData)\n\n  };\n\n\n  const createConvo = async (number, name) => {\n\n    let twiConvo = await props.client.createConversation({ \"friendlyName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number, \"uniqueName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number })\n    await twiConvo.addNonChatParticipant(\"+61488844176\", number)\n\n    await twiConvo.add(\"pBjefCCX5JXw6QbYFu2GR7rmouw1\")\n    //refreshConvoList()// set this as event listener\n    props.setactiveConvo({ sid: twiConvo.sid, name: name })\n\n\n  }\n\n\n  const getConversations = async () => {\n\n    let token = await getTWToken()\n\n    getClient(token, async convos => {\n\n\n      let newConversations = await Promise.all(convos.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n\n    })\n\n\n\n  }\n\n  const setactiveConvo = (obj) => {\n    props.setactiveConvo(obj)\n    removeAllMessNotif(obj)\n    conversations[conversations.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    conversationHolder[conversationHolder.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    setConversations(conversations)\n    setConverrsationHolder(conversationHolder)\n  }\n\n  return (\n    <div className=\"conversation-list\">\n      <Toolbar\n        title=\"Messenger\"\n        leftItems={[\n          <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n        ]}\n        rightItems={[\n          <Button\n            onClick={() => setNewConvoVisible(!newConvoVisible)}\n          >\n            <AddBoxIcon />\n          </Button>,\n          <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n        ]}\n      />\n      <ConversationSearch\n        searchFilterFunction={searchFilterFunction}\n        searchText={searchText}\n      />\n      {\n        conversations.map(conversation =>\n          <ConversationListItem\n            key={conversation.sid}\n            data={conversation}\n            onClick={setactiveConvo}\n          />\n        )\n      }\n     {newConvoVisible && <NewConvoCreate visible={newConvoVisible} open={setNewConvoVisible} activeConvos={conversations} setActiveConvo={props.setactiveConvo} createNewConvo={createConvo} />}\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageIcon from '@material-ui/icons/Image';\nimport {\n  Button\n} from 'react-admin';\nimport './Compose.css';\nimport Imageuploader from \"../../../components/imageUploader\"\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport default function Compose(props) {\n  const [dialog, setDialog] = useState(false)\n\n\n\n  return (\n    <div className=\"compose\" >\n\n      <TextareaAutosize\n       \n        type=\"text\"\n        className=\"compose-input\"\n        placeholder=\"Type a message\"\n        value={props.value}\n        onChange={event => { props.onChange(event.target.value) }}\n        spellCheck={true}\n        minRows='2'\n      />\n      {props.value ? <Button\n        onClick={() => props.onSend()}\n      >\n        <SendIcon />\n      </Button> : <Button\n        onClick={() => setDialog(!dialog)}\n      >\n        <ImageIcon />\n      </Button>}\n     <Imageuploader open={dialog} onCancel={() => setDialog(!dialog)} onDrop={props.onDrop} onPicSend={props.onPicSend}/>\n      {\n        props.rightItems\n      }\n    </div>\n  );\n}","import React from 'react';\nimport moment from 'moment';\nimport Lightbox from 'react-lightbox-component';\nimport './Message.css';\n\nexport default function Message(props) {\n  const {\n    data,\n    isMine,\n    startsSequence,\n    endsSequence,\n    showTimestamp\n  } = props;\n  var searchPattern = new RegExp('^' + 'https://bit.ly/');\n\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n  return (\n    <div className={[\n      'message',\n      `${isMine ? 'mine' : ''}`,\n      `${startsSequence ? 'start' : ''}`,\n      `${endsSequence ? 'end' : ''}`\n    ].join(' ')}>\n      {\n        showTimestamp &&\n        <div className=\"timestamp\">\n          {friendlyTimestamp}\n        </div>\n      }\n\n      <div className=\"bubble-container\">\n        <div className=\"bubble\" title={friendlyTimestamp}>\n          {searchPattern.test(data.message) ? <Lightbox thumbnailWidth='150px'\n            thumbnailHeight='150px' images={\n              [\n                {\n                  src: data.message\n                }\n              ]\n            } /> : data.message}\n        </div>\n      </div>\n    </div>\n  );\n}","\nvar axios = require('axios');\n\n\n\n\n\n\n\n\n\nexport const SendPicToServ = async (token, file) => {\n\n\n\n    function readFile(file) {\n        return new Promise((resolve, reject) => {\n            let fr = new FileReader();\n            fr.onload = x => resolve(fr.result);\n            fr.onerrror = reject;\n            fr.readAsDataURL(file)\n        })\n    }\n\n    let base64 = await readFile(file)\n\n    var data = JSON.stringify({\n        \"token\": token,\n        \"image\": base64.replace(\"data:\", \"\").replace(/^.*;base64,/, \"\")\n    });\n\n    var config = {\n        method: 'post',\n        url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/adminPicUploader',\n        headers: {\n            'Authorization': 'Basic ODU2NzZCNUEtOEE5MS00NzYwLUE4MTctODQ2MUIyQ0I3MTI0OjZCQ0FGQUY5LUVFQ0YtNDRBNi04QTBBLTg3RjFDQUYxQTQxNg==',\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    return axios(config)\n        .then(function (response) {\n            return response.data\n        })\n        .catch(function (error) {\n            return error\n        });\n\n\n}\n\n\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport { SendPicToServ } from '../../../components/TwilioHelper'\nimport { getToken } from '../../../components/authProvider'\nimport './MessageList.css';\n\n\nconst MY_USER_ID = 'pBjefCCX5JXw6QbYFu2GR7rmouw1';\n\nexport default function MessageList(props) {\n\n  const [messages, setMessages] = useState([])\n  const [newMessage, setNewMessage] = useState(null)\n  const [convo, setConvo] = useState(null)\n  const messagesEndRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n\n\n\n  const onPicSend = async () => {\n    let token = await getToken()\n\n    for (let file of selectedFile) {\n      let url = await SendPicToServ(token, file)\n\n      await sendMessage(url)\n    }\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages]);\n  const getMessages = useCallback( async function  () {\n    var tempMessages = []\n    if (props.activeConvo) {\n\n\n       let convo = await props.client.getConversationBySid(props.activeConvo.sid)\n       convo._events.messageAdded.length === 0 && convo.addListener('messageAdded', getMessages)\n      \n       convo.channelState.lastMessage && convo.advanceLastReadMessageIndex(convo.channelState.lastMessage.index)\n       setConvo(convo)\n      let messages = await convo.getMessages()\n      tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n\n    }\n\n    setMessages(tempMessages)\n  },[props.activeConvo, props.client])\n\n  useEffect(() => {\n\n    getMessages();\n    return ()=>{\n      if (convo){\n        convo.removeListener('messageAdded', getMessages)\n        \n      }\n    }\n  }, [convo, getMessages, props.activeConvo, props.client])\n\n\n  \n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n  const sendMessage = async (img) => {\n    await convo.sendMessage(img ? img : newMessage)\n    let messages = await convo.getMessages()\n    let tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n    setNewMessage(\"\")\n    setMessages(tempMessages)\n  }\n\n\n\n\n  return (\n    <div className=\"message-list\">\n      <Toolbar\n        title={props.activeConvo ? props.activeConvo.name : 'Select a conversation'}\n        rightItems={[\n          <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n          <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n          <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n        ]}\n      />\n\n      <div className=\"message-list-container\">{renderMessages()}\n        <div ref={messagesEndRef} />\n      </div>\n\n\n      <Compose\n        value={newMessage}\n        onChange={setNewMessage}\n        onSend={sendMessage}\n        onPicSend={onPicSend}\n        onDrop={setSelectedFile}\n        rightItems={[\n\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]} />\n    </div>\n  );\n}","import React , { useState } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\n\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n  \n  const [activeConvo, setactiveConvo] = useState(null);\n  const [client, setClient]= useState(null)\n  \n  return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList setactiveConvo={setactiveConvo} setClient={setClient} client={client} />\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList activeConvo={activeConvo} client={client} />\n        </div>\n      </div>\n    );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useState, Fragment, useEffect, useContext } from 'react';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport ConversationSearch from '../views/messenger/ConversationSearch'\nimport NotificationContext from './Context'\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { DialogContentText } from '@material-ui/core';\nimport { Loading } from 'react-admin';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { useDataProvider, Button } from 'react-admin';\nimport moment from 'moment';\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline';\nimport {useHistory} from \"react-router-dom\";\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 600,\n        maxWidth: 450,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function LinkSquarePayment(props) {\n    const history = useHistory();\n    const dataProvider = useDataProvider();\n    const classes = useStyles();\n    const { linkSquareModal, openSquareLink, selectedPayments } = useContext(NotificationContext)\n    const [todayBookings, setTodayBookings] = useState([])\n    const [todayBookinsHolder, setTodaysBookingsHolder] = useState([])\n    const [total, setTotal] = useState('')\n    const [searchText, setSearchText] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [checked, setChecked] = React.useState([]);\n    const [viewToday, setViewToday] = React.useState(true)\n\n    const handleToggle = (value) => () => {\n\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    useEffect(() => {\n\n        async function fetchData() {\n            setLoading(true)\n            let today = new Date()\n            let all_clients\n            viewToday ? all_clients = await dataProvider.getList('bookings', { filter: { 'start': dateFormat(today, \"yyyy-mm-dd\") }, 'pagination': { \"page\": 1, \"perPage\": 10000 } }) : all_clients = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 10000 } })\n            all_clients.data.forEach(i => { i.date = i.start.substring(0, 10); })\n            setTotal(all_clients.total)\n            setTodayBookings(all_clients.data)\n            setTodaysBookingsHolder(all_clients.data)\n            setLoading(false)\n        }\n\n        fetchData()\n    }, [viewToday])\n    const searchFilterFunction = (text) => {\n\n        const newData = todayBookinsHolder.filter(item => {\n\n\n            let name\n            try {\n                name = item.name.toUpperCase()\n            }\n            catch { name = null }\n            let dogName\n            try {\n                dogName = item.dogName.toUpperCase()\n            }\n            catch { name = null }\n\n            let date\n            try {\n                date = item.date.toUpperCase()\n            }\n            catch { date = null }\n\n            const itemData = `${name} ${dogName} ${date}`;\n            const textData = text.toUpperCase();\n\n            return itemData.indexOf(textData) > -1;\n        });\n\n        setSearchText(text)\n        setTodayBookings(newData)\n        setTotal(newData.length)\n\n    };\n\n    const handleClick = async () => {\n        let paymentsIDS = selectedPayments\n        let bookingIDS = checked.map(i=>i.id)\n        debugger\n        await dataProvider.updateMany('payments',{ids:paymentsIDS, data:{booking_ref: bookingIDS, linked:true}})\n        await dataProvider.updateMany('bookings', {ids: bookingIDS, data:{payment_ref: paymentsIDS}})\n        setChecked([])\n       history.goBack()\n        openSquareLink()\n    }\n\n\n\n    function renderRow(props) {\n        const { index, style } = props;\n\n        return (\n            <ListItem button style={style} key={index} >\n                <ListItemText primary={`${todayBookings[index].name} - ${todayBookings[index].dogName}`} secondary={`${todayBookings[index].service} - ${todayBookings[index].date}`} />\n                <Checkbox\n                    edge=\"end\"\n                    onChange={handleToggle(todayBookings[index])}\n                    checked={checked.indexOf(todayBookings[index]) !== -1}\n\n                />\n            </ListItem>\n        );\n    }\n\n    renderRow.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.object.isRequired,\n    };\n\n    return (\n\n        loading ? <Loading /> : (<Fragment>\n\n            <Dialog open={linkSquareModal}>\n\n                <DialogTitle>Link Square payment with booking</DialogTitle>\n\n                <DialogContent>\n                    <DialogContentText>Search \"Client Dog YYYY-MM-DD\"</DialogContentText>\n                    <div className={classes.root}>\n                        <ConversationSearch searchText={searchText} searchFilterFunction={searchFilterFunction} />\n                        <FixedSizeList height={550} width={450} itemSize={60} itemCount={total} >\n                            {renderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        label={viewToday ? 'Today' : 'All'}\n                        onClick={() => setViewToday(!viewToday)}\n                    >\n                        <ViewHeadlineIcon />\n                    </Button>\n                    {checked.length !== 0 && <Button\n                        label=\"Link\"\n                     onClick={()=>handleClick()}\n                    >\n                        <LinkIcon />\n                    </Button>}\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={() => openSquareLink()}\n                    >\n                        <IconCancel />\n                    </Button>\n\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>)\n\n    )\n}\n\n","import * as React from \"react\";\nimport {\n\n    EditButton,\n    useDataProvider, Loading, Error, useQueryWithStore\n\n} from 'react-admin';\nimport { Title, Button, changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport StringFilter from \"@inovua/reactdatagrid-community/StringFilter\"\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentsShow from '../components/AttachmentsShow'\nimport { ifAttchaments } from '../components/authProvider'\nimport BoolEditor from \"@inovua/reactdatagrid-community/BoolEditor\";\nimport NotificationContext from '../components/Context'\nimport LinkSquarePayment from \"../components/linkSquarePayment\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport { DragHandle } from \"@material-ui/icons\";\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default function DogView(props) {\n\n    const dataProvider = useDataProvider();\n    const [selected, setSelected] = React.useState({})\n    const [filter, setFilter] = React.useState(false)\n    const [rows, setRows] = React.useState([])\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState();\n    const { linkSquareModal, openSquareLink, setPayments } = React.useContext(NotificationContext)\n\n    const handleLinkButton = ()=>{\n        let selectedPayme = Object.values(selected).map(i=>i.id)\n        setPayments(selectedPayme)\n        openSquareLink()\n        \n    }\n\n    const onEditComplete = async ({ value, columnId, rowIndex, data }) => {\n        try {\n            if (columnId === 'deposit') {\n\n\n                let nrows = rows\n                nrows[nrows.findIndex(i => i.id === data.id)].deposit = value\n                setRows(nrows)\n                await dataProvider.update('payments', { id: data.id, data: { deposit: value } })\n            }\n\n        }\n        catch { }\n\n    }\n\n\n\n    const columns = [\n        {\n            name: 'description', header: 'Description', defaultWidth: 200, editable: false\n        },\n        {\n            name: 'status', header: 'Status', defaultWidth: 130, filterEditor: SelectFilter, editable: false,\n            filterEditorProps: {\n                multiple: true,\n                wrapMultiple: false,\n                dataSource: [\"succeeded\", 'failed'].map(c => {\n                    return { id: c, label: c.charAt(0).toUpperCase() + c.slice(1) }\n                }),\n            }, render: ({ value }) => {\n                if (value === 'succeeded') {\n                    return <Chip color='primary' style={{ backgroundColor: 'green' }} label={'Suceeded'} key={value} />\n                }\n                else if (value === 'failed') {\n                    return <Chip color='primary' style={{ backgroundColor: 'red' }} label={'Failed'} key={value} />\n                }\n            }\n        },\n        {\n            name: 'name', editable: false, header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n\n                    return <a href={'#clients/' + data.bookingData[0].client_ref} ><span style={{ paddingRight: '5px' }}>{value}</span></a>\n\n\n\n                }\n                catch { return value }\n\n\n            }\n        },\n        {\n            name: 'bookingData', editable: false, header: 'Bookings', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n                    return <>\n                        {value.map(i => {\n\n                            return (<a href={'#bookings/' + i.id} ><span style={{ paddingRight: '5px' }}>{i.code}</span></a>)\n\n                        })}\n                    </>\n                }\n                catch { return }\n\n\n            }\n        },\n        {\n            name: 'amount', editable: false, header: 'Amount', defaultWidth: 90, filterEditor: NumberFilter, render: ({ value, data }) => { return `$${value}` }\n        },\n        {\n            name: 'deposit', header: 'Deposit', filterEditor: BoolFilter, defaultWidth: 90, render: ({ value }) => value ? < DoneIcon htmlColor='green' style={{ textAlign: 'center', verticalAlign: 'center' }} /> : null, editor: BoolEditor\n        },\n        {\n            name: 'email', editable: false, header: 'Email', defaultWidth: 200\n        },\n        {\n            name: 'system', editable: false, header: 'System', defaultWidth: 130, render: ({ value }) => {\n                if (value === 'Stripe') {\n                    return <Chip color='primary' style={{ backgroundColor: 'blue' }} label={'Stripe'} key={value} />\n                }\n               else if (value === 'Square') {\n                    return <Chip color='primary' style={{ backgroundColor: 'green' }} label={'Square'} key={value} />\n                }\n\n            }, filterEditor: SelectFilter, filterEditorProps: {\n                multiple: true,\n                wrapMultiple: false,\n                dataSource: [\"Stripe\", \"Sqaure\"].map(c => {\n                    return { id: c, label: c.charAt(0).toUpperCase() + c.slice(1) }\n                })\n            }\n        },\n\n\n\n\n\n    ];\n\n    const gridStyle = { minHeight: 550 };\n\n\n    const defaultFilterValue = [\n\n\n        { name: 'status', operator: 'inlist', type: 'select', value: null },\n        { name: 'description', operator: 'contains', type: 'string', value: '' },\n        { name: 'name', operator: 'contains', type: 'string', value: '' },\n        { name: 'email', operator: 'contains', type: 'string', value: '' },\n        { name: 'amount', operator: 'gte', type: 'number', value: '' },\n        { name: 'system', operator: 'inlist', type: 'select', value: null },\n\n        { name: 'deposit', operator: 'eq', type: 'boolean', value: null },\n\n    ];\n\n\n\n\n    React.useEffect(() => {\n\n        async function fetchData() {\n            let data = props.rows || []\n            let BookinIds = []\n            data.forEach(i => {\n                i.booking_ref && i.booking_ref.forEach(y => BookinIds.push(y))\n                i.amount = i.amount / 100\n            })\n\n            let bookingData = await dataProvider.getManyReference('bookings', { ids: BookinIds, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n\n\n            data.forEach(payment => {\n                if (payment.booking_ref) {\n                    let bookingsData = []\n                    payment.booking_ref.forEach(i => {\n                        let booking = bookingData.data.filter(y => y.id === i)\n                        bookingsData.push(booking[0])\n                    })\n                    payment.bookingData = bookingsData\n\n\n                }\n            })\n            setRows(data);\n            setLoading(false);\n\n        }\n        fetchData()\n\n    }, [props.rows])\n\n\n\n\n\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n\n\n\n\n\n\n    return (\n        <>\n            <Title title={props.title} />\n            <div>\n                <Button\n                    label=\"Filters\"\n                    onClick={() => setFilter(!filter)}>\n                    <FilterListIcon />\n                </Button>\n                {Object.keys(selected).length === 1 && <EditButton\n                    basePath='/dogs' label='Edit' record={Object.values(selected)[0]}\n                />}\n                {Object.keys(selected).length !== 0 && <Button\n                    label=\"Message Client\">\n                    <SendIcon />\n                </Button>}\n                {Object.keys(selected).length !== 0 && props.title==='Unlinked Payments' && <Button\n                    onClick={() => handleLinkButton()}\n                    label=\"Link Payment\">\n                    <LinkIcon />\n                </Button>}\n            </div>\n            <ReactDataGrid\n                idProperty=\"id\"\n                columns={columns}\n                dataSource={rows}\n                style={gridStyle}\n                defaultFilterValue={defaultFilterValue}\n                onSelectionChange={select => setSelected(select.selected)}\n                enableFiltering={filter}\n                onEditComplete={onEditComplete}\n                editable={true}\n                multiSelect\n                checkboxColumn\n            />\n        </>\n    )\n}\n\n\n\n\n","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport bookingstoday from '../views/bookingToday'\nimport todayDaycare from '../views/todayDaycare'\nimport todayGrooming from '../views/todayGrooming'\nimport grooming from '../views/grooming'\nimport daycare from '../views/daycare'\nimport messenger from '../views/messenger'\nimport bookings from '../views/allbookings'\nimport clients from '../views/clients'\nimport dogs from '../views/dogs'\nimport payments from '../views/payments'\nimport unlinked from '../views/unlinkedPayments'\n\nexport default\n\n[\n\n    <Route   exact path=\"/bookingstoday\" component={bookingstoday}   />,\n    <Route   exact path=\"/clients\" component={clients}   />,\n    <Route   exact path=\"/todaydaycare\" component={todayDaycare}   />,\n    <Route   exact path=\"/dogs\" component={dogs}   />,\n    <Route   exact path=\"/todaygrooming\" component={todayGrooming}   />,\n    <Route   exact path=\"/grooming\" component={grooming}  />,\n    <Route   exact path=\"/daycare\" component={daycare}  />,\n    <Route   exact path=\"/bookings\" component={bookings}  />,\n    <Route   exact path=\"/messenger\" component={messenger}  />,\n    <Route   exact path=\"/payments\" component={payments}  />,\n    <Route   exact path=\"/unlinked\" component={unlinked}  />,\n\n\n];","import React from 'react';\nimport ClientsView from './clientsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function AllClients() {\n\n\n\n\n  const { loaded, error, data, refetch } = useQueryWithStore({\n    type: 'getList',\n    resource: 'clients',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <ClientsView rows={data} refetch={refetch} />\n\n}","import React from 'react';\nimport DogView from './DogsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Dogs() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'dogs',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <DogView rows={data} />\n\n}\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Grooming() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist'} }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='Grooming' />\n\n}\n\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Daycare() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare'} }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='Daycare' />\n\n}\n\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function AllBookings() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='All Bookings' />\n\n}","import React from 'react';\nimport Messenger from './messenger/Messenger';\nimport Card from '@material-ui/core/Card';\n\nimport { Title } from 'react-admin';\n\nexport default function messenger() {\n\n\n    return (\n        <Card>\n            <Title title=\"Messenger\" />\n\n\n\n                <Messenger />\n\n        </Card>\n\n\n\n    );\n}","import React from 'react';\nimport PaymentsView from './PaymentsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Payments() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'payments',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <PaymentsView rows={data}  title='All Payments'/>\n\n}\n\n\n\n\n\n\n\n\n\n\n/*\n\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n    <TextField source='booking_ref'/>\n        </Datagrid>\n    </List>\n)\n\n*/","import React from 'react';\nimport PaymentsView from './PaymentsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport NotificationContext from '../components/Context'\nimport LinkSquarePayment from \"../components/linkSquarePayment\";\n\n\nexport default function UnlinkedPayments() {\n\n    const { linkSquareModal } = React.useContext(NotificationContext)\n\n\n    const { loaded, error, data } = useQueryWithStore({\n        type: 'getList',\n        resource: 'payments',\n        payload: { \"filter\": { 'system': 'Square' , 'linked': false}, 'pagination': { \"page\": 1, \"perPage\": 1000000 }, }\n    });\n    if (linkSquareModal) { return <LinkSquarePayment  /> }\n    if (!loaded) { return <Loading />; }\n    if (error) { return <Error />; }\n\n\n    return <PaymentsView rows={data} title='Unlinked Payments' />\n\n}\n\n\n\n\n\n\n\n\n\n\n/*\n\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n    <TextField source='booking_ref'/>\n        </Datagrid>\n    </List>\n)\n\n*/","import * as React from \"react\";\nimport { Admin, Resource, ListGuesser, Layout, EditGuesser } from 'react-admin';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport { UserCreate, UserEdit } from './views/clientsView';\nimport { DogList, DogEdit, DogCreate } from './views/DogsView';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Dashboard from './views/Dashboard';\nimport { authProvider, dataProvider, onMessageReceved } from './components/authProvider';\nimport Utils from '@date-io/moment'\nimport GroupIcon from '@material-ui/icons/Group';\nimport MyLayout from './components/MyLayout';\nimport { BookingList } from './views/allbookings'\nimport muCustomRoutes from './components/muCustomRoutes'\nimport { useHistory } from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport NotificationContext from './components/Context'\nimport 'react-lightbox-component/build/css/index.css';\n\n\nconst history = createHashHistory();\n\n\nconst App = () => {\n\n  const {  openSquareLink, setPayments } = React.useContext(NotificationContext)\n // const history = useHistory();\n\n  onMessageReceved(payload => {\n    \n    NotificationManager.success(payload.data.body, payload.data.title);\n    let data = []\n    data.push(payload.data.data)\n    setPayments(data)\n    openSquareLink()\n    history.push('/unlinked');\n  })\n\n\n  return (\n\n  \n       \n      <MuiPickersUtilsProvider utils={Utils}>\n        <NotificationContainer />\n  \n        <Admin disableTelemetry layout={MyLayout} history={history} customRoutes={muCustomRoutes} dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider}>\n      \n          <Resource name=\"clients\" icon={PetsIcon} create={UserCreate} to='/clients' edit={UserEdit} options={{ \"label\": \"Clients\" }} />\n          <Resource name=\"dogs\" create={DogCreate} edit={DogEdit} />\n          <Resource name=\"bookings\" edit={EditGuesser} />\n          <Resource name=\"services\" list={ListGuesser} />\n          <Resource name=\"payments\" />\n          <Resource name=\"notifications\" />\n        </Admin>\n      \n      </MuiPickersUtilsProvider>\n\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ContextProvider } from './components/Context'\n\nReactDOM.render(\n  <React.StrictMode>\n   <ContextProvider>\n    <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}