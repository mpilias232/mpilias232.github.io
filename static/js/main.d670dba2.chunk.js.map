{"version":3,"sources":["fields/MyUrlField.js","views/clientsView.js","components/authProvider.js","components/imageUploader.js","components/ImageDeleter.js","components/AttachmentsShow.js","views/DogsView.js","views/Dashboard.js","components/Context.js","components/MyNotifis.js","components/MyAppbar.js","components/myMenu.js","components/MyLayout.js","components/printFunc.js","views/BookingView.js","views/bookingToday.js","views/todayDaycare.js","views/todayGrooming.js","views/messenger/ConversationSearch/index.js","views/messenger/ConversationListItem/index.js","views/messenger/Toolbar/index.js","views/messenger/ToolbarButton/index.js","components/newCovoCreate/index.js","views/messenger/ConversationList/index.js","views/messenger/Compose/index.js","views/messenger/Message/index.js","components/TwilioHelper.js","views/messenger/MessageList/index.js","views/messenger/Messenger/index.js","components/linkSquarePayment.js","views/PaymentsView.js","components/muCustomRoutes.js","views/clients.js","views/dogs.js","views/grooming.js","views/daycare.js","views/allbookings.js","views/messenger.js","views/payments.js","views/unlinkedPayments.js","App.js","index.js"],"names":["makeStyles","link","textDecoration","icon","width","paddingLeft","window","moment","require","ClientView","props","dataProvider","useDataProvider","React","selected","setSelected","filter","setFilter","rows","setRows","gridRef","setGridRef","state","setState","refresh","setRefresh","cellDOMProps","cellProps","onClick","current","startEdit","columnId","id","rowIndex","filterTypes","Object","assign","ReactDataGrid","defaultProps","dogs","type","emptyValue","operators","name","fn","value","filterValue","data","map","i","dog_name","toLowerCase","indexOf","defaultColumns","header","defaultWidth","editable","render","href","style","paddingRight","STORE","hidden","sortInfo","reservedViewportWidth","columnOrder","getSavedState","JSON","parse","localStorage","getItem","title","saveState","setItem","stringify","columns","setColumns","savedState","keys","length","newstate","newCol","forEach","y","visible","a","getList","allDogs","clientsWDogs","client","dog","owner","fetchFata","Title","Button","label","EditButton","basePath","record","values","idProperty","dataSource","onReady","onEditComplete","nrows","findIndex","suburb","update","instagram","phone","email","minHeight","onColumnOrderChange","onColumnVisibleChange","column","search","find","splice","push","defaultFilterValue","operator","onSelectionChange","select","enableFiltering","multiSelect","checkboxColumn","PostTitle","UserCreate","Create","SimpleForm","TextInput","source","UserEdit","Edit","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","messaging","duration","Proxy","get","target","resource","params","then","response","validUntil","Date","setTime","getTime","proxy","FirebaseDataProvider","disableMeta","authProvider","FirebaseAuthProvider","getToken","checkAuth","token","ya","getTWToken","axios","method","url","headers","catch","error","console","log","getAttchaments","dogId","full","storage","links","storageRef","ref","listRef","child","listAll","list","items","getDownloadURL","ifAttchaments","prefixes","location","path_","split","UploadAttach","len","file","Len","put","vapidKey","currentToken","total","create","err","NotificationManager","alert","Imageuploader","Dialog","open","DialogTitle","DialogContent","withIcon","buttonText","onChange","onDrop","imgExtension","withPreview","DialogActions","onCancel","onPicSend","ImageDeleter","Select","labelId","Array","MenuItem","AttachmentsShow","useState","setUrl","setOpen","open1","setOpen1","setonDrop","event","fetchData","Images","img","src","useEffect","images","onSend","DogView","loading","setLoading","filterEditor","StringFilter","Chip","color","backgroundColor","BoolFilter","htmlColor","textAlign","verticalAlign","DateFilter","SelectFilter","filterEditorProps","multiple","wrapMultiple","c","ClientIds","Set","item","getMany","ids","clientData","attachments","clientDataIndex","Loading","Error","DogEdit","TabbedForm","FormTab","ReferenceInput","filterToQuery","searchText","reference","AutocompleteInput","optionText","SelectInput","choices","BooleanInput","options","checkedIcon","DateInput","format","check","DogCreate","Card","CardHeader","CardContent","NotificationContext","createContext","ContextProvider","Consumer","notifications","linkSquareModal","selectedPayments","setPayments","payments","openSquareLink","setNotifications","notifi","notif","removeNotif","removeAllMessNotif","convoItem","sid","children","this","Provider","Component","Notifis","useContext","anchorEl","setAnchorEl","history","useHistory","Badge","height","badgeContent","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","onClose","ListItemIcon","fontSize","message","disabled","useStyles","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","className","theme","root","maxWidth","palette","background","paper","nested","spacing","NestedList","onMenuClick","logout","open2","setOpen2","List","component","DashboardMenuItem","sidebarIsOpen","MenuItemLink","to","primaryText","leftIcon","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MyLayout","Layout","menu","appBar","dateFormat","DaycareToPrint","sort","b","start","Promise","all","booking","getManyReference","client_ref","breed","today","dogName","PureComponent","GroomingPrint","service","addOns","BookingView","anchroEl","setAcnhhorEl","componentRef","useRef","componentRef1","checkedIn","status","groomersCode","editor","SelectEditor","editorProps","collapseOnSelect","clearIcon","BoolEditor","category","depositAmount","placeholder","index","onMouseEnter","success","payIds","dogIds","payment_ref","dog_ref","paymentData","dogData","date","substring","paydata","z","deposit","w","amount","content","handlePrint","display","onSortInfoChange","ConversationSearch","searchFilterFunction","ConversationListItem","shave","photo","text","unreadCount","Toolbar","leftItems","rightItems","ToolbarButton","NewConvoCreate","allCust","setAllCust","allCustHolder","setAllCustHolder","setTotal","setSearchText","pagination","page","perPage","all_clients","handleClick","activeConvos","setActiveConvo","createNewConvo","newData","toUpperCase","itemData","textData","itemSize","itemCount","Conversations","ConversationList","conversations","setConversations","conversationHolder","setConverrsationHolder","newConvoVisible","setNewConvoVisible","getConversations","notify","conversation","channelState","uniqueName","info","refreshConvoList","useCallback","processChannels","paginator","hasNextPage","nextPage","nextPaginator","concat","getSubscribedConversations","clientconvo","result","friendlyName","dateUpdated","lastMessage","dateCreated","lastReadMessageIndex","newConversations","refreshToken","updateToken","getClient","callback","Client","addListener","setClient","_eventsCount","createConvo","number","createConversation","twiConvo","addNonChatParticipant","add","setactiveConvo","convos","obj","Compose","dialog","setDialog","spellCheck","minRows","Message","isMine","startsSequence","endsSequence","showTimestamp","searchPattern","RegExp","friendlyTimestamp","timestamp","join","test","thumbnailWidth","thumbnailHeight","SendPicToServ","readFile","resolve","reject","fr","FileReader","onload","x","onerrror","readAsDataURL","base64","replace","MessageList","messages","setMessages","newMessage","setNewMessage","convo","setConvo","messagesEndRef","selectedFile","setSelectedFile","sendMessage","scrollIntoView","behavior","scrollToBottom","getMessages","tempMessages","activeConvo","getConversationBySid","_events","messageAdded","advanceLastReadMessageIndex","author","body","removeListener","messageCount","previous","next","currentMoment","previousMoment","previousDuration","diff","as","nextMoment","nextDuration","renderMessages","Messenger","LinkSquarePayment","todayBookings","setTodayBookings","todayBookinsHolder","setTodaysBookingsHolder","checked","setChecked","viewToday","setViewToday","paymentsIDS","bookingIDS","updateMany","booking_ref","linked","refetch","DialogContentText","secondary","Checkbox","edge","currentIndex","newChecked","charAt","slice","bookingData","code","NumberFilter","BookinIds","dollaramount","payment","bookingsData","selectedPayme","handleLinkButton","exact","path","useQueryWithStore","payload","loaded","createHashHistory","App","onMessage","payloaf","utils","Utils","Admin","disableTelemetry","layout","customRoutes","muCustomRoutes","dashboard","Dashboard","Resource","PetsIcon","edit","EditGuesser","ListGuesser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d670dba2.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;\n","import * as React from \"react\";\nimport { List, Datagrid, Edit, Pagination, useMutation, Title, EditButton, useDataProvider, SimpleList, TextField, Button, EmailField, TextInput, Create, SimpleForm, changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\n\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n\nimport * as firebase from \"firebase/app\";\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\n\nexport default function ClientView(props) {\n    const dataProvider = useDataProvider();\n    const [selected, setSelected] = React.useState({})\n    const [filter, setFilter] = React.useState(false)\n    const [rows, setRows] = React.useState([])\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState();\n    const [gridRef, setGridRef] = React.useState(null)\n\n    const [state, setState] = React.useState({});\n\n    const [refresh, setRefresh] = React.useState(false)\n\n    const onColumnVisibleChange = ({ column, visible }) => {\n\n        let newstate = getSavedState()\n\n\n        if (!visible) {\n            let search = newstate.hidden.find(i => i == column.name)\n            !search && newstate.hidden.push(column.name)\n            saveState(newstate)\n            setRefresh(!refresh)\n\n        }\n        else {\n\n            let search = newstate.hidden.find(i => i == column.name)\n            search && newstate.hidden.splice(newstate.hidden.indexOf(search), 1)\n            saveState(newstate)\n            let newCol = columns\n\n            newCol.forEach(y => { if (y.name == column.name) { y.visible = true } })\n            setColumns(newCol)\n            setRefresh(!refresh)\n        }\n\n    }\n\n    // const onBatchColumnResize = (batchColumnInfo, { reservedViewportWidth }) => {\n    //   const colsMap = batchColumnInfo.reduce((acc, colInfo) => {\n    //     const { column, width, flex } = colInfo\n    //     acc[column.name] = { width, flex }\n    //     return acc\n    //   }, {})\n\n    //   const nncolumns = columns.map(c => {\n    //     return Object.assign({}, c, colsMap[c.name])\n    //   })\n    //   let newstate = getSavedState()\n    //   newstate.columnWidth = nncolumns\n    //   setState(newstate);\n    //   saveState(newstate)\n\n    // }\n\n    const onColumnOrderChange = (columnOrder) => {\n        let newstate = getSavedState()\n        newstate.columnOrder = columnOrder\n        setState(newstate);\n        saveState(newstate)\n    }\n\n    const onSortInfoChange = (sortInfo) => {\n        let newstate = getSavedState()\n        newstate.sortInfo = sortInfo\n        setState(newstate);\n        saveState(newstate)\n    }\n\n    const cellDOMProps = (cellProps) => {\n        return {\n            onClick: () => {\n                gridRef.current.startEdit({ columnId: cellProps.id, rowIndex: cellProps.rowIndex })\n            }\n        }\n    }\n\n    const onEditComplete = ({ value, columnId, rowIndex, data }) => {\n        try {\n            if (columnId === 'suburb') {\n\n\n                let nrows = rows\n                nrows[nrows.findIndex(i => i.id === data.id)].suburb = value\n                setRows(nrows)\n                dataProvider.update('clients', { id: data.id, data: { suburb: value } })\n\n\n            }\n            else if (columnId === 'instagram') {\n\n\n                let nrows = rows\n                nrows[nrows.findIndex(i => i.id === data.id)].instagram = value\n                setRows(nrows)\n                dataProvider.update('clients', { id: data.id, data: { instagram: value } })\n\n\n            }\n            else if (columnId === 'phone') {\n\n\n                let nrows = rows\n                nrows[nrows.findIndex(i => i.id === data.id)].phone = value\n                setRows(nrows)\n                dataProvider.update('clients', { id: data.id, data: { phone: value } })\n\n\n            }\n            else if (columnId === 'email') {\n\n\n                let nrows = rows\n                nrows[nrows.findIndex(i => i.id === data.id)].email = value\n                setRows(nrows)\n                dataProvider.update('clients', { id: data.id, data: { email: value } })\n\n\n            }\n\n\n\n\n        }\n        catch { }\n\n    }\n\n    const filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        dogs: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n                {\n                    name: 'contains',\n                    fn: ({ value, filterValue, data }) => {\n                        debugger\n                        return !filterValue ?\n                            true :\n                            value && value.map(i => { if (i.dog_name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1) { return true } })[0];\n                    }\n                }],\n        }\n    });\n\n\n    const defaultColumns = [\n        {\n            name: 'name', header: 'Name', defaultWidth: 200, editable: false\n        },\n        {\n            name: 'email', header: 'E-mail', defaultWidth: 280, render: ({ value }) => {\n\n                return (<a href={\"mailto:\" + value} >{value}</a>)\n            }\n            , cellDOMProps\n        },\n        {\n            name: 'phone', header: 'Phone', defaultWidth: 150, cellDOMProps\n        },\n        {\n            name: 'dog', header: 'Dog', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n                    return <>\n                        {value.map(i => {\n\n                            return (<a href={'#dogs/' + i.id} ><span style={{ paddingRight: '5px' }}>{i.dog_name}</span></a>)\n\n                        })}\n                    </>\n                }\n                catch { return }\n\n\n            }\n            , editable: false\n        },\n        {\n            name: 'instagram', header: 'Instagram', defaultWidth: 150, cellDOMProps\n        },\n        {\n            name: 'suburb', header: 'Suburb', defaultWidth: 150, cellDOMProps\n        },\n\n    ];\n\n    const STORE = {\n\n        hidden: [],\n        sortInfo: [],\n        reservedViewportWidth: 0,\n        columnOrder: defaultColumns.map(i => i.name)\n    }\n\n    const getSavedState = () => {\n        return JSON.parse(localStorage.getItem(`state-${props.title}`))\n    }\n\n    const saveState = (state) => {\n        localStorage.setItem(`state-${props.title}`, JSON.stringify(state))\n    }\n\n    const gridStyle = { minHeight: 550 };\n\n    const defaultFilterValue = [\n\n\n        { name: 'phone', operator: 'contains', type: 'string', value: '' },\n        { name: 'email', operator: 'contains', type: 'string', value: '' },\n        { name: 'name', operator: 'contains', type: 'string', value: '' },\n        { name: 'dog', operator: 'contains', type: 'dogs', value: '' },\n        { name: 'instagram', operator: 'contains', type: 'string', value: '' },\n        { name: 'suburb', operator: 'contains', type: 'string', value: '' },\n\n    ];\n\n\n    const [columns, setColumns] = React.useState(defaultColumns)\n    React.useEffect(() => {\n        let savedState = localStorage.getItem(`state-${props.title}`) || {};\n        if (Object.keys(savedState).length === 0) {\n            setState(STORE)\n            saveState(STORE)\n        }\n        else {\n            let newstate = JSON.parse(savedState)\n            if (newstate.hidden.length != 0) {\n                let newCol = columns\n                newstate.hidden.forEach(i => newCol.forEach(y => { if (y.name == i) { y.visible = false } }))\n\n                setColumns(newCol)\n            }\n            // if (newstate.columnWidth){\n            //   columns.forEach(i => {\n            //    let storedColumn= newstate.columnWidth.find(y=> y.name==i.name)\n            //     if (storedColumn.width){\n            //       i.width = storedColumn.width\n            //     }\n            //   })\n\n            // }\n            setState(newstate)\n        }\n\n    }, [refresh])\n\n\n    React.useEffect(() => {\n\n\n\n\n\n        async function fetchFata() {\n            let allDogs = await dataProvider.getList('dogs', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n            let clientsWDogs = props.rows || []\n            clientsWDogs.forEach(client => { client.dog = allDogs.data.filter(dog => dog.owner === client.id) })\n\n\n            setRows(clientsWDogs)\n        }\n        fetchFata()\n\n\n    }, [props.rows])\n\n\n    const create = (event) => {\n        let rows = this.state.rows\n        let id = event.id\n        let even = event.data()\n        even.id = id\n        rows.push(even)\n    }\n\n    const update = (event) => {\n        let rows = this.state.rows\n        debugger\n        let id = event.id\n        let index = this.state.rows.findIndex(i => i.id === id)\n        rows[index] = event.data()\n        rows[index].id = id\n\n        this.setState({ rows: rows })\n    }\n    /*\n        componentWillUnmount() {\n    \n          //  this.subs()\n        }\n    \n    \n    */\n\n\n\n\n    return (\n        <>\n            <Title title={props.title} />\n            <div>\n                <Button\n                    label=\"Filters\"\n                    onClick={() => setFilter(!filter)}>\n                    <FilterListIcon />\n                </Button>\n                {Object.keys(selected).length === 1 && <EditButton\n                    basePath='/clients' label='Edit' record={Object.values(selected)[0]}\n                />}\n                {Object.keys(selected).length !== 0 && <Button\n                    label=\"Message Client\">\n                    <SendIcon />\n                </Button>}\n            </div>\n            <ReactDataGrid\n                idProperty=\"id\"\n                columns={columns}\n                columnOrder={state.columnOrder}\n                dataSource={rows}\n                filterTypes={filterTypes}\n                onReady={setGridRef}\n                onEditComplete={onEditComplete}\n                editable={true}\n                style={gridStyle}\n                onColumnOrderChange={onColumnOrderChange}\n                onColumnVisibleChange={onColumnVisibleChange}\n                defaultFilterValue={defaultFilterValue}\n                onSelectionChange={select => setSelected(select.selected)}\n                enableFiltering={filter}\n                multiSelect\n                checkboxColumn\n            />\n        </>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n    return <span>Client {record ? `\"${record.name}\"` : ''}</span>;\n}\n\nexport const UserCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const UserEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Edit>\n);\n\n\n\n\n/*\n        this.subs = firebase.firestore().collection('clients').onSnapshot(a => {\n\n            if (a.docChanges().length !== this.state.length) {\n                a.docChanges().forEach(change => {\n                    if (change.type === 'added'){\n                        this.create(change.doc)\n                    }\n\n\n                   else if (change.type === 'modified') {\n                        this.update(change.doc)\n                    }\n\n\n\n                })\n            }\n\n\n\n        })\n*/","import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n\n} from 'react-admin-firebase';\n\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { NotificationManager } from 'react-notifications';\nimport {useDataProvider} from 'react-admin';\n\nconst config = {\n  apiKey: \"AIzaSyAUqOhdFbfRiCRqSzxKpYeTppBGsHfAAug\",\n  authDomain: \"admin-a4a00.firebaseapp.com\",\n  databaseURL: \"https://admin-a4a00-default-rtdb.firebaseio.com\",\n  projectId: \"admin-a4a00\",\n  storageBucket: \"admin-a4a00.appspot.com\",\n  messagingSenderId: \"328849622350\",\n  appId: \"1:328849622350:web:cf2cd21a20f108e7aeca1f\",\n  measurementId: \"G-YKBC2Q28P1\"\n\n\n};\n\nfirebase.initializeApp(config);\n\n\nconst messaging = firebase.messaging();\n\n\n\nconst options = {\n  disableMeta: false,\n};\n\nconst PredataProvider = FirebaseDataProvider(config, options);\nconst proxy = (dataProvider, duration =  30 * 60 * 1000) =>\n    new Proxy(dataProvider, {\n        get: (target, name) => (resource, params) => {\n            if (name === 'getOne' || name === 'getMany' || name === 'getList') {\n                return dataProvider[name](resource, params).then(response => {\n                    const validUntil = new Date();\n                    validUntil.setTime(validUntil.getTime() + duration);\n                    response.validUntil = validUntil;\n                    return response;\n                });\n            }\n            return dataProvider[name](resource, params);\n        },\n    });\n\nexport const dataProvider = proxy(PredataProvider)\n\nexport const authProvider = FirebaseAuthProvider(config);\n\nexport const getToken = async () => {\n\n  let token = await authProvider.checkAuth()\n  return token.ya\n\n}\n\n\nexport const getTWToken = async () => {\n  var axios = require('axios');\n  let token = await getToken()\n  var data = JSON.stringify({\n    \"token\": token\n  });\n\n  var config = {\n    method: 'post',\n    url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/getToken',\n    headers: {\n      'Authorization': 'Basic MkMzRDBFMkMtODQ3Qi00OEI4LUI1NTItOENCQTlDQkEzREQ4OjgwOEFGMDlBLTBFODgtNDU3Mi04QzJGLUUwOEIwOEE4N0RFMQ==',\n      'Content-Type': 'application/json'\n    },\n    data: data\n  };\n\n  return axios(config)\n    .then(function (response) {\n\n      return response.data;\n    })\n    .catch(function (error) {\n\n      console.log(error);\n    });\n\n}\n\nexport const getAttchaments = async (dogId, full) => {\n\n\n  var storage = firebase.storage();\n  var links = []\n  var storageRef = storage.ref();\n  try {\n    var listRef = storageRef.child(`attachments/${dogId}`);\n    var list = await listRef.listAll()\n    for (let i of list.items) {\n      let url = await i.getDownloadURL()\n      links.push(url)\n    }\n  }\n  catch {\n\n    return false\n  }\n\n  return links\n\n}\n\nexport const ifAttchaments = async () => {\n\n\n  var storage = firebase.storage();\n\n  var storageRef = storage.ref();\n\n  var listRef = storageRef.child(`attachments`);\n  var list = await listRef.listAll()\n  list = list.prefixes.map(i => { return i.location.path_.split('/')[1] })\n\n  return list\n\n\n\n}\n\nexport const UploadAttach = async (dogId, len, file) => {\n\n  var storage = firebase.storage();\n  var storageRef = storage.ref();\n  let Len = len\n  try {\n\n    for (let i of file) {\n      let listRef = storageRef.child(`attachments/${dogId}/file${Len}.jpg`);\n      Len++\n      await listRef.put(i)\n    }\n\n\n  }\n  catch (e) {\n\n\n  }\n\n\n}\n\n\n\nmessaging.getToken({ vapidKey: 'BGXh163BEaceHzjq8oIfgZfCnHEze0njY12K3FFlv8N0lLtNYTsKWpE0L7darB0Yiqzt2P_6VCcuHnSvo6beecs' }).then(async (currentToken) => {\n\n  if (currentToken) {\n\n    console.log('current token for client: ', currentToken);\n    let searchToken = await dataProvider.getList('notifications', { 'filter': {'fcmtoken':currentToken}, 'pagination': { \"page\": 1, \"perPage\": 1000 } })\n    if (searchToken.total ===0){\n      \n      await dataProvider.create('notifications',{data:{'fcmtoken':currentToken}})\n    \n    }\n    // Track the token -> client mapping, by sending to backend server\n    // show on the UI that permission is secured\n  } else {\n    console.log('No registration token available. Request permission to generate one.');\n\n\n    // shows on the UI that permission is required \n  }\n}).catch((err) => {\n  \n  console.log('An error occurred while retrieving token. ', err);\n  NotificationManager.error('Notifications not enabled!', 'Allow notifications and refresh page', 500000, () => {\n    alert('callback');\n  });\n  // catch error while creating client token\n});\n\nexport const onMessageReceved = (callback) => {\n\nmessaging.onMessage(payloaf => {\n  callback(payloaf)\n})\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageUploader from 'react-images-upload';\nimport { useState, Fragment } from 'react';\nimport {\n  Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nconst Imageuploader = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Upload Pictures</DialogTitle>\n\n                <DialogContent>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={props.onDrop}\n                        imgExtension={['.jpg', '.jpeg', '.png']}\n                        withPreview\n                    />\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        onClick={()=>{props.onPicSend();props.onCancel()}}\n                        label=\"Send\"\n                    >\n                        <SendIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default Imageuploader","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport Lightbox from 'react-lightbox-component';\nimport { useState, Fragment } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst ImageDeleter = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Delete Pictures</DialogTitle>\n\n                <DialogContent>\n\n                    <Select\n                        labelId=\"demo-simple-select-disabled-label\"\n                        id=\"demo-simple-select-disabled\"\n                    // value={age}\n                    //  onChange={handleChange}\n                    >\n                        {Array(props.length).map(i=>{return  <MenuItem value={i}>{`File${i}`}</MenuItem>})}\n                    </Select>\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        //   onClick={()=>{props.onPicDelete();props.onCancel()}}\n                        label=\"Delete\"\n                    >\n                        <DeleteOutlineIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default ImageDeleter","import React from 'react';\nimport Lightbox from 'react-lightbox-component';\nimport { getAttchaments, UploadAttach } from './authProvider'\nimport { Button } from 'react-admin';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport Imageuploader from '../components/imageUploader'\nimport ImageDeleter from '../components/ImageDeleter'\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\n\nexport default function AttachmentsShow(props) {\n\n    const [url, setUrl] = React.useState([])\n    const [open, setOpen] = React.useState(false)\n    const [open1, setOpen1] = React.useState(false)\n    const [onDrop, setonDrop] = React.useState(null)\n    const [dlete, setDelete] = React.useState(null)\n\n    async function onSend(event) {\n        await UploadAttach(event, url.length, onDrop)\n        await fetchData()\n        \n    }\n    async function fetchData() {\n        let Images = []\n        let url = await getAttchaments(props.record.id, true)\n\n\n        url.forEach(i => {\n\n            let img = {}\n            img.src = i\n            Images.push(img)\n        })\n\n        setUrl(Images)\n    }\n\n    React.useEffect(\n        () => {\n    \n            fetchData()\n        }, [])\n\n    return (<>\n        <Button\n            label=\"Upload\"\n            onClick={() => setOpen(!open)}>\n            <PublishIcon />\n        </Button>\n        {url.length !== 0 && <Button\n            label=\"Delete Picture\"\n            onClick={() => setOpen1(!open1)}\n        >\n            <DeleteIcon />\n        </Button>}\n        <div>\n            {url !== [] && <Lightbox images={url} />}\n        </div>\n        <Imageuploader onDrop={(event) => { setonDrop(event) }} onPicSend={() => onSend(props.record.id)} open={open} onCancel={() => { setOpen(!open) }} />\n        <ImageDeleter open={open1} onCancel={() => setOpen1(!open1)} length={url.length} />\n    </>\n    );\n}\n","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField,TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField,useDataProvider, Loading, Error, useQueryWithStore\n  \n} from 'react-admin';\nimport {   Title,  Button,  changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport StringFilter from \"@inovua/reactdatagrid-community/StringFilter\"\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentsShow from '../components/AttachmentsShow'\nimport {ifAttchaments} from '../components/authProvider'\n\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default function DogView (props) {\n\n    const dataProvider = useDataProvider();\n    const [selected, setSelected] = React.useState({})\n    const [filter, setFilter] = React.useState(false)\n    const [rows, setRows] = React.useState([])\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState();\n\n\n    const [state, setState] = React.useState({});\n\n    const [refresh, setRefresh] = React.useState(false)\n\n    const onColumnVisibleChange = ({ column, visible }) => {\n\n        let newstate = getSavedState()\n\n\n        if (!visible) {\n            let search = newstate.hidden.find(i => i == column.name)\n            !search && newstate.hidden.push(column.name)\n            saveState(newstate)\n            setRefresh(!refresh)\n\n        }\n        else {\n\n            let search = newstate.hidden.find(i => i == column.name)\n            search && newstate.hidden.splice(newstate.hidden.indexOf(search), 1)\n            saveState(newstate)\n            let newCol = columns\n\n            newCol.forEach(y => { if (y.name == column.name) { y.visible = true } })\n            setColumns(newCol)\n            setRefresh(!refresh)\n        }\n\n    }\n\n    // const onBatchColumnResize = (batchColumnInfo, { reservedViewportWidth }) => {\n    //   const colsMap = batchColumnInfo.reduce((acc, colInfo) => {\n    //     const { column, width, flex } = colInfo\n    //     acc[column.name] = { width, flex }\n    //     return acc\n    //   }, {})\n\n    //   const nncolumns = columns.map(c => {\n    //     return Object.assign({}, c, colsMap[c.name])\n    //   })\n    //   let newstate = getSavedState()\n    //   newstate.columnWidth = nncolumns\n    //   setState(newstate);\n    //   saveState(newstate)\n\n    // }\n\n    const onColumnOrderChange = (columnOrder) => {\n        let newstate = getSavedState()\n        newstate.columnOrder = columnOrder\n        setState(newstate);\n        saveState(newstate)\n    }\n\n    const onSortInfoChange = (sortInfo) => {\n        let newstate = getSavedState()\n        newstate.sortInfo = sortInfo\n        setState(newstate);\n        saveState(newstate)\n    }\n\n\n\n const   filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        client: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n              {\n                name:'contains',\n                fn: ({ value, filterValue, data }) => {\n                             debugger\n                    return !filterValue ?\n                    true :\n                 value && value.name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1;\n                }\n                 }  \n         ],\n        }\n          });\n\n      \n  const  defaultColumns = [\n        {\n            name: 'dog_name', header: 'Name', defaultWidth: 200,\n        },\n        \n            \n        {\n            name: 'client', header: 'Client', defaultWidth: 200, filterEditor: StringFilter,render: ({ value, data }) => {\n                try {\n                    return <>\n                     \n\n                         <a href={'#clients/' + value.id} ><span style={{ paddingRight: '5px' }}>{value.name}</span></a>\n\n                        \n                    </>\n                }\n                catch { return }\n\n\n            },\n            \n        },\n        {\n            name: 'breed', header: 'Breed', defaultWidth: 200,  render:({value})=>{ \n             return  value &&  (<Chip color='primary' style={{ backgroundColor: 'orange' }} label={value} key={value} />)}\n        },\n        {\n            name: 'vet_email', header: 'Vet Email', defaultWidth: 200,\n        },\n        {\n            name: 'vet', header: 'Vet', defaultWidth: 200\n        },\n        {\n            name: 'DaycareAttendee', header: 'Daycare Attendee', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='green' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'dogdob', header: 'DOB',filterEditor:DateFilter, defaultWidth: 200,\n        },\n        {\n            name: 'comments', header: 'Comments', defaultWidth: 200,\n        },\n        {\n            name: 'sex', header: 'Sex', defaultWidth: 100, filterEditor: SelectFilter,\n            filterEditorProps: {\n              multiple: true,\n              wrapMultiple: false,\n              dataSource: [\"Male\", 'Female'].map(c => {\n                return { id: c, label: c}\n              }),\n            }\n        },\n        {\n            name: 'desexed', header: 'Desexed', defaultWidth: 100, render:({value}) =>{\n                return value && (< DoneIcon htmlColor='pink' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            },  filterEditor:BoolFilter\n        },\n        {\n            name: 'PassedTemperamentTrial', header: 'Passed Temperament Trial', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='blue' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'kcDue', header: 'KC Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n        {\n            name: 'c3Due', header: 'C3 Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n        {\n            name: 'attachments', header: 'Attachments', defaultWidth: 130,render:({value}) =>{\n                return value && (  < DoneIcon  htmlColor='red' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n\n\n\n\n\n    ];\n\n\n\n   const gridStyle = { minHeight: 550 };\n\n  \n   const defaultFilterValue = [\n\n\n\n        { name: 'dog_name', operator: 'contains', type: 'string', value: '' },\n        { name: 'client', operator: 'contains', type: 'client', value: '' },\n        { name: 'breed', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet_email', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet', operator: 'contains', type: 'string', value: '' },\n        { name: 'DaycareAttendee', operator: 'eq', type: 'boolean', value: null },\n        { name: 'dogdob', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'comments', operator: 'contains', type: 'string', value: '' },\n        { name: 'sex', operator: 'inlist', type: 'select', value: null },\n        { name: 'desexed', operator: 'eq', type: 'boolean', value: null },\n        { name: 'PassedTemperamentTrial', operator: 'eq', type: 'boolean', value: null },\n        { name: 'kcDue', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'c3Due', operator: 'beforeOrOn', type: 'date', value: ''},\n    ];\n  const STORE = {\n\n        hidden: [],\n        sortInfo: [],\n        reservedViewportWidth: 0,\n        columnOrder: defaultColumns.map(i => i.name)\n    }\n\n    const getSavedState = () => {\n        return JSON.parse(localStorage.getItem(`state-${props.title}`))\n    }\n\n    const saveState = (state) => {\n        localStorage.setItem(`state-${props.title}`, JSON.stringify(state))\n    }\n\n\n\n    const [columns, setColumns] = React.useState(defaultColumns)\n    React.useEffect(() => {\n        let savedState = localStorage.getItem(`state-${props.title}`) || {};\n        if (Object.keys(savedState).length === 0) {\n            setState(STORE)\n            saveState(STORE)\n        }\n        else {\n            let newstate = JSON.parse(savedState)\n            if (newstate.hidden.length != 0) {\n                let newCol = columns\n                newstate.hidden.forEach(i => newCol.forEach(y => { if (y.name == i) { y.visible = false } }))\n\n                setColumns(newCol)\n            }\n            // if (newstate.columnWidth){\n            //   columns.forEach(i => {\n            //    let storedColumn= newstate.columnWidth.find(y=> y.name==i.name)\n            //     if (storedColumn.width){\n            //       i.width = storedColumn.width\n            //     }\n            //   })\n\n            // }\n            setState(newstate)\n        }\n\n    }, [refresh])\n\n\n\n    React.useEffect( ()=>{\n        \n  async function fetchData()  {  \n    let data = props.rows || []\n      let ClientIds = [...new Set(data.map(item => { return item.owner}))]   \n        let clientData = await dataProvider.getMany('clients', { ids: ClientIds ,'pagination': { \"page\": 1, \"perPage\": 1000000 }})\n      let attachments = await ifAttchaments()\n      \n\n\n\n\n            data.forEach(dog=>{\n                dog.attachments = attachments.indexOf(dog.id) >-1 ? true : false\n                let clientDataIndex = clientData.data.findIndex(i=>i.id===dog.owner)\n                if (clientDataIndex>-1){\n                    dog.client = clientData.data[clientDataIndex]\n                }\n            })\n     \n            setRows(data);\n            setLoading(false);\n\n    }\nfetchData()\n\n    },[props.rows])\n\n\n\n\n   \n    if (loading) return <Loading />;\n    if (error) return <Error />;\n\n  \n\n\n\n\n        return (\n            <>\n                <Title title={props.title} />\n                <div>\n                    <Button\n                        label=\"Filters\"\n                        onClick={() => setFilter(!filter)}>\n                        <FilterListIcon />\n                    </Button>\n                    {Object.keys(selected).length === 1 && <EditButton\n                        basePath='/dogs' label='Edit' record={Object.values(selected)[0]}\n                    />}\n                    {Object.keys(selected).length !== 0 && <Button\n                        label=\"Message Client\">\n                        <SendIcon />\n                    </Button>}\n                </div>\n                <ReactDataGrid\n                    idProperty=\"id\"\n                    columns={columns}\n                    columnOrder={state.columnOrder}\n                    filterTypes={filterTypes}\n                    dataSource={rows}\n                    editable={true}\n                    style={gridStyle}\n                    onColumnOrderChange={onColumnOrderChange}\n                    onColumnVisibleChange={onColumnVisibleChange}\n                    defaultFilterValue={defaultFilterValue}\n                    onSelectionChange={select => setSelected(select.selected)}\n                    enableFiltering={filter}\n                    multiSelect\n                    checkboxColumn\n                />\n            </>\n        )\n    }\n\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n       return <span>Dog {record ? `\"${record.dog_name}\"` : ''}</span>;\n    }\n\nexport const DogEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n        <TextInput source=\"dog_name\" label='Dog Name' />\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n     \n          <SelectInput source='sex'  choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/><BooleanInput\nsource=\"desexed\"\noptions={{\n    checkedIcon: <FavoriteIcon />,\n}}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n<FormTab label=\"Attachments\">\n<AttachmentsShow check/>\n</FormTab>\n</TabbedForm>\n    </Edit>\n);\n\n\n\nexport const DogCreate = props => (\n      <Create {...props}>\n                 <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n           <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n            \n               <TextInput source=\"dog_name\" label='Dog Name' />\n               <TextInput  source=\"breed\" label='Breed' />\n               <SelectInput source='sex' choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/>\n<BooleanInput\n    source=\"desexed\"\n    options={{\n        checkedIcon: <FavoriteIcon />,\n    }}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n       </Create>\n    \n    );\n\n\n\n\n    /*\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\nconst PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Owner\" source=\"owner\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\n\n\nconst MaleFemaleFilter = () => (\n    <FilterList label=\"Sex\" icon={<AccessTimeIcon />}>\n\n    \n        <FilterListItem\n            label=\"Male\"\n            value={{\n                sex: \"M\"\n            }}\n        />\n         <FilterListItem\n            label=\"Female\"\n            value={{\n               sex: 'F'\n  \n            }}\n        />\n        <FilterListItem\n            label=\"Desexed\"\n            value={{\n               desexed: true\n  \n            }}\n        />\n    </FilterList>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n        <FilterLiveSearch source=\"dog_name\" />\n\n            <MaleFemaleFilter />\n        </CardContent>\n    </Card>\n);\n\nexport const DogList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} perPage={50} pagination={<PostPagination />}  bulkActionButtons={<DogBulk />}  {...props}>\n         \n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.dog_name}\n                    secondaryText={record =>record.Client}\n                />\n            ) : (\n                \n                <CustomizableDatagrid>\n                      <TextField source=\"dog_name\" label='Dog Name' />\n                    <ReferenceField label=\"Client\" source=\"owner\" reference=\"clients\"  >\n                        <TextField source=\"name\"  />\n                    </ReferenceField>\n                    <ReferenceField label=\"Breed\" source='breed' reference=\"dog_breeds\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <SelectField source=\"sex\" choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} />\n                    <BooleanField source=\"desexed\" label='Desexed' />\n                    <EmailField source=\"vet_email\" label='Vet Email' />\n                    <TextField source=\"vet\" label='Vet' />\n                    <DateField source=\"kc_due\" label='KC Due' />\n                    <DateField source=\"c3_due\" label='C3 Due' />\n                    <DateField source=\"c5_due\" label='C5 Due' />\n                    <EditButton />\n                    </CustomizableDatagrid>\n \n            )}\n    \n        </List>\n    );\n}\n*/","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","import React from \"react\";\n\n\nconst NotificationContext = React.createContext();\n\nexport const ContextConsumer = NotificationContext.Consumer\n\n\n\nclass ContextProvider extends React.Component {\n    state = {\n        notifications: [],\n        linkSquareModal: false,\n        selectedPayments:[]\n    }\n\n    setPayments = (payments)=>{\n        this.setState({selectedPayments: payments})\n    }\n\n    openSquareLink = ()=>{\n        this.setState({linkSquareModal:!this.state.linkSquareModal})\n    }\n\n\n    setNotifications = (notifi) => {\n        let notif = this.state.notifications\n        notif.push(notifi)\n        this.setState({ notifications: notif })\n    }\n\n    removeNotif = (notif) => {\n        this.setState({notifications: this.state.notifications.filter(i => i !== notif)})\n    }\n\n    removeAllMessNotif = (notif) => {\n        \n        this.setState({notifications: this.state.notifications.filter(i => i.convoItem.sid !== notif.sid)})\n    }\n\n    render() {\n        const { children } = this.props\n        const { notifications, linkSquareModal, selectedPayments } = this.state\n        const { setNotifications, removeNotif, removeAllMessNotif, openSquareLink, setPayments } = this\n\n        return (\n            <NotificationContext.Provider\n                value={{\n                    notifications, setNotifications, removeNotif,\n                    removeAllMessNotif , linkSquareModal, openSquareLink, selectedPayments, setPayments\n                }}\n            >\n                {children}\n            </NotificationContext.Provider>\n        );\n\n    }\n\n\n}\n\n\nexport { ContextProvider }\nexport default NotificationContext","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationContext from './Context'\nimport EmailIcon from '@material-ui/icons/Email';\nimport ContactlessIcon from '@material-ui/icons/Contactless';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Notifis(props) {\n\n  const { notifications,  removeNotif } = React.useContext(NotificationContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const history = useHistory();\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onItemClick = (item) => {\n\n    removeNotif(item)\n    history.push('/messenger');\n\n  }\n\n  const IconSelector = (item) => {\n    if (item.type === 'payment') {\n      return (<ListItemIcon >\n        <ContactlessIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n    else if (item.type === 'message') {\n      return (<ListItemIcon >\n        <EmailIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n  }\n\n\n  return (\n    <div>\n      <Badge style={{\n        height: \"25px\",\n        width: \"45px\"\n      }} badgeContent={notifications.length} color=\"error\">\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <NotificationsIcon htmlColor='white' />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >{notifications.length > 0 ? notifications.map(i => <MenuItem onClick={() => { onItemClick(i) }}>{IconSelector(i)}{i.message}</MenuItem>) :\n          <MenuItem disabled>All Caught Up</MenuItem>\n          }\n\n        </Menu>\n      </Badge>\n    </div>\n  );\n}\n\n ","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notifis from './MyNotifis'\n\n\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\n\nconst MyAppBar = props => {\n  const classes = useStyles()\n\n\n  return (\n\n  <AppBar {...props}>\n\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n\n      <span className={classes.spacer} />\n      <Notifis />\n\n    </AppBar>\n\n  )\n};\n\nexport default MyAppBar;","import * as React from 'react';\nimport { DashboardMenuItem, MenuItemLink } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MessageIcon from '@material-ui/icons/Message';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\n\n\n\nfunction NestedList({ onMenuClick, logout }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n\n\n  return (\n\n    <List\n      component=\"nav\"\n      className={classes.root}\n    >\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <MenuItemLink\n        key='clients'\n        to='/clients'\n        primaryText='Clients'\n        leftIcon={\n\n          <PeopleIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <PetsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dogs\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dogs'\n          to='/dogs'\n          primaryText='All Dogs'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick1}>\n        <ListItemIcon>\n          <CalendarTodayIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Bookings\" />\n        {open1 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookings'\n          to='/bookings'\n          primaryText='All Bookings'\n          leftIcon={\n\n            <EventNoteIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookingstoday'\n          to='/bookingstoday'\n\n          primaryText='Bookings Today'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaydaycare'\n          to='/todaydaycare'\n\n          primaryText='Today Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaygrooming'\n          to='/todaygrooming'\n\n          primaryText='Today Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='grooming'\n          to='/grooming'\n\n          primaryText='Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='daycare'\n          to='/daycare'\n\n          primaryText='Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='services'\n          to='/services'\n          primaryText='Services'\n          leftIcon={\n\n            <AssignmentIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick2}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Payments\" />\n        {open2 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='payments'\n          to='/payments'\n          primaryText='All Payments'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='unlinkedsquare'\n          to='/unlinked'\n          primaryText='Unlinked Square'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n\n      </Collapse>\n      <MenuItemLink\n        key='messenger'\n        to='/messenger'\n        primaryText='Messenger'\n        leftIcon={\n\n          <MessageIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n    </List>\n  );\n}\n\nexport { NestedList }\n\n  ;","import { Layout } from 'react-admin';\nimport MyAppBar from './MyAppbar'\nimport  {NestedList} from './myMenu';\n\n\nconst MyLayout = props => <Layout\n    {...props}\n\n    menu={NestedList}\n    appBar={MyAppBar}\n/>;\n\nexport default MyLayout;","import React from 'react';\nimport './printStyle.css'\nimport moment from 'moment';\nimport { dataProvider } from './authProvider'\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport class DaycareToPrint extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rows: []\n\n\n        }\n    }\n    async componentDidMount() {\n\n        if (this.props.selected) {\n            let list = this.props.selected\n            \n            list.sort((a, b) => new Date(a.start) - new Date (b.start))\n          await  Promise.all(list.map(async booking => {\n            \n                let instagram = await  dataProvider.getManyReference('clients', { \"filter\": { \"id\": booking.client_ref || ''}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.instagram = instagram.data[0].instagram? instagram.data[0].instagram : null\n                \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n\n                return booking\n    \n            }))\n\n            this.setState({ rows: list })\n        }\n\n        else {\n            let today = new Date()\n            \n            let list = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'category': 'daycare', 'start': dateFormat(today, \"yyyy-mm-dd\") } })\n            list.data.sort((a, b) => new Date(a.start) - new Date (b.start))\n            list = list.data\n          await  Promise.all(list.map(async booking => {\n            \n                let instagram = await  dataProvider.getManyReference('clients', { \"filter\": { \"id\": booking.client_ref || ''}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.instagram = instagram.data[0].instagram? instagram.data[0].instagram : null\n                \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n                \n                return booking\n    \n            }))\n            \n\n            this.setState({ rows: list })\n            \n        }\n\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h1>Daycare Attendance List</h1>\n\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Client</th>\n                        <th>Dog</th>\n                        <th>Breed</th>\n                        <th>Instagram</th>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.state.rows).length > 0 && Object.values(this.state.rows).map(i => {\n                            return (\n                                <tr>\n                                    <td>{moment(i.start).format('hh:mm A')}</td>\n                                    <td>{i.name}</td>\n                                    <td>{i.dogName}</td>\n                                    <td>{i.breed}</td>\n                                    <td>{i.instagram}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n\n\nexport class GroomingPrint extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rows: []\n\n\n        }\n    }\n\n async   componentDidMount() {\n        if (this.props.selected) {\n            let list = this.props.selected\n            \n            list.sort((a, b) => new Date(a.start) - new Date (b.start))\n          await  Promise.all(list.map(async booking => {\n  \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n\n                return booking\n    \n            }))\n\n            this.setState({ rows: list })\n        }\n\n        else {\n            let today = new Date()\n            \n            let list = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'category': 'stylist', 'start': dateFormat(today, \"yyyy-mm-dd\") } })\n            list.data.sort((a, b) => new Date(a.start) - new Date (b.start))\n            list = list.data\n          await  Promise.all(list.map(async booking => {\n            \n       \n                let breed = await  dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": booking.client_ref || null}, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n                booking.breed = breed.data[0].breed? breed.data[0].breed : null\n                \n                \n                return booking\n    \n            }))\n            \n\n            this.setState({ rows: list })\n            \n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <h1>Grooming Attendance List</h1>\n\n                <table>\n                    <thead>\n                        <th>Time</th>\n                        <th>Client</th>\n                        <th>Dog</th>\n                        <th>Breed</th>\n                        <th>Service</th>\n                        <th>AddOns</th>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.state.rows).length > 0 && Object.values(this.state.rows).map(i => {\n                            return (\n                                <tr>\n                                    <td>{moment(i.start).format('hh:mm A')}</td>\n                                    <td>{i.name}</td>\n                                    <td>{i.dogName}</td>\n                                    <td>{i.breed}</td>\n                                    <td>{i.service}</td>\n                                    <td>{i.addOns.map(i=> { return <>{i}<br /></> })}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport DateEditor from '@inovua/reactdatagrid-community/DateEditor'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport SelectEditor from '@inovua/reactdatagrid-community/SelectEditor'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport {\n  EditButton,\n  Button,\n  useQueryWithStore, useDataProvider, DateTimeInput\n} from 'react-admin';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Title } from 'react-admin';\nimport BoolEditor from '@inovua/reactdatagrid-community/BoolEditor'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport DoneIcon from '@material-ui/icons/Done';\nimport PrintIcon from '@material-ui/icons/Print';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReactToPrint, { PrintContextConsumer } from 'react-to-print';\nimport { DaycareToPrint, GroomingPrint } from '../components/printFunc'\nimport { useSelector } from 'react-redux'\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default function BookingView(props) {\n\n  // const theme = useSelector(state => state.admin);\n  const dataProvider = useDataProvider();\n  const [rows, setRows] = React.useState(props.rows)\n  const [selected, setSelected] = React.useState({})\n  const [filter, setFilter] = React.useState(false)\n  const [anchroEl, setAcnhhorEl] = React.useState(null)\n  const componentRef = React.useRef();\n  const componentRef1 = React.useRef();\n  const [state, setState] = React.useState({});\n\n  const [refresh, setRefresh] = React.useState(false)\n\n  const onColumnVisibleChange = ({ column, visible }) => {\n\n    let newstate = getSavedState()\n\n\n    if (!visible) {\n      let search = newstate.hidden.find(i => i == column.name)\n      !search && newstate.hidden.push(column.name)\n      saveState(newstate)\n      setRefresh(!refresh)\n\n    }\n    else {\n\n      let search = newstate.hidden.find(i => i == column.name)\n      search && newstate.hidden.splice(newstate.hidden.indexOf(search), 1)\n      saveState(newstate)\n      let newCol = columns\n      \n      newCol.forEach(y => { if (y.name == column.name) { y.visible = true } })\n      setColumns(newCol)\n      setRefresh(!refresh)\n    }\n\n  }\n\n  // const onBatchColumnResize = (batchColumnInfo, { reservedViewportWidth }) => {\n  //   const colsMap = batchColumnInfo.reduce((acc, colInfo) => {\n  //     const { column, width, flex } = colInfo\n  //     acc[column.name] = { width, flex }\n  //     return acc\n  //   }, {})\n\n  //   const nncolumns = columns.map(c => {\n  //     return Object.assign({}, c, colsMap[c.name])\n  //   })\n  //   let newstate = getSavedState()\n  //   newstate.columnWidth = nncolumns\n  //   setState(newstate);\n  //   saveState(newstate)\n\n  // }\n\n  const onColumnOrderChange = (columnOrder) => {\n    let newstate = getSavedState()\n    newstate.columnOrder = columnOrder\n    setState(newstate);\n    saveState(newstate)\n  }\n\n  const onSortInfoChange = (sortInfo) => {\n    let newstate = getSavedState()\n    newstate.sortInfo = sortInfo\n    setState(newstate);\n    saveState(newstate)\n  }\n\n  const onEditComplete = async ({ value, columnId, rowIndex, data }) => {\n    try {\n      if (columnId === 'checkedIn') {\n\n\n        let nrows = rows\n        nrows[nrows.findIndex(i => i.id === data.id)].checkedIn = value\n        setRows(nrows)\n        await dataProvider.update('bookings', { id: data.id, data: { checkedIn: value } })\n      }\n\n      else if (columnId === 'status') {\n        let nrows = rows\n        nrows[nrows.findIndex(i => i.id === data.id)].status = value\n        setRows(nrows)\n        await dataProvider.update('bookings', { id: data.id, data: { status: value } })\n      }\n      else if (columnId === 'groomersCode') {\n        let nrows = rows\n        nrows[nrows.findIndex(i => i.id === data.id)].groomersCode = value\n        setRows(nrows)\n        await dataProvider.update('bookings', { id: data.id, data: { groomersCode: value } })\n      }\n\n    }\n    catch { }\n\n  }\n\n  const GetService = () => {\n\n\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n\n      return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n  const GetCategory = () => {\n\n\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n      return [...new Set(response.data.map(item => { return item.category }))].map(item => { return { id: item, label: item } })\n      //return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n\n  const defaultColumns = [\n    {\n      name: 'name', header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n\n        if (data['client_ref']) {\n\n          return (<a href={'#clients/' + data['client_ref']} >{value}</a>)\n\n        }\n        else\n          return (<span >{value}</span>)\n\n      }, editable: false\n    },\n    {\n      name: 'dogName', header: 'Dog', defaultWidth: 150, render: ({ value, data }) => {\n        if (data['dog_ref']) {\n          return (<a href={'#dogs/' + data['dog_ref']} >{value}</a>)\n        }\n        else\n          return (<span >{value}</span>)\n      }, editable: false\n    }, {\n      name: 'status', header: 'Status', defaultWidth: 101,\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: [{ id: \"cancelled\", label: \"Cancelled\" }, { id: \"confirmed\", label: \"Confirmed\" }, { id: \"modified\", label: \"Modified\" }]\n      }, render: ({ value, data }) => {\n        if (value === 'confirmed') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'green' }} label='Confirmed' key={value} />\n          )\n        }\n        else if (value === 'modified') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'orange' }} label='Modified' key={value} />\n          )\n        }\n        else if (value === 'cancelled') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'red' }} label='Cancelled' key={value} />\n          )\n        }\n      }, editor: SelectEditor, editorProps: {\n        idProperty: 'id',\n        dataSource: [{ id: 'cancelled', label: \"Cancelled\" }, { id: 'modified', label: \"Modified\" }, { id: 'confirmed', label: \"Confirmed\" }],\n        collapseOnSelect: true,\n        clearIcon: null\n      }\n\n    },\n    {\n      name: 'dogData', header: 'Breed', defaultWidth: 200, editable: false, render: ({ value }) => {\n        try {\n          return value.breed && (<Chip color='primary' style={{ backgroundColor: 'orange' }} label={value.breed} key={value.breed} />)\n        }\n        catch { }\n      }\n    },\n    { name: 'groomersCode', header: \"Groomer's Code\", defaultWidth: 100, },\n    { name: 'checkedIn', header: 'Checked In', width: 100, filterEditor: BoolFilter, render: ({ value }) => value ? < DoneIcon htmlColor='green' style={{ textAlign: 'center', verticalAlign: 'center' }} /> : null, editor: BoolEditor },\n    {\n      name: 'service', header: 'Service', defaultWidth: 250,\n\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: GetService(),\n      }, editable: false\n    },\n    {\n      name: 'category', header: 'Category', defaultWidth: 150,\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: GetCategory(),\n      }, editable: false\n    },\n    {\n      name: 'deposit', header: 'Deposit', defaultWidth: 110, filterEditor: BoolFilter, editable: false, render: ({ value, data }) => {\n\n        if (value) { return <> < DoneIcon htmlColor='blue' style={{ textAlign: 'center', verticalAlign: 'center' }} /> <span>{data.depositAmount}</span></> }\n      }\n\n\n    },\n\n    {\n      name: 'date', header: 'Booking Date', defaultWidth: 138, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, cellProps: { dateFormat } }) => {\n        return moment(value).format('ddd DD/MM/YYYY')\n      }, editable: false\n    },\n    {\n      name: 'start', header: 'Start Time', defaultWidth: 150, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, data }) => {\n\n        return `${moment(value).format('hh:mm A')}`\n      }\n    },\n    {\n      name: 'addOns', header: 'AddOns', defaultWidth: 180, render: ({ value }) => {\n        try {\n          if (value.length !== 0) {\n\n            return (\n              <>\n                {value.map(item =>\n\n                  <Chip color='secondary' label={item} key={item} />\n\n                )}\n              </>\n            )\n\n          }\n          else\n            return (<span></span>)\n        }\n        catch { }\n      },\n      cellDOMProps: ({ data, value }) => {\n        try {\n          if (value.length > 2) {\n            return {\n              onMouseEnter: () => {\n                NotificationManager.success(value.map(item => { return <>{item}<br /></> }), 'Extras', 5000, () => { alert(value.map(i => `${i}\\n`)) });\n              }\n            }\n          }\n\n        } catch { }\n      }, editable: false\n    },\n    { name: 'code', header: 'Booking Code', defaultWidth: 110, editable: false },\n  ];\n\n\n\n  const STORE = {\n\n    hidden: [],\n    sortInfo: [],\n    reservedViewportWidth: 0,\n    columnOrder: defaultColumns.map(i => i.name)\n  }\n\n  const getSavedState = () => {\n    return JSON.parse(localStorage.getItem(`state-${props.title}`))\n  }\n\n  const saveState = (state) => {\n    localStorage.setItem(`state-${props.title}`, JSON.stringify(state))\n  }\n\n  const gridStyle = { minHeight: 550 };\n\n  const defaultFilterValue = [\n\n    { name: 'date', operator: 'eq', type: 'date', value: '' },\n    { name: 'service', operator: 'inlist', type: 'select', value: null },\n    { name: 'status', operator: 'inlist', type: 'select', value: null },\n    { name: 'category', operator: 'inlist', type: 'select', value: null },\n    { name: 'checkedIn', operator: 'eq', type: 'boolean', value: null },\n    { name: 'code', operator: 'contains', type: 'string', value: '' },\n    { name: 'dogName', operator: 'contains', type: 'string', value: '' },\n    { name: 'name', operator: 'contains', type: 'string', value: '' },\n    { name: 'deposit', operator: 'eq', type: 'boolean', value: null },\n    { name: 'groomersCode', operator: 'contains', type: 'string', value: '' },\n  ];\n\n\n  const handlePrintClick = (event) => {\n\n    setAcnhhorEl(event.currentTarget);\n  };\n\n  const handlePrintClose = () => {\n    setAcnhhorEl(null);\n  };\n  const [columns, setColumns] = React.useState(defaultColumns)\n  React.useEffect(() => {\n    let savedState = localStorage.getItem(`state-${props.title}`) || {};\n    if (Object.keys(savedState).length === 0) {\n      setState(STORE)\n      saveState(STORE)\n    }\n    else {\n      let newstate = JSON.parse(savedState)\n      if (newstate.hidden.length != 0) {\n        let newCol = columns\n        newstate.hidden.forEach(i => newCol.forEach(y => { if (y.name == i) { y.visible = false } }))\n        \n        setColumns(newCol)\n      }\n      // if (newstate.columnWidth){\n      //   columns.forEach(i => {\n      //    let storedColumn= newstate.columnWidth.find(y=> y.name==i.name)\n      //     if (storedColumn.width){\n      //       i.width = storedColumn.width\n      //     }\n      //   })\n\n      // }\n      setState(newstate)\n    }\n\n  }, [refresh])\n\n  React.useEffect(() => {\n\n\n    async function fetchData() {\n      let payIds = []\n      let dogIds = []\n\n\n\n      props.rows && props.rows.forEach(i => {\n        if (i.payment_ref) { i.payment_ref.forEach(y => { payIds.push(y) }) }\n\n        if (i.dog_ref) { dogIds.push(i.dog_ref) }\n      })\n      dogIds = [...new Set(dogIds.map(item => { return item }))]\n      payIds = [...new Set(payIds.map(item => { return item }))]\n      let paymentData = await dataProvider.getMany('payments', { ids: payIds, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n      let dogData = await dataProvider.getMany('dogs', { ids: dogIds, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n\n      let rows = props.rows || []\n      rows.forEach(i => {\n        i.date = i.start.substring(0, 10);\n        if (i.payment_ref) {\n          let paydata = []\n          i.payment_ref.forEach(y => {\n            paydata.push(paymentData.data.filter(z => z.id === y)[0])\n          })\n          let deposit = false\n          let depositAmount\n          paydata.forEach(w => { if (w.deposit) { depositAmount = '$' + w.amount / 100; deposit = true } })\n          i.deposit = deposit\n          i.depositAmount = depositAmount\n          i.paymentData = paydata\n\n        }\n        i.dogData = dogData.data[dogData.data.findIndex(y => y.id === i.dog_ref)]\n\n      })\n\n      setRows(rows)\n    }\n\n    fetchData()\n  }, [props.rows])\n\n\n\n\n\n\n  return (\n    <>\n      <Title title={props.title} />\n      <div>\n        <Button\n          label=\"Filters\"\n          onClick={() => setFilter(!filter)}>\n          <FilterListIcon />\n        </Button>\n        <Button\n          label=\"Print\"\n          onClick={handlePrintClick}\n        >\n          <PrintIcon />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchroEl}\n          keepMounted\n          open={Boolean(anchroEl)}\n          onClose={handlePrintClose}\n        >\n          <ReactToPrint content={() => componentRef.current}>\n            <PrintContextConsumer>\n              {({ handlePrint }) => (\n                <>\n                  <MenuItem onClick={handlePrint}>Daycare Attendance List</MenuItem>\n                  {Boolean(anchroEl) && <div style={{ display: \"none\" }}>\n                    <DaycareToPrint ref={componentRef} selected={props.title === 'Daycare Today' ? rows : false} />\n                  </div>}\n                </>\n              )}\n            </PrintContextConsumer>\n          </ReactToPrint>\n          <ReactToPrint content={() => componentRef1.current}>\n            <PrintContextConsumer>\n              {({ handlePrint }) => (\n                <>\n                  <MenuItem onClick={handlePrint}>Grooming Attendance List</MenuItem>\n                  {Boolean(anchroEl) && <div style={{ display: \"none\" }}>\n                    <GroomingPrint ref={componentRef1} selected={props.title === 'Grooming Today' ? rows : false} />\n                  </div>}\n                </>\n              )}\n            </PrintContextConsumer>\n          </ReactToPrint>\n        </Menu>\n        {Object.keys(selected).length === 1 && <EditButton\n          basePath='/bookings' label='Edit' record={Object.values(selected)[0]}\n        />}\n        {Object.keys(selected).length === 1 && <Button\n          label=\"Charge card\">\n          <MonetizationOnIcon />\n        </Button>}\n        {Object.keys(selected).length !== 0 && <Button\n          label=\"Message Owners\">\n          <SendIcon />\n        </Button>}\n      </div>\n      <ReactDataGrid\n \n        idProperty=\"id\"\n        columns={columns}\n        columnOrder={state.columnOrder}\n        dataSource={rows}\n        style={gridStyle}\n        onEditComplete={onEditComplete}\n        editable={true}\n        defaultFilterValue={defaultFilterValue}\n        onSelectionChange={select => setSelected(select.selected)}\n        enableFiltering={filter}\n        onSortInfoChange={onSortInfoChange}\n        onColumnOrderChange={onColumnOrderChange}\n     //   onBatchColumnResize={onBatchColumnResize}\n        onColumnVisibleChange={onColumnVisibleChange}\n        multiSelect\n        checkboxColumn\n\n      />\n    </>\n  )\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default function BookingsToday() {\n\n\n\n\n  let today = new Date()\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload: { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'start': dateFormat(today, \"yyyy-mm-dd\") } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='Bookings Today' />\n\n\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport moment from 'moment';\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default function DaycareToday() {\n\n\n\n  let today = new Date()\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload: { 'pagination': { \"page\": 1, \"perPage\": 10000 }, filter: { 'category': 'daycare', 'start': dateFormat(today, \"yyyy-mm-dd\") } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n  \n\n    return   <BookingView  rows={data} title='Daycare Today' />\n    \n  \n};\n\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport moment from 'moment';\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default function GroomingToday() {\n\n\n\n  let today = new Date()\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload: { 'pagination': { \"page\": 1, \"perPage\": 10000 }, filter: { 'category': 'stylist', 'start': dateFormat(today, \"yyyy-mm-dd\") } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n  \n\n    return   <BookingView  rows={data} title='Grooming Today' />\n    \n  \n};\n\n\n\n","import React from 'react';\nimport './ConversationSearch.css';\n\nexport default function ConversationSearch(props) {\n\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Client\"\n        onChange={event => props.searchFilterFunction(event.target.value)}\n        value={props.searchText}\n      />\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport shave from 'shave';\n\n\nimport './ConversationListItem.css';\n\n\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n\n\n  const { photo, name, text, unreadCount } = props.data;\n\n  return (\n    <div className=\"conversation-list-item\" onClick={() => {\n\n      props.onClick({ sid: props.data.sid, name: props.data.name })\n    }}>\n\n      <div className=\"conversation-info\">\n        <h1 className=\"conversation-title\">{name}\n        </h1>\n        <p className=\"conversation-snippet\">{text}\n        {unreadCount !== 0 && <text className=\"badge\">{unreadCount}</text>}\n        </p>\n\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useState, Fragment, useEffect } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport ConversationSearch from '../../views/messenger/ConversationSearch'\nimport { useDataProvider, Loading } from 'react-admin';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 500,\n        maxWidth: 300,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function NewConvoCreate(props) {\n    const dataProvider = useDataProvider();\n    const classes = useStyles();\n    const [allCust, setAllCust] = useState([])\n    const [allCustHolder, setAllCustHolder] = useState([])\n    const [total, setTotal] = useState('')\n    const [searchText, setSearchText] = useState('')\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        \n        async function fetchData() {\n            let all_clients = await dataProvider.getList('clients', { pagination: { page: 1, perPage: 10000 }, })\n            setTotal(all_clients.total)\n            setAllCust(all_clients.data)\n            setAllCustHolder(all_clients.data)\n            setLoading(false)\n        }\n\n        fetchData()\n    }, [])\n    const searchFilterFunction = (text) => {\n\n        const newData = allCustHolder.filter(item => {\n\n\n            let name\n            try {\n                name = item.name.toUpperCase()\n            }\n            catch { name = null }\n\n\n            const itemData = `${name}`;\n            const textData = text.toUpperCase();\n\n            return itemData.indexOf(textData) > -1;\n        });\n\n        setSearchText(text)\n        setAllCust(newData)\n        setTotal(newData.length)\n\n    };\n\n    const handleClick = (event) => {\n\n        let search = props.activeConvos.filter(i => i.text === event.phone)\n        if (search.length > 0) {\n\n            props.setActiveConvo({ sid: search[0].sid, name: search[0].name })\n            props.open(!props.visible)\n        }\n        else {\n\n            props.createNewConvo(event.phone, event.name)\n            props.open(!props.visible)\n        }\n\n\n    }\n\n\n\n    function renderRow(props) {\n        const { index, style } = props;\n\n        return (\n            <ListItem onClick={async () => handleClick(allCust[index])} button style={style} key={index} >\n                <ListItemText primary={allCust[index].name} />\n            </ListItem>\n        );\n    }\n\n    renderRow.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.object.isRequired,\n    };\n\n    return (\n        loading ? <Loading /> : (<Fragment>\n            <Dialog open={props.visible}>\n\n                <DialogTitle>Create new Conversation</DialogTitle>\n\n                <DialogContent>\n                    <div className={classes.root}>\n                        <ConversationSearch searchText={searchText} searchFilterFunction={searchFilterFunction} />\n                        <FixedSizeList height={400} width={300} itemSize={46} itemCount={total} >\n                            {renderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={() => props.open(!props.visible)}\n                    >\n                        <IconCancel />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>)\n\n    )\n}\n\n\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport { getTWToken } from '../../../components/authProvider'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport {\n  Button\n} from 'react-admin';\nimport NewConvoCreate from '../../../components/newCovoCreate'\nimport './ConversationList.css';\nimport { NotificationManager } from 'react-notifications';\nimport NotificationContext from '../../../components/Context'\nimport { useDataProvider } from 'react-admin';\n\nconst Conversations = require('@twilio/conversations');\n\n\n\nexport default function ConversationList(props) {\n\n  const dataProvider = useDataProvider();\n  const { notifications, setNotifications, removeAllMessNotif } = useContext(NotificationContext)\n  const [conversations, setConversations] = useState([]);\n  const [conversationHolder, setConverrsationHolder] = useState([]);\n  const [searchText, setSearchText] = useState(null)\n  const [newConvoVisible, setNewConvoVisible] = useState(false)\n\n\n  useEffect(() => {\n    getConversations()\n  }, [])\n\n  const notify = (event, conversation) => {\n    let convoItem = conversation.filter(i => i.text === event.conversation.channelState.uniqueName.split(':')[1])[0]\n    NotificationManager.info(convoItem.name, 'New message', 3000);\n    setNotifications({ message: `Message from ${convoItem.name}`, type: 'message', convoItem:convoItem })\n\n  }\n\n\n  const refreshConvoList = useCallback(async (client, event) => {\n\n\n\n    if (client) {\n\n      let items = []\n      async function processChannels(paginator) {\n        if (paginator.hasNextPage) {\n\n          const nextPaginator = await paginator.nextPage();\n          items = items.concat(nextPaginator.items)\n          await processChannels(nextPaginator);\n        }\n      }\n      let clientconvo = await client.getSubscribedConversations()\n      items = clientconvo.items\n      await processChannels(clientconvo);\n      \n      let newConversations = await Promise.all(items.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n      event && notify(event, newConversations)\n    }\n\n  }, [conversations])\n\n  const refreshToken = async (client) => {\n\n\n    console.log('token about to expire')\n    let token = await getTWToken()\n    client.updateToken(token);\n\n    console.log('client\\'s token updated')\n  }\n\n  async function getClient(token, callback) {\n    let items = []\n    async function processChannels(paginator) {\n\n\n      if (paginator.hasNextPage) {\n\n        const nextPaginator = await paginator.nextPage();\n        items = items.concat(nextPaginator.items)\n        await processChannels(nextPaginator);\n      }\n    }\n\n    let client = await Conversations.Client.create(token);\n\n\n    client.addListener('tokenAboutToExpire', () => refreshToken(client));\n\n    client.addListener('connectionStateChanged', async (event) => {\n      if (event === 'connected') {\n        let clientconvo = await client.getSubscribedConversations()\n        items = clientconvo.items\n        await processChannels(clientconvo);\n        props.setClient(client)\n\n        if (client._eventsCount === 2) {\n          client.addListener('messageAdded', (event) => refreshConvoList(client, event))\n          client.addListener('conversationRemoved', () => refreshConvoList(client))\n          client.addListener('conversationAdded', (event) => refreshConvoList(client, event))\n        }\n        callback(items)\n      }\n    })\n  }\n\n  const searchFilterFunction = (text) => {\n\n    const newData = conversationHolder.filter(item => {\n\n\n      let name\n      try {\n        name = item.name.toUpperCase()\n      }\n      catch { name = null }\n      let phone\n      try {\n        phone = item.phone\n      }\n      catch { phone = null }\n\n      const itemData = `${name} ${phone}`;\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n\n    setSearchText(text)\n    setConversations(newData)\n\n  };\n\n\n  const createConvo = async (number, name) => {\n\n    let twiConvo = await props.client.createConversation({ \"friendlyName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number, \"uniqueName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number })\n    await twiConvo.addNonChatParticipant(\"+61488844176\", number)\n\n    await twiConvo.add(\"pBjefCCX5JXw6QbYFu2GR7rmouw1\")\n    //refreshConvoList()// set this as event listener\n    props.setactiveConvo({ sid: twiConvo.sid, name: name })\n\n\n  }\n\n\n  const getConversations = async () => {\n\n    let token = await getTWToken()\n\n    getClient(token, async convos => {\n\n\n      let newConversations = await Promise.all(convos.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n\n    })\n\n\n\n  }\n\n  const setactiveConvo = (obj) => {\n    props.setactiveConvo(obj)\n    removeAllMessNotif(obj)\n    conversations[conversations.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    conversationHolder[conversationHolder.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    setConversations(conversations)\n    setConverrsationHolder(conversationHolder)\n  }\n\n  return (\n    <div className=\"conversation-list\">\n      <Toolbar\n        title=\"Messenger\"\n        leftItems={[\n          <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n        ]}\n        rightItems={[\n          <Button\n            onClick={() => setNewConvoVisible(!newConvoVisible)}\n          >\n            <AddBoxIcon />\n          </Button>,\n          <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n        ]}\n      />\n      <ConversationSearch\n        searchFilterFunction={searchFilterFunction}\n        searchText={searchText}\n      />\n      {\n        conversations.map(conversation =>\n          <ConversationListItem\n            key={conversation.sid}\n            data={conversation}\n            onClick={setactiveConvo}\n          />\n        )\n      }\n     {newConvoVisible && <NewConvoCreate visible={newConvoVisible} open={setNewConvoVisible} activeConvos={conversations} setActiveConvo={props.setactiveConvo} createNewConvo={createConvo} />}\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageIcon from '@material-ui/icons/Image';\nimport {\n  Button\n} from 'react-admin';\nimport './Compose.css';\nimport Imageuploader from \"../../../components/imageUploader\"\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport default function Compose(props) {\n  const [dialog, setDialog] = useState(false)\n\n\n\n  return (\n    <div className=\"compose\" >\n\n      <TextareaAutosize\n       \n        type=\"text\"\n        className=\"compose-input\"\n        placeholder=\"Type a message\"\n        value={props.value}\n        onChange={event => { props.onChange(event.target.value) }}\n        spellCheck={true}\n        minRows='2'\n      />\n      {props.value ? <Button\n        onClick={() => props.onSend()}\n      >\n        <SendIcon />\n      </Button> : <Button\n        onClick={() => setDialog(!dialog)}\n      >\n        <ImageIcon />\n      </Button>}\n     <Imageuploader open={dialog} onCancel={() => setDialog(!dialog)} onDrop={props.onDrop} onPicSend={props.onPicSend}/>\n      {\n        props.rightItems\n      }\n    </div>\n  );\n}","import React from 'react';\nimport moment from 'moment';\nimport Lightbox from 'react-lightbox-component';\nimport './Message.css';\n\nexport default function Message(props) {\n  const {\n    data,\n    isMine,\n    startsSequence,\n    endsSequence,\n    showTimestamp\n  } = props;\n  var searchPattern = new RegExp('^' + 'https://bit.ly/');\n\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n  return (\n    <div className={[\n      'message',\n      `${isMine ? 'mine' : ''}`,\n      `${startsSequence ? 'start' : ''}`,\n      `${endsSequence ? 'end' : ''}`\n    ].join(' ')}>\n      {\n        showTimestamp &&\n        <div className=\"timestamp\">\n          {friendlyTimestamp}\n        </div>\n      }\n\n      <div className=\"bubble-container\">\n        <div className=\"bubble\" title={friendlyTimestamp}>\n          {searchPattern.test(data.message) ? <Lightbox thumbnailWidth='150px'\n            thumbnailHeight='150px' images={\n              [\n                {\n                  src: data.message\n                }\n              ]\n            } /> : data.message}\n        </div>\n      </div>\n    </div>\n  );\n}","\nvar axios = require('axios');\n\n\n\n\n\n\n\n\n\nexport const SendPicToServ = async (token, file) => {\n\n\n\n    function readFile(file) {\n        return new Promise((resolve, reject) => {\n            let fr = new FileReader();\n            fr.onload = x => resolve(fr.result);\n            fr.onerrror = reject;\n            fr.readAsDataURL(file)\n        })\n    }\n\n    let base64 = await readFile(file)\n\n    var data = JSON.stringify({\n        \"token\": token,\n        \"image\": base64.replace(\"data:\", \"\").replace(/^.*;base64,/, \"\")\n    });\n\n    var config = {\n        method: 'post',\n        url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/adminPicUploader',\n        headers: {\n            'Authorization': 'Basic ODU2NzZCNUEtOEE5MS00NzYwLUE4MTctODQ2MUIyQ0I3MTI0OjZCQ0FGQUY5LUVFQ0YtNDRBNi04QTBBLTg3RjFDQUYxQTQxNg==',\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    return axios(config)\n        .then(function (response) {\n            return response.data\n        })\n        .catch(function (error) {\n            return error\n        });\n\n\n}\n\n\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport { SendPicToServ } from '../../../components/TwilioHelper'\nimport { getToken } from '../../../components/authProvider'\nimport './MessageList.css';\n\n\nconst MY_USER_ID = 'pBjefCCX5JXw6QbYFu2GR7rmouw1';\n\nexport default function MessageList(props) {\n\n  const [messages, setMessages] = useState([])\n  const [newMessage, setNewMessage] = useState(null)\n  const [convo, setConvo] = useState(null)\n  const messagesEndRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n\n\n\n  const onPicSend = async () => {\n    let token = await getToken()\n\n    for (let file of selectedFile) {\n      let url = await SendPicToServ(token, file)\n\n      await sendMessage(url)\n    }\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages]);\n  const getMessages = useCallback( async function  () {\n    var tempMessages = []\n    if (props.activeConvo) {\n\n\n       let convo = await props.client.getConversationBySid(props.activeConvo.sid)\n       convo._events.messageAdded.length === 0 && convo.addListener('messageAdded', getMessages)\n      \n       convo.channelState.lastMessage && convo.advanceLastReadMessageIndex(convo.channelState.lastMessage.index)\n       setConvo(convo)\n      let messages = await convo.getMessages()\n      tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n\n    }\n\n    setMessages(tempMessages)\n  },[props.activeConvo, props.client])\n\n  useEffect(() => {\n\n    getMessages();\n    return ()=>{\n      if (convo){\n        convo.removeListener('messageAdded', getMessages)\n        \n      }\n    }\n  }, [convo, getMessages, props.activeConvo, props.client])\n\n\n  \n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n  const sendMessage = async (img) => {\n    await convo.sendMessage(img ? img : newMessage)\n    let messages = await convo.getMessages()\n    let tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n    setNewMessage(\"\")\n    setMessages(tempMessages)\n  }\n\n\n\n\n  return (\n    <div className=\"message-list\">\n      <Toolbar\n        title={props.activeConvo ? props.activeConvo.name : 'Select a conversation'}\n        rightItems={[\n          <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n          <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n          <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n        ]}\n      />\n\n      <div className=\"message-list-container\">{renderMessages()}\n        <div ref={messagesEndRef} />\n      </div>\n\n\n      <Compose\n        value={newMessage}\n        onChange={setNewMessage}\n        onSend={sendMessage}\n        onPicSend={onPicSend}\n        onDrop={setSelectedFile}\n        rightItems={[\n\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]} />\n    </div>\n  );\n}","import React , { useState } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\n\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n  \n  const [activeConvo, setactiveConvo] = useState(null);\n  const [client, setClient]= useState(null)\n  \n  return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList setactiveConvo={setactiveConvo} setClient={setClient} client={client} />\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList activeConvo={activeConvo} client={client} />\n        </div>\n      </div>\n    );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useState, Fragment, useEffect, useContext } from 'react';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport ConversationSearch from '../views/messenger/ConversationSearch'\nimport NotificationContext from './Context'\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { DialogContentText } from '@material-ui/core';\nimport { Loading } from 'react-admin';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { useDataProvider, Button } from 'react-admin';\nimport moment from 'moment';\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline';\nimport {useHistory} from \"react-router-dom\";\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 600,\n        maxWidth: 450,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function LinkSquarePayment(props) {\n    const history = useHistory();\n    const dataProvider = useDataProvider();\n    const classes = useStyles();\n    const { linkSquareModal, openSquareLink, selectedPayments } = useContext(NotificationContext)\n    const [todayBookings, setTodayBookings] = useState([])\n    const [todayBookinsHolder, setTodaysBookingsHolder] = useState([])\n    const [total, setTotal] = useState('')\n    const [searchText, setSearchText] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [checked, setChecked] = React.useState([]);\n    const [viewToday, setViewToday] = React.useState(true)\n\n    const handleToggle = (value) => () => {\n\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n\n    useEffect(() => {\n\n        async function fetchData() {\n            setLoading(true)\n            let today = new Date()\n            let all_clients\n            viewToday ? all_clients = await dataProvider.getList('bookings', { filter: { 'start': dateFormat(today, \"yyyy-mm-dd\") }, 'pagination': { \"page\": 1, \"perPage\": 10000 } }) : all_clients = await dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 10000 } })\n            all_clients.data.forEach(i => { i.date = i.start.substring(0, 10); })\n            setTotal(all_clients.total)\n            setTodayBookings(all_clients.data)\n            setTodaysBookingsHolder(all_clients.data)\n            setLoading(false)\n        }\n\n        fetchData()\n    }, [viewToday])\n    const searchFilterFunction = (text) => {\n\n        const newData = todayBookinsHolder.filter(item => {\n\n\n            let name\n            try {\n                name = item.name.toUpperCase()\n            }\n            catch { name = null }\n            let dogName\n            try {\n                dogName = item.dogName.toUpperCase()\n            }\n            catch { name = null }\n\n            let date\n            try {\n                date = item.date.toUpperCase()\n            }\n            catch { date = null }\n\n            const itemData = `${name} ${dogName} ${date}`;\n            const textData = text.toUpperCase();\n\n            return itemData.indexOf(textData) > -1;\n        });\n\n        setSearchText(text)\n        setTodayBookings(newData)\n        setTotal(newData.length)\n\n    };\n\n    const handleClick = async () => {\n        let paymentsIDS = selectedPayments\n        let bookingIDS = checked.map(i=>i.id)\n        await dataProvider.updateMany('payments',{ids:paymentsIDS, data:{booking_ref: bookingIDS, linked:true}})\n        await dataProvider.updateMany('bookings', {ids: bookingIDS, data:{payment_ref: paymentsIDS}})\n        setChecked([])\n        props.refetch()\n        openSquareLink()\n    }\n\n\n\n    function renderRow(props) {\n        const { index, style } = props;\n\n        return (\n            <ListItem button style={style} key={index} >\n                <ListItemText primary={`${todayBookings[index].name} - ${todayBookings[index].dogName}`} secondary={`${todayBookings[index].service} - ${todayBookings[index].date}`} />\n                <Checkbox\n                    edge=\"end\"\n                    onChange={handleToggle(todayBookings[index])}\n                    checked={checked.indexOf(todayBookings[index]) !== -1}\n\n                />\n            </ListItem>\n        );\n    }\n\n    renderRow.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.object.isRequired,\n    };\n\n    return (\n\n        loading ? <Loading /> : (<Fragment>\n\n            <Dialog open={linkSquareModal}>\n\n                <DialogTitle>Link Square payment with booking</DialogTitle>\n\n                <DialogContent>\n                    <DialogContentText>Search \"Client Dog YYYY-MM-DD\"</DialogContentText>\n                    <div className={classes.root}>\n                        <ConversationSearch searchText={searchText} searchFilterFunction={searchFilterFunction} />\n                        <FixedSizeList height={550} width={450} itemSize={60} itemCount={total} >\n                            {renderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </DialogContent>\n\n                <DialogActions>\n                    <Button\n                        label={viewToday ? 'Today' : 'All'}\n                        onClick={() => setViewToday(!viewToday)}\n                    >\n                        <ViewHeadlineIcon />\n                    </Button>\n                    {checked.length !== 0 && <Button\n                        label=\"Link\"\n                     onClick={()=>handleClick()}\n                    >\n                        <LinkIcon />\n                    </Button>}\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={() => openSquareLink()}\n                    >\n                        <IconCancel />\n                    </Button>\n\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>)\n\n    )\n}\n\n","import * as React from \"react\";\nimport {\n\n    EditButton,\n    useDataProvider, Loading, Error, useQueryWithStore\n\n} from 'react-admin';\nimport { Title, Button, changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport StringFilter from \"@inovua/reactdatagrid-community/StringFilter\"\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentsShow from '../components/AttachmentsShow'\nimport { ifAttchaments } from '../components/authProvider'\nimport BoolEditor from \"@inovua/reactdatagrid-community/BoolEditor\";\nimport NotificationContext from '../components/Context'\nimport LinkSquarePayment from \"../components/linkSquarePayment\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport { DragHandle } from \"@material-ui/icons\";\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default function DogView(props) {\n\n    const dataProvider = useDataProvider();\n    const [selected, setSelected] = React.useState({})\n    const [filter, setFilter] = React.useState(false)\n    const [rows, setRows] = React.useState([])\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState();\n    const { linkSquareModal, openSquareLink, setPayments } = React.useContext(NotificationContext)\n\n    const handleLinkButton = ()=>{\n        let selectedPayme = Object.values(selected).map(i=>i.id)\n        setPayments(selectedPayme)\n        openSquareLink()\n        \n    }\n\n    const onEditComplete = async ({ value, columnId, rowIndex, data }) => {\n        try {\n            if (columnId === 'deposit') {\n\n\n                let nrows = rows\n                nrows[nrows.findIndex(i => i.id === data.id)].deposit = value\n                setRows(nrows)\n                await dataProvider.update('payments', { id: data.id, data: { deposit: value } })\n            }\n\n        }\n        catch { }\n\n    }\n\n\n\n    const columns = [\n        {\n            name: 'description', header: 'Description', defaultWidth: 200, editable: false\n        },\n        {\n            name: 'status', header: 'Status', defaultWidth: 130, filterEditor: SelectFilter, editable: false,\n            filterEditorProps: {\n                multiple: true,\n                wrapMultiple: false,\n                dataSource: [\"succeeded\", 'failed'].map(c => {\n                    return { id: c, label: c.charAt(0).toUpperCase() + c.slice(1) }\n                }),\n            }, render: ({ value }) => {\n                if (value === 'succeeded') {\n                    return <Chip color='primary' style={{ backgroundColor: 'green' }} label={'Suceeded'} key={value} />\n                }\n                else if (value === 'failed') {\n                    return <Chip color='primary' style={{ backgroundColor: 'red' }} label={'Failed'} key={value} />\n                }\n            }\n        },\n        {\n            name: 'name', editable: false, header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n\n                    return <a href={'#clients/' + data.bookingData[0].client_ref} ><span style={{ paddingRight: '5px' }}>{value}</span></a>\n\n\n\n                }\n                catch { return value }\n\n\n            }\n        },\n        {\n            name: 'bookingData', editable: false, header: 'Bookings', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n                    return <>\n                        {value.map(i => {\n\n                            return (<a href={'#bookings/' + i.id} ><span style={{ paddingRight: '5px' }}>{i.code}</span></a>)\n\n                        })}\n                    </>\n                }\n                catch { return }\n\n\n            }\n        },\n        {\n            name: 'dollaramount', editable: false, header: 'Amount', defaultWidth: 90, filterEditor: NumberFilter, render: ({ value, data }) => { return `$${value}` }\n        },\n        {\n            name: 'deposit', header: 'Deposit', filterEditor: BoolFilter, defaultWidth: 90, render: ({ value }) => value ? < DoneIcon htmlColor='green' style={{ textAlign: 'center', verticalAlign: 'center' }} /> : null, editor: BoolEditor\n        },\n        {\n            name: 'email', editable: false, header: 'Email', defaultWidth: 200\n        },\n        {\n            name: 'system', editable: false, header: 'System', defaultWidth: 130, render: ({ value }) => {\n                if (value === 'Stripe') {\n                    return <Chip color='primary' style={{ backgroundColor: 'blue' }} label={'Stripe'} key={value} />\n                }\n               else if (value === 'Square') {\n                    return <Chip color='primary' style={{ backgroundColor: 'green' }} label={'Square'} key={value} />\n                }\n\n            }, filterEditor: SelectFilter, filterEditorProps: {\n                multiple: true,\n                wrapMultiple: false,\n                dataSource: [\"Stripe\", \"Square\"].map(c => {\n                    return { id: c, label: c.charAt(0).toUpperCase() + c.slice(1) }\n                })\n            }\n        },\n\n\n\n\n\n    ];\n\n    const gridStyle = { minHeight: 550 };\n\n\n    const defaultFilterValue = [\n\n\n        { name: 'status', operator: 'inlist', type: 'select', value: null },\n        { name: 'description', operator: 'contains', type: 'string', value: '' },\n        { name: 'name', operator: 'contains', type: 'string', value: '' },\n        { name: 'email', operator: 'contains', type: 'string', value: '' },\n        { name: 'amount', operator: 'gte', type: 'number', value: '' },\n        { name: 'system', operator: 'inlist', type: 'select', value: null },\n\n        { name: 'deposit', operator: 'eq', type: 'boolean', value: null },\n\n    ];\n\n\n\n\n    React.useEffect(() => {\n\n        async function fetchData() {\n            let data = props.rows || []\n            let BookinIds = []\n            data.forEach(i => {\n                i.booking_ref && i.booking_ref.forEach(y => BookinIds.push(y))\n                let amount = i.amount/100\n                i.dollaramount = amount\n            })\n\n            let bookingData = await dataProvider.getMany('bookings', { ids: BookinIds, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n\n\n            data.forEach(payment => {\n                if (payment.booking_ref) {\n                    let bookingsData = []\n                    payment.booking_ref.forEach(i => {\n                        let booking = bookingData.data.filter(y => y.id === i)\n                        bookingsData.push(booking[0])\n                    })\n                    payment.bookingData = bookingsData\n\n\n                }\n            })\n            setRows(data);\n            setLoading(false);\n\n        }\n        fetchData()\n\n    }, [props.rows])\n\n\n\n\n\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n\n\n\n\n\n\n    return (\n        <>\n        {linkSquareModal && <LinkSquarePayment refetch={props.refetch} /> }\n            <Title title={props.title} />\n            <div>\n                <Button\n                    label=\"Filters\"\n                    onClick={() => setFilter(!filter)}>\n                    <FilterListIcon />\n                </Button>\n                {Object.keys(selected).length === 1 && <EditButton\n                    basePath='/dogs' label='Edit' record={Object.values(selected)[0]}\n                />}\n                {Object.keys(selected).length !== 0 && <Button\n                    label=\"Message Client\">\n                    <SendIcon />\n                </Button>}\n                {Object.keys(selected).length !== 0 && props.title==='Unlinked Payments' && <Button\n                    onClick={() => handleLinkButton()}\n                    label=\"Link Payment\">\n                    <LinkIcon />\n                </Button>}\n            </div>\n            <ReactDataGrid\n                idProperty=\"id\"\n                columns={columns}\n                dataSource={rows}\n                style={gridStyle}\n                defaultFilterValue={defaultFilterValue}\n                onSelectionChange={select => setSelected(select.selected)}\n                enableFiltering={filter}\n                onEditComplete={onEditComplete}\n                editable={true}\n                multiSelect\n                checkboxColumn\n            />\n        </>\n    )\n}\n\n\n\n\n","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport bookingstoday from '../views/bookingToday'\nimport todayDaycare from '../views/todayDaycare'\nimport todayGrooming from '../views/todayGrooming'\nimport grooming from '../views/grooming'\nimport daycare from '../views/daycare'\nimport messenger from '../views/messenger'\nimport bookings from '../views/allbookings'\nimport clients from '../views/clients'\nimport dogs from '../views/dogs'\nimport payments from '../views/payments'\nimport unlinked from '../views/unlinkedPayments'\n\nexport default\n\n[\n\n    <Route   exact path=\"/bookingstoday\" component={bookingstoday}   />,\n    <Route   exact path=\"/clients\" component={clients}   />,\n    <Route   exact path=\"/todaydaycare\" component={todayDaycare}   />,\n    <Route   exact path=\"/dogs\" component={dogs}   />,\n    <Route   exact path=\"/todaygrooming\" component={todayGrooming}   />,\n    <Route   exact path=\"/grooming\" component={grooming}  />,\n    <Route   exact path=\"/daycare\" component={daycare}  />,\n    <Route   exact path=\"/bookings\" component={bookings}  />,\n    <Route   exact path=\"/messenger\" component={messenger}  />,\n    <Route   exact path=\"/payments\" component={payments}  />,\n    <Route   exact path=\"/unlinked\" component={unlinked}  />,\n\n\n];","import React from 'react';\nimport ClientsView from './clientsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function AllClients() {\n\n\n\n\n  const { loaded, error, data, refetch } = useQueryWithStore({\n    type: 'getList',\n    resource: 'clients',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <ClientsView rows={data} refetch={refetch} title='Clients' />\n\n}","import React from 'react';\nimport DogView from './DogsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Dogs() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'dogs',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <DogView rows={data} title='Dogs' />\n\n}\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Grooming() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist'} }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='Grooming' />\n\n}\n\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Daycare() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare'} }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='Daycare' />\n\n}\n\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function AllBookings() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'bookings',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 } }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <BookingView rows={data} title='All Bookings' />\n\n}","import React from 'react';\nimport Messenger from './messenger/Messenger';\nimport Card from '@material-ui/core/Card';\n\nimport { Title } from 'react-admin';\n\nexport default function messenger() {\n\n\n    return (\n        <Card>\n            <Title title=\"Messenger\" />\n\n\n\n                <Messenger />\n\n        </Card>\n\n\n\n    );\n}","import React from 'react';\nimport PaymentsView from './PaymentsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\n\nexport default function Payments() {\n\n\n\n\n  const { loaded, error, data } = useQueryWithStore({\n    type: 'getList',\n    resource: 'payments',\n    payload:{ 'pagination': { \"page\": 1, \"perPage\": 1000000 }, }\n  });\n  if (!loaded) { return <Loading />; }\n  if (error) { return <Error />; }\n\n\n  return <PaymentsView rows={data}  title='All Payments'/>\n\n}\n\n\n\n\n\n\n\n\n\n\n/*\n\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n    <TextField source='booking_ref'/>\n        </Datagrid>\n    </List>\n)\n\n*/","import React from 'react';\nimport PaymentsView from './PaymentsView'\nimport { useQueryWithStore, Loading, Error } from 'react-admin';\n\n\n\nexport default function UnlinkedPayments() {\n\n\n\n\n    const { loaded, error, data, refetch } = useQueryWithStore({\n        type: 'getList',\n        resource: 'payments',\n        payload: { \"filter\": { 'system': 'Square' , 'linked': false}, 'pagination': { \"page\": 1, \"perPage\": 1000000 }, }\n    });\n\n    if (!loaded) { return <Loading />; }\n    if (error) { return <Error />; }\n\n\n    return <PaymentsView rows={data} title='Unlinked Payments' refetch={refetch} />\n\n}\n\n\n\n\n\n\n\n\n\n\n/*\n\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n    <TextField source='booking_ref'/>\n        </Datagrid>\n    </List>\n)\n\n*/","import * as React from \"react\";\nimport { Admin, Resource, ListGuesser, Layout, EditGuesser } from 'react-admin';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport { UserCreate, UserEdit } from './views/clientsView';\nimport { DogList, DogEdit, DogCreate } from './views/DogsView';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Dashboard from './views/Dashboard';\nimport { authProvider, dataProvider, onMessageReceved } from './components/authProvider';\nimport Utils from '@date-io/moment'\nimport GroupIcon from '@material-ui/icons/Group';\nimport MyLayout from './components/MyLayout';\nimport { BookingList } from './views/allbookings'\nimport muCustomRoutes from './components/muCustomRoutes'\nimport { useHistory } from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport NotificationContext from './components/Context'\nimport 'react-lightbox-component/build/css/index.css';\n\n\nconst history = createHashHistory();\n\n\nconst App = () => {\n\n  const {  openSquareLink, setPayments } = React.useContext(NotificationContext)\n // const history = useHistory();\n\n  onMessageReceved(payload => {\n    \n    NotificationManager.success(payload.data.body, payload.data.title);\n    let data = []\n    data.push(payload.data.data)\n    setPayments(data)\n    openSquareLink()\n    history.push('/unlinked');\n  })\n\n\n  return (\n\n  \n       \n      <MuiPickersUtilsProvider utils={Utils}>\n        <NotificationContainer />\n  \n        <Admin disableTelemetry layout={MyLayout} history={history} customRoutes={muCustomRoutes} dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider}>\n      \n          <Resource name=\"clients\" icon={PetsIcon} create={UserCreate} to='/clients' edit={UserEdit} options={{ \"label\": \"Clients\" }} />\n          <Resource name=\"dogs\" create={DogCreate} edit={DogEdit} />\n          <Resource name=\"bookings\" edit={EditGuesser} />\n          <Resource name=\"services\" list={ListGuesser} />\n          <Resource name=\"payments\" />\n          <Resource name=\"notifications\" />\n        </Admin>\n      \n      </MuiPickersUtilsProvider>\n\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ContextProvider } from './components/Context'\n\nReactDOM.render(\n  <React.StrictMode>\n   <ContextProvider>\n    <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}