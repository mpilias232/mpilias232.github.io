{"version":3,"sources":["fields/MyUrlField.js","components/authProvider.js","views/clients.js","components/AttachmentsShow.js","views/dogs.js","views/Dashboard.js","components/Context.js","components/MyNotifis.js","components/MyAppbar.js","components/myMenu.js","components/MyLayout.js","views/BookingView.js","views/allbookings.js","views/bookingToday.js","views/todayDaycare.js","views/todayGrooming.js","views/grooming.js","views/daycare.js","views/messenger/ConversationSearch/index.js","views/messenger/ConversationListItem/index.js","views/messenger/Toolbar/index.js","views/messenger/ToolbarButton/index.js","components/newCovoCreate/index.js","views/messenger/ConversationList/index.js","components/imageUploader.js","views/messenger/Compose/index.js","views/messenger/Message/index.js","components/TwilioHelper.js","views/messenger/MessageList/index.js","views/messenger/Messenger/index.js","components/muCustomRoutes.js","views/messenger.js","components/createAdminStore.js","views/payments.js","App.js","index.js"],"names":["makeStyles","link","textDecoration","icon","width","paddingLeft","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","messaging","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","getToken","a","checkAuth","token","ya","getList","haha","pagination","page","perPage","list","getTWToken","axios","require","data","JSON","stringify","method","url","headers","then","response","catch","error","console","log","getAttchaments","dogId","storage","links","storageRef","ref","listRef","child","listAll","items","i","getDownloadURL","push","window","moment","ClientView","props","filterTypes","Object","assign","ReactDataGrid","defaultProps","dogs","type","emptyValue","operators","name","fn","value","filterValue","map","dog_name","toLowerCase","indexOf","columns","header","defaultWidth","render","href","id","style","paddingRight","gridStyle","minHeight","defaultFilterValue","operator","create","event","rows","state","even","update","index","findIndex","setState","selected","filter","length","clients","Promise","all","client","getManyReference","dog","clientsWDogs","this","total","subs","collection","onSnapshot","docChanges","forEach","change","doc","Title","title","Button","label","onClick","keys","EditButton","basePath","record","values","idProperty","dataSource","onSelectionChange","select","enableFiltering","multiSelect","checkboxColumn","React","PostTitle","UserCreate","Create","SimpleForm","TextInput","source","UserEdit","Edit","AttachmentsShow","useState","setUrl","useEffect","Images","img","src","images","DogView","filterEditor","StringFilter","Chip","color","backgroundColor","BoolFilter","htmlColor","textAlign","verticalAlign","DateFilter","SelectFilter","filterEditorProps","multiple","wrapMultiple","c","owner","DogEdit","TabbedForm","FormTab","ReferenceInput","filterToQuery","searchText","reference","AutocompleteInput","optionText","SelectInput","choices","BooleanInput","options","checkedIcon","DateInput","format","DogCreate","Card","CardHeader","CardContent","NotificationContext","createContext","ContextProvider","Consumer","notifications","setNotifications","notifi","notif","removeNotif","removeAllMessNotif","convoItem","sid","children","Provider","Component","Notifis","useContext","anchorEl","setAnchorEl","history","useHistory","Badge","height","badgeContent","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","item","ListItemIcon","fontSize","message","disabled","useStyles","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","className","theme","root","maxWidth","palette","background","paper","nested","spacing","NestedList","onMenuClick","logout","setOpen","open1","setOpen1","open2","setOpen2","useSelector","getResources","List","component","DashboardMenuItem","sidebarIsOpen","MenuItemLink","to","primaryText","leftIcon","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MyLayout","Layout","menu","appBar","BookingView","getService","service","category","dateFormat","placeholder","cellProps","start","cellDOMProps","onMouseEnter","NotificationManager","success","alert","serviceFilter","ConversationSearch","onChange","searchFilterFunction","target","ConversationListItem","shave","photo","text","unreadCount","Toolbar","leftItems","rightItems","ToolbarButton","NewConvoCreate","allCust","setAllCust","allCustHolder","setAllCustHolder","setTotal","setSearchText","all_clients","handleClick","search","activeConvos","phone","setActiveConvo","visible","createNewConvo","Dialog","DialogTitle","DialogContent","newData","toUpperCase","itemData","textData","itemSize","itemCount","DialogActions","Conversations","ConversationList","conversations","setConversations","conversationHolder","setConverrsationHolder","newConvoVisible","setNewConvoVisible","getConversations","notify","conversation","channelState","uniqueName","split","info","refreshConvoList","useCallback","processChannels","paginator","hasNextPage","nextPage","nextPaginator","concat","getSubscribedConversations","clientconvo","result","friendlyName","dateUpdated","lastMessage","dateCreated","lastReadMessageIndex","newConversations","sort","b","Date","refreshToken","updateToken","getClient","callback","Client","addListener","setClient","_eventsCount","createConvo","number","createConversation","twiConvo","addNonChatParticipant","add","setactiveConvo","convos","obj","Imageuploader","withIcon","buttonText","onDrop","imgExtension","withPreview","onCancel","onPicSend","Compose","dialog","setDialog","spellCheck","minRows","onSend","Message","isMine","startsSequence","endsSequence","showTimestamp","searchPattern","RegExp","friendlyTimestamp","timestamp","join","test","thumbnailWidth","thumbnailHeight","SendPicToServ","file","readFile","resolve","reject","fr","FileReader","onload","x","onerrror","readAsDataURL","base64","replace","MessageList","messages","setMessages","newMessage","setNewMessage","convo","setConvo","messagesEndRef","useRef","selectedFile","setSelectedFile","sendMessage","current","scrollIntoView","behavior","scrollToBottom","getMessages","tempMessages","activeConvo","getConversationBySid","_events","messageAdded","advanceLastReadMessageIndex","author","body","removeListener","messageCount","previous","next","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","renderMessages","Messenger","exact","path","setRows","today","date","substring","reducer","combineReducers","admin","adminReducer","router","connectRouter","saga","rootSaga","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","action","USER_LOGOUT","undefined","applyMiddleware","routerMiddleware","run","PaymentList","Datagrid","rowClick","TextField","NumberField","EmailField","createHashHistory","App","setTokenFound","vapidKey","currentToken","err","getFCMToken","payload","notification","onMessage","payloaf","createAdminStore","utils","Utils","Admin","disableTelemetry","layout","customRoutes","muCustomRoutes","dashboard","Dashboard","Resource","PetsIcon","edit","EditGuesser","ListGuesser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8324355f.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;\n","import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n\n} from 'react-admin-firebase';\n\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { NotificationManager } from 'react-notifications';\n\nconst config = {\n  apiKey: \"AIzaSyAUqOhdFbfRiCRqSzxKpYeTppBGsHfAAug\",\n  authDomain: \"admin-a4a00.firebaseapp.com\",\n  databaseURL: \"https://admin-a4a00-default-rtdb.firebaseio.com\",\n  projectId: \"admin-a4a00\",\n  storageBucket: \"admin-a4a00.appspot.com\",\n  messagingSenderId: \"328849622350\",\n  appId: \"1:328849622350:web:cf2cd21a20f108e7aeca1f\",\n  measurementId: \"G-YKBC2Q28P1\"\n\n\n};\nfirebase.initializeApp(config);\n\n\nconst messaging = firebase.messaging();\n\n\nexport const getFCMToken = (setTokenFound) => {\n\n  return messaging.getToken({ vapidKey: 'BGXh163BEaceHzjq8oIfgZfCnHEze0njY12K3FFlv8N0lLtNYTsKWpE0L7darB0Yiqzt2P_6VCcuHnSvo6beecs' }).then((currentToken) => {\n\n    if (currentToken) {\n\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true);\n      // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false);\n\n      // shows on the UI that permission is required \n    }\n  }).catch((err) => {\n    console.log('An error occurred while retrieving token. ', err);\n    NotificationManager.error('Notifications not enabled!', 'Allow notifications and refresh page', 500000, () => {\n      alert('callback');\n    });\n    // catch error while creating client token\n  });\n}\n\nexport const onMessageReceved = (callback) => {\n\n  messaging.onMessage(payloaf => {\n    callback(payloaf)\n  })\n}\n\nconst options = {};\n\nexport const dataProvider = FirebaseDataProvider(config, options);\n\nexport const authProvider = FirebaseAuthProvider(config);\n\nexport const getToken = async () => {\n\n  let token = await authProvider.checkAuth()\n  return token.ya\n\n}\n\nexport const getList = async (haha) => {\n  let list = await dataProvider.getList(haha, { pagination: { page: 1, perPage: 10000 }, })\n  return list\n}\n\nexport const getTWToken = async () => {\n  var axios = require('axios');\n  let token = await getToken()\n  var data = JSON.stringify({\n    \"token\": token\n  });\n\n  var config = {\n    method: 'post',\n    url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/getToken',\n    headers: {\n      'Authorization': 'Basic MkMzRDBFMkMtODQ3Qi00OEI4LUI1NTItOENCQTlDQkEzREQ4OjgwOEFGMDlBLTBFODgtNDU3Mi04QzJGLUUwOEIwOEE4N0RFMQ==',\n      'Content-Type': 'application/json'\n    },\n    data: data\n  };\n\n  return axios(config)\n    .then(function (response) {\n\n      return response.data;\n    })\n    .catch(function (error) {\n\n      console.log(error);\n    });\n\n}\n\nexport const getAttchaments = async (dogId) => {\n\n\n  var storage = firebase.storage();\n  var links = []\n  var storageRef = storage.ref();\n  var listRef = storageRef.child(`attachments/${dogId}`);\n  var list = await listRef.listAll()\n\n  for (let i of list.items) {\n    let url = await i.getDownloadURL()\n    links.push(url)\n  }\n\n\n\n  return links\n\n\n\n\n}\n\n/*  .then((res) => {\n\n        res.items.forEach((itemRef) => {\n\n          itemRef.getDownloadURL().then(url => {\n\n            links.push(url)\n          })\n\n          // All the items under listRef.\n        }).then(()=>{\n          debugger\n          resolve()})\n\n\n          */","import * as React from \"react\";\nimport { List, Datagrid, Edit, Pagination, Title, EditButton, SimpleList, TextField, Button, EmailField, TextInput, Create, SimpleForm, changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n\nimport * as firebase from \"firebase/app\";\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\n\nexport default class ClientView extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n            selected: {},\n            filter: false,\n            rows: [],\n            length: null\n\n\n        }\n\n\n    }\n\n    filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        dogs: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n              {\n                name:'contains',\n                fn: ({ value, filterValue, data }) => {\n                 debugger\n                    return !filterValue ?\n                    true :\n                 value && value.map(i=> {if (i.dog_name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1){return true}})[0];\n                }\n                 }   ],\n        }\n          });\n\n\n    columns = [\n        {\n            name: 'name', header: 'Name', defaultWidth: 200,\n        },\n        {\n            name: 'email', header: 'E-mail', defaultWidth: 280, render: ({ value }) => {\n\n                return (<a href={\"mailto:\" + value} >{value}</a>)\n            }\n        },\n        {\n            name: 'phone', header: 'Phone', defaultWidth: 150,\n        },\n        {\n            name: 'dog', header: 'Dog', defaultWidth: 200, render: ({ value, data }) => {\n                try {\n                    return <>\n                        { value.map(i => {\n\n                            return (<a href={'#dogs/' + i.id} ><span style={{ paddingRight: '5px' }}>{i.dog_name}</span></a>)\n\n                        })}\n                    </>\n                }\n                catch { return }\n\n\n            }\n        },\n        {\n            name: 'instagram', header: 'Instagram', defaultWidth: 150,\n        },\n\n    ];\n\n    gridStyle = { minHeight: 550 };\n\n    defaultFilterValue = [\n\n\n        { name: 'phone', operator: 'contains', type: 'string', value: '' },\n        { name: 'email', operator: 'contains', type: 'string', value: '' },\n        { name: 'name', operator: 'contains', type: 'string', value: '' },\n        {name: 'dog', operator: 'contains', type: 'dogs', value: ''}, \n        { name: 'instagram', operator: 'contains', type: 'string', value: '' },\n\n    ];\n\n\n\n\n    async componentDidMount() {\n        let clients = await dataProvider.getList('clients', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n\n\n        let clientsWDogs = await Promise.all(clients.data.map(async client => {\n            let dog = await dataProvider.getManyReference('dogs', { \"filter\": { \"owner\": client.id }, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n            client.dog = dog.data\n\n            return client\n\n        }))\n\n        this.setState({ rows: clientsWDogs, length: clients.total })\n\n\n\n        this.subs = firebase.firestore().collection('clients').onSnapshot(a => {\n\n            if (a.docChanges().length !== this.state.length) {\n                a.docChanges().forEach(change => {\n                    if (change.type === 'added'){\n                        this.create(change.doc)\n                    }\n\n\n                   else if (change.type === 'modified') {\n                        this.update(change.doc)\n                    }\n\n\n                    \n                })\n            }\n\n\n\n        })\n\n    }\n    create =(event) => {\n        let rows = this.state.rows\n        let id = event.id\n        let even = event.data()\n        even.id = id\n        rows.push(even)\n    }\n\n    update = (event) => {\n        let rows = this.state.rows\n        debugger\n        let id = event.id\n        let index = this.state.rows.findIndex(i => i.id === id)\n        rows[index] = event.data()\n        rows[index].id = id\n  \n        this.setState({ rows: rows })\n    }\n\n    componentWillUnmount() {\n\n        this.subs()\n    }\n\n\n\n\n\n\n    render() {\n        return (\n            <>\n                <Title title='Clients' />\n                <div>\n                    <Button\n                        label=\"Filters\"\n                        onClick={() => this.setState({ filter: !this.state.filter })}>\n                        <FilterListIcon />\n                    </Button>\n                    {Object.keys(this.state.selected).length === 1 && <EditButton\n                        basePath='/clients' label='Edit' record={Object.values(this.state.selected)[0]}\n                    />}\n                    {Object.keys(this.state.selected).length !== 0 && <Button\n                        label=\"Message Client\">\n                        <SendIcon />\n                    </Button>}\n                </div>\n                <ReactDataGrid\n                    idProperty=\"id\"\n                    columns={this.columns}\n                    dataSource={this.state.rows}\n                    filterTypes={this.filterTypes}\n                    style={this.gridStyle}\n                    defaultFilterValue={this.defaultFilterValue}\n                    onSelectionChange={select => this.setState({ selected: select.selected })}\n                    enableFiltering={this.state.filter}\n                    multiSelect\n                    checkboxColumn\n                />\n            </>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n    return <span>Client {record ? `\"${record.name}\"` : ''}</span>;\n}\n\nexport const UserCreate = props => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const UserEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <SimpleForm>\n            <TextInput source=\"name\" label='Name' />\n            <TextInput source=\"phone\" label=\"Phone\" />\n            <TextInput source=\"email\" label=\"Email\" />\n            <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Edit>\n);\n\n\n\n/*\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\n\nexport const UserList = props =>{\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n   return (\n    <List  perPage={50} {...props} pagination={<PostPagination />} >{isSmall ? (\n        <SimpleList\n            primaryText={record => record.name}\n            secondaryText={record => record.email}\n            tertiaryText={record => record.phone}\n        />\n    ) : (\n\n\n    <CustomizableDatagrid>\n            <TextField source=\"name\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"instagram\" />\n         <EditButton/>\n         </CustomizableDatagrid>\n\n       )}\n    </List>\n);}\n*/\n","import React from 'react';\nimport Lightbox from 'react-lightbox-component';\nimport {getAttchaments} from './authProvider'\n\nexport default function AttachmentsShow(props) {\n    \n  const [url, setUrl]=  React.useState([])\n\n    React.useEffect(\n     async   ()=>{\n            let Images = []\n           let url = await getAttchaments(props.record.id)\n           url.forEach(i=>{\n\n            let img = {}\n            img.src = i\n            Images.push(img)\n           })\n           debugger\n           setUrl(Images)\n\n         //  setUrl(url)\n\n        },[]\n    )\n    \n  return (\n    <div>\n  {url !== []&&  <Lightbox images={\n    url\n    }/>}\n  </div>\n  );\n}\n","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField,TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField\n  \n} from 'react-admin';\nimport {   Title,  Button,  changeLocale } from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport StringFilter from \"@inovua/reactdatagrid-community/StringFilter\"\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport BoolFilter from '@inovua/reactdatagrid-community/BoolFilter'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentsShow from '../components/AttachmentsShow'\n\n\n\nimport * as firebase from \"firebase/app\";\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\nexport default class DogView extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n            selected: {},\n            filter: false,\n            rows: [],\n            length: null\n\n\n        }\n\n\n\n    }\n\n\n    filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\n        client: {\n            type: 'string',\n            emptyValue: '',\n            operators: [\n              {\n                name:'contains',\n                fn: ({ value, filterValue, data }) => {\n                             debugger\n                    return !filterValue ?\n                    true :\n                 value && value.name.toLowerCase().indexOf(filterValue.toLowerCase()) != -1;\n                }\n                 }  \n         ],\n        }\n          });\n\n      \n    columns = [\n        {\n            name: 'dog_name', header: 'Name', defaultWidth: 200,\n        },\n        {\n            name: 'client', header: 'Client', defaultWidth: 200, filterEditor: StringFilter,render: ({ value, data }) => {\n                try {\n                    return <>\n                     \n\n                         <a href={'#clients/' + value.id} ><span style={{ paddingRight: '5px' }}>{value.name}</span></a>\n\n                        \n                    </>\n                }\n                catch { return }\n\n\n            },\n            \n        },\n        {\n            name: 'breed', header: 'Breed', defaultWidth: 200,  render:({value})=>{ \n             return  value &&  (<Chip color='primary' style={{ backgroundColor: 'orange' }} label={value} key={value} />)}\n        },\n        {\n            name: 'vet_email', header: 'Vet Email', defaultWidth: 200,\n        },\n        {\n            name: 'vet', header: 'Vet', defaultWidth: 200\n        },\n        {\n            name: 'DaycareAttendee', header: 'Daycare Attendee', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='green' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'dogdob', header: 'DOB',filterEditor:DateFilter, defaultWidth: 200,\n        },\n        {\n            name: 'comments', header: 'Comments', defaultWidth: 200,\n        },\n        {\n            name: 'sex', header: 'Sex', defaultWidth: 100, filterEditor: SelectFilter,\n            filterEditorProps: {\n              multiple: true,\n              wrapMultiple: false,\n              dataSource: [\"Male\", 'Female'].map(c => {\n                return { id: c, label: c}\n              }),\n            }\n        },\n        {\n            name: 'desexed', header: 'Desexed', defaultWidth: 100, render:({value}) =>{\n                return value && (< DoneIcon htmlColor='pink' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            },  filterEditor:BoolFilter\n        },\n        {\n            name: 'PassedTemperamentTrial', header: 'Passed Temperament Trial', defaultWidth: 150, filterEditor:BoolFilter ,render:({value}) =>{\n                return value && (< DoneIcon htmlColor='blue' style={{textAlign:'center',verticalAlign:'center'}}/> )\n            }\n        },\n        {\n            name: 'kcDue', header: 'KC Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n        {\n            name: 'c3Due', header: 'C3 Due', defaultWidth: 200,filterEditor:DateFilter\n        },\n\n\n\n\n\n    ];\n\n    gridStyle = { minHeight: 550 };\n\n  \n    defaultFilterValue = [\n\n\n\n        { name: 'dog_name', operator: 'contains', type: 'string', value: '' },\n        { name: 'client', operator: 'contains', type: 'client', value: '' },\n        { name: 'breed', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet_email', operator: 'contains', type: 'string', value: '' },\n        { name: 'vet', operator: 'contains', type: 'string', value: '' },\n        { name: 'DaycareAttendee', operator: 'eq', type: 'boolean', value: null },\n        { name: 'dogdob', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'comments', operator: 'contains', type: 'string', value: '' },\n        { name: 'sex', operator: 'inlist', type: 'select', value: null },\n        { name: 'desexed', operator: 'eq', type: 'boolean', value: null },\n        { name: 'PassedTemperamentTrial', operator: 'eq', type: 'boolean', value: null },\n        { name: 'kcDue', operator: 'beforeOrOn', type: 'date', value: ''},\n        { name: 'c3Due', operator: 'beforeOrOn', type: 'date', value: ''},\n    ];\n\n\n\n\n    async componentDidMount() {\n        debugger\n        let dogs = await dataProvider.getList('dogs', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n\n\n         await Promise.all(dogs.data.map(async dog => {\n            \n            let client = await dataProvider.getManyReference('clients', { \"filter\": { \"id\": dog.owner }, 'pagination': { \"page\": 1, \"perPage\": 1000000 } })\n            dog.client = client.data[0]\n\n            return \n\n        }))\n        \n\n        this.setState({ rows: dogs.data, length: dogs.total })\n\n\n    }\n\n\n\n\n    componentWillUnmount() {\n\n    //    this.subs()\n    }\n\n\n\n\n\n\n    render() {\n        return (\n            <>\n                <Title title='Dogs' />\n                <div>\n                    <Button\n                        label=\"Filters\"\n                        onClick={() => this.setState({ filter: !this.state.filter })}>\n                        <FilterListIcon />\n                    </Button>\n                    {Object.keys(this.state.selected).length === 1 && <EditButton\n                        basePath='/dogs' label='Edit' record={Object.values(this.state.selected)[0]}\n                    />}\n                    {Object.keys(this.state.selected).length !== 0 && <Button\n                        label=\"Message Client\">\n                        <SendIcon />\n                    </Button>}\n                </div>\n                <ReactDataGrid\n                    idProperty=\"id\"\n                    columns={this.columns}\n                    filterTypes={this.filterTypes}\n                    dataSource={this.state.rows}\n                    style={this.gridStyle}\n                    defaultFilterValue={this.defaultFilterValue}\n                    onSelectionChange={select => this.setState({ selected: select.selected })}\n                    enableFiltering={this.state.filter}\n                    multiSelect\n                    checkboxColumn\n                />\n            </>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\nconst PostTitle = ({ record }) => {\n       return <span>Dog {record ? `\"${record.dog_name}\"` : ''}</span>;\n    }\n\nexport const DogEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n        <TextInput source=\"dog_name\" label='Dog Name' />\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n     \n          <SelectInput source='sex'  choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/><BooleanInput\nsource=\"desexed\"\noptions={{\n    checkedIcon: <FavoriteIcon />,\n}}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n<FormTab label=\"Attachments\">\n<AttachmentsShow/>\n</FormTab>\n</TabbedForm>\n    </Edit>\n);\n\n\n\nexport const DogCreate = props => (\n      <Create {...props}>\n                 <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n           <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n            \n               <TextInput source=\"dog_name\" label='Dog Name' />\n               <TextInput  source=\"breed\" label='Breed' />\n               <SelectInput source='sex' choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/>\n<BooleanInput\n    source=\"desexed\"\n    options={{\n        checkedIcon: <FavoriteIcon />,\n    }}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n       </Create>\n    \n    );\n\n\n\n\n    /*\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\nconst PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Owner\" source=\"owner\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\n\n\nconst MaleFemaleFilter = () => (\n    <FilterList label=\"Sex\" icon={<AccessTimeIcon />}>\n\n    \n        <FilterListItem\n            label=\"Male\"\n            value={{\n                sex: \"M\"\n            }}\n        />\n         <FilterListItem\n            label=\"Female\"\n            value={{\n               sex: 'F'\n  \n            }}\n        />\n        <FilterListItem\n            label=\"Desexed\"\n            value={{\n               desexed: true\n  \n            }}\n        />\n    </FilterList>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n        <FilterLiveSearch source=\"dog_name\" />\n\n            <MaleFemaleFilter />\n        </CardContent>\n    </Card>\n);\n\nexport const DogList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} perPage={50} pagination={<PostPagination />}  bulkActionButtons={<DogBulk />}  {...props}>\n         \n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.dog_name}\n                    secondaryText={record =>record.Client}\n                />\n            ) : (\n                \n                <CustomizableDatagrid>\n                      <TextField source=\"dog_name\" label='Dog Name' />\n                    <ReferenceField label=\"Client\" source=\"owner\" reference=\"clients\"  >\n                        <TextField source=\"name\"  />\n                    </ReferenceField>\n                    <ReferenceField label=\"Breed\" source='breed' reference=\"dog_breeds\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <SelectField source=\"sex\" choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} />\n                    <BooleanField source=\"desexed\" label='Desexed' />\n                    <EmailField source=\"vet_email\" label='Vet Email' />\n                    <TextField source=\"vet\" label='Vet' />\n                    <DateField source=\"kc_due\" label='KC Due' />\n                    <DateField source=\"c3_due\" label='C3 Due' />\n                    <DateField source=\"c5_due\" label='C5 Due' />\n                    <EditButton />\n                    </CustomizableDatagrid>\n \n            )}\n    \n        </List>\n    );\n}\n*/","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","import React from \"react\";\n\n\nconst NotificationContext = React.createContext();\n\nexport const ContextConsumer = NotificationContext.Consumer\n\n\n\nclass ContextProvider extends React.Component {\n    state = {\n        notifications: []\n    }\n\n\n    setNotifications = (notifi) => {\n        let notif = this.state.notifications\n        notif.push(notifi)\n        this.setState({ notifications: notif })\n    }\n\n    removeNotif = (notif) => {\n        this.setState({notifications: this.state.notifications.filter(i => i !== notif)})\n    }\n\n    removeAllMessNotif = (notif) => {\n        \n        this.setState({notifications: this.state.notifications.filter(i => i.convoItem.sid !== notif.sid)})\n    }\n\n    render() {\n        const { children } = this.props\n        const { notifications } = this.state\n        const { setNotifications, removeNotif, removeAllMessNotif } = this\n\n        return (\n            <NotificationContext.Provider\n                value={{\n                    notifications, setNotifications, removeNotif,\n                    removeAllMessNotif\n                }}\n            >\n                {children}\n            </NotificationContext.Provider>\n        );\n\n    }\n\n\n}\n\n\nexport { ContextProvider }\nexport default NotificationContext","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationContext from './Context'\nimport EmailIcon from '@material-ui/icons/Email';\nimport ContactlessIcon from '@material-ui/icons/Contactless';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Notifis(props) {\n\n  const { notifications,  removeNotif } = React.useContext(NotificationContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const history = useHistory();\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onItemClick = (item) => {\n\n    removeNotif(item)\n    history.push('/messenger');\n\n  }\n\n  const IconSelector = (item) => {\n    if (item.type === 'payment') {\n      return (<ListItemIcon >\n        <ContactlessIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n    else if (item.type === 'message') {\n      return (<ListItemIcon >\n        <EmailIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n  }\n\n\n  return (\n    <div>\n      <Badge style={{\n        height: \"25px\",\n        width: \"45px\"\n      }} badgeContent={notifications.length} color=\"error\">\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <NotificationsIcon htmlColor='white' />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >{notifications.length > 0 ? notifications.map(i => <MenuItem onClick={() => { onItemClick(i) }}>{IconSelector(i)}{i.message}</MenuItem>) :\n          <MenuItem disabled>All Caught Up</MenuItem>\n          }\n\n        </Menu>\n      </Badge>\n    </div>\n  );\n}\n\n ","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notifis from './MyNotifis'\n\n\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\n\nconst MyAppBar = props => {\n  const classes = useStyles()\n\n\n  return (\n\n  <AppBar {...props}>\n\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n\n      <span className={classes.spacer} />\n      <Notifis />\n\n    </AppBar>\n\n  )\n};\n\nexport default MyAppBar;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DashboardMenuItem, MenuItemLink, getResources } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MessageIcon from '@material-ui/icons/Message';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\n\n\n\nfunction NestedList({ onMenuClick, logout }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const resources = useSelector(getResources);\n\n  const linkBookingrange = {\n    pathname: \"/bookings\",\n    hash: \"bookingsrange\"\n  }\n\n\n  return (\n\n    <List\n      component=\"nav\"\n      className={classes.root}\n    >\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <MenuItemLink\n        key='clients'\n        to='/clients'\n        primaryText='Clients'\n        leftIcon={\n\n          <PeopleIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <PetsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dogs\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dogs'\n          to='/dogs'\n          primaryText='All Dogs'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n  \n      </Collapse>\n      <ListItem button onClick={handleClick1}>\n        <ListItemIcon>\n          <CalendarTodayIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Bookings\" />\n        {open1 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookings'\n          to='/bookings'\n          primaryText='All Bookings'\n          leftIcon={\n\n            <EventNoteIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookingstoday'\n          to='/bookingstoday'\n\n          primaryText='Bookings Today'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaydaycare'\n          to='/todaydaycare'\n\n          primaryText='Today Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaygrooming'\n          to='/todaygrooming'\n\n          primaryText='Today Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='grooming'\n          to='/grooming'\n\n          primaryText='Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='daycare'\n          to='/daycare'\n\n          primaryText='Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='services'\n          to='/services'\n          primaryText='Services'\n          leftIcon={\n\n            <AssignmentIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick2}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Payments\" />\n        {open2 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='payments'\n          to='/payments'\n          primaryText='All Payments'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n\n      </Collapse>\n      <MenuItemLink\n        key='messenger'\n        to='/messenger'\n        primaryText='Messenger'\n        leftIcon={\n\n          <MessageIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n    </List>\n  );\n}\n\nexport { NestedList }\n\n  ;","import { Layout } from 'react-admin';\nimport MyAppBar from './MyAppbar'\nimport  {NestedList} from './myMenu';\n\n\nconst MyLayout = props => <Layout\n    {...props}\n\n    menu={NestedList}\n    appBar={MyAppBar}\n/>;\n\nexport default MyLayout;","import React from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport {\n  EditButton,\n  Button\n} from 'react-admin';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Title } from 'react-admin';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default class BookingView extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\n      selected: {},\n      filter: false,\n      serviceFilter: [],\n\n\n    }\n  }\n\n\n  getService = () => {\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n\n      return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n\n  columns = [\n    {\n      name: 'name', header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n\n        if (data['client_ref']) {\n\n          return (<a href={'#clients/' + data['client_ref']} >{value}</a>)\n\n        }\n        else\n          return (<span >{value}</span>)\n\n      }\n    },\n    {\n      name: 'dogName', header: 'Dog', defaultWidth: 150, render: ({ value, data }) => {\n        if (data['dog_ref']) {\n          return (<a href={'#dogs/' + data['dog_ref']} >{value}</a>)\n        }\n        else\n          return (<span >{value}</span>)\n      }\n    }, {\n      name: 'status', header: 'Status', defaultWidth: 101, render: ({ value, data }) => {\n        if (value === 'confirmed') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'green' }} label='Confirmed' key={value} />\n          )\n        }\n        else if (value === 'modified') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'orange' }} label='Modified' key={value} />\n          )\n        }\n        else if (value === 'cancelled') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'red' }} label='Cancelled' key={value} />\n          )\n        }\n      }\n    },\n    {\n      name: 'service', header: 'Service', defaultWidth: 250,\n      render: ({ value, data }) => {\n        return (<span >{value || ''} {data.category || ''}</span>)\n      },\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: this.getService(),\n      }\n    },\n    {\n      name: 'date', header: 'Booking Date', defaultWidth: 138, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, cellProps: { dateFormat } }) => {\n        return moment(value).format('ddd DD/MM/YYYY')\n      },\n    },\n    {\n      name: 'end', header: 'Time', defaultWidth: 150, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, data }) => {\n\n        return `${moment(data.start).format('hh:mm A')}-${moment(value).format('hh:mm A')}`\n      },\n    },\n    {\n      name: 'addOns', header: 'AddOns', defaultWidth: 180, render: ({ value }) => {\n        if (value.length !== 0) {\n\n          return (\n            <>\n              {value.map(item =>\n\n                <Chip color='secondary' label={item} key={item} />\n\n              )}\n            </>\n          )\n\n        }\n        else\n          return (<span></span>)\n      },\n      cellDOMProps: ({ data, value }) => {\n        if (value.length > 2) {\n          return {\n            onMouseEnter: () => {\n              NotificationManager.success(value.map(item => { return <>{item}<br /></> }), 'Extras', 5000, () => { alert(value.map(i => `${i}\\n`)) });\n            }\n          }\n        }\n      }\n    },\n    { name: 'code', header: 'Booking Code', defaultWidth: 110 },\n  ];\n\n  gridStyle = { minHeight: 550 };\n\n  defaultFilterValue = [\n\n    { name: 'date', operator: 'eq', type: 'date', value: '' },\n    { name: 'service', operator: 'inlist', type: 'select', value: null },\n    { name: 'code', operator: 'contains', type: 'string', value: '' },\n    { name: 'dogName', operator: 'contains', type: 'string', value: '' },\n    { name: 'name', operator: 'contains', type: 'string', value: '' },\n  ];\n\n\n\n\n\n\n\n\n\n\n  render() {\n    return (\n      <>\n        <Title title={this.props.title} />\n        <div>\n          <Button\n            label=\"Filters\"\n            onClick={() => this.setState({ filter: !this.state.filter })}>\n            <FilterListIcon />\n          </Button>\n          {Object.keys(this.state.selected).length === 1 && <EditButton\n            basePath='/bookings' label='Edit' record={Object.values(this.state.selected)[0]}\n          />}\n          {Object.keys(this.state.selected).length === 1 && <Button\n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}\n          {Object.keys(this.state.selected).length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>}\n        </div>\n        <ReactDataGrid\n          idProperty=\"id\"\n          columns={this.columns}\n          dataSource={this.props.rows}\n          style={this.gridStyle}\n          defaultFilterValue={this.defaultFilterValue}\n          onSelectionChange={select => this.setState({ selected: select.selected })}\n          enableFiltering={this.state.filter}\n          multiSelect\n          checkboxColumn\n        // pagination='local'\n        // dataSource={this.handleCallback}\n        />\n      </>\n    )\n  }\n}","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function DaycareToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='All Bookings'/>\n    </>\n  );\n}","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function BookingsToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'start': dateFormat(today, \"yyyy-mm-dd\") } }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n     setRows(response.data )\n\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Bookings Today'/>\n    </>\n  );\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function DaycareToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare','start': dateFormat(today, \"yyyy-mm-dd\")} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Daycare Today'/>\n    </>\n  );\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function GroomingToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist','start': dateFormat(today, \"yyyy-mm-dd\")} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n    \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Grooming Today'/>\n    </>\n  );\n}\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function GroomingToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist'}}).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n    \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Grooming'/>\n    </>\n  );\n}\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function Daycare() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare'} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Daycare Today'/>\n    </>\n  );\n}","import React from 'react';\nimport './ConversationSearch.css';\n\nexport default function ConversationSearch(props) {\n\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Client\"\n        onChange={event => props.searchFilterFunction(event.target.value)}\n        value={props.searchText}\n      />\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport shave from 'shave';\n\n\nimport './ConversationListItem.css';\n\n\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n\n\n  const { photo, name, text, unreadCount } = props.data;\n\n  return (\n    <div className=\"conversation-list-item\" onClick={() => {\n\n      props.onClick({ sid: props.data.sid, name: props.data.name })\n    }}>\n\n      <div className=\"conversation-info\">\n        <h1 className=\"conversation-title\">{name}\n        </h1>\n        <p className=\"conversation-snippet\">{text}\n        {unreadCount !== 0 && <text className=\"badge\">{unreadCount}</text>}\n        </p>\n\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useState, Fragment, useEffect } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport ConversationSearch from '../../views/messenger/ConversationSearch'\nimport { getList } from '../../components/authProvider'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 500,\n        maxWidth: 300,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function NewConvoCreate(props) {\n\n    const classes = useStyles();\n    const [allCust, setAllCust] = useState([])\n    const [allCustHolder, setAllCustHolder] = useState([])\n    const [total, setTotal] = useState('')\n    const [searchText, setSearchText] = useState('')\n\n    useEffect(async () => {\n\n        let all_clients = await getList('clients')\n        setTotal(all_clients.total)\n        setAllCust(all_clients.data)\n        setAllCustHolder(all_clients.data)\n\n\n    }, [])\n    const searchFilterFunction = (text) => {\n\n        const newData = allCustHolder.filter(item => {\n\n\n            let name\n            try {\n                name = item.name.toUpperCase()\n            }\n            catch { name = null }\n\n\n            const itemData = `${name}`;\n            const textData = text.toUpperCase();\n\n            return itemData.indexOf(textData) > -1;\n        });\n\n        setSearchText(text)\n        setAllCust(newData)\n        setTotal(newData.length)\n\n    };\n\n    const handleClick = (event) => {\n\n        let search = props.activeConvos.filter(i => i.text === event.phone)\n        if (search.length > 0) {\n\n            props.setActiveConvo({ sid: search[0].sid, name: search[0].name })\n            props.open(!props.visible)\n        }\n        else {\n\n            props.createNewConvo(event.phone, event.name)\n            props.open(!props.visible)\n        }\n\n\n    }\n\n\n\n    function renderRow(props) {\n        const { index, style } = props;\n\n        return (\n            <ListItem onClick={async () => handleClick(allCust[index])} button style={style} key={index} >\n                <ListItemText primary={allCust[index].name} />\n            </ListItem>\n        );\n    }\n\n    renderRow.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.object.isRequired,\n    };\n\n    return (\n        <Fragment>\n            <Dialog open={props.visible}>\n\n                <DialogTitle>Create new Conversation</DialogTitle>\n\n                <DialogContent>\n                    <div className={classes.root}>\n                        <ConversationSearch searchText={searchText} searchFilterFunction={searchFilterFunction} />\n                        <FixedSizeList height={400} width={300} itemSize={46} itemCount={total} >\n                            {renderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={() => props.open(!props.visible)}\n                    >\n                        <IconCancel />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport { dataProvider, getTWToken } from '../../../components/authProvider'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport {\n  Button\n} from 'react-admin';\nimport NewConvoCreate from '../../../components/newCovoCreate'\nimport './ConversationList.css';\nimport { NotificationManager } from 'react-notifications';\nimport NotificationContext from '../../../components/Context'\n\n\nconst Conversations = require('@twilio/conversations');\n\n\n\nexport default function ConversationList(props) {\n\n\n  const { notifications, setNotifications, removeAllMessNotif } = useContext(NotificationContext)\n  const [conversations, setConversations] = useState([]);\n  const [conversationHolder, setConverrsationHolder] = useState([]);\n  const [searchText, setSearchText] = useState(null)\n  const [newConvoVisible, setNewConvoVisible] = useState(false)\n\n\n  useEffect(() => {\n    getConversations()\n  }, [])\n\n  const notify = (event, conversation) => {\n    let convoItem = conversation.filter(i => i.text === event.conversation.channelState.uniqueName.split(':')[1])[0]\n    NotificationManager.info(convoItem.name, 'New message', 3000);\n    setNotifications({ message: `Message from ${convoItem.name}`, type: 'message', convoItem:convoItem })\n\n  }\n\n\n  const refreshConvoList = useCallback(async (client, event) => {\n\n\n\n    if (client) {\n\n      let items = []\n      async function processChannels(paginator) {\n        if (paginator.hasNextPage) {\n\n          const nextPaginator = await paginator.nextPage();\n          items = items.concat(nextPaginator.items)\n          await processChannels(nextPaginator);\n        }\n      }\n      let clientconvo = await client.getSubscribedConversations()\n      items = clientconvo.items\n      await processChannels(clientconvo);\n      let newConversations = await Promise.all(items.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n      event && notify(event, newConversations)\n    }\n\n  }, [conversations])\n\n  const refreshToken = async (client) => {\n\n\n    console.log('token about to expire')\n    let token = await getTWToken()\n    client.updateToken(token);\n\n    console.log('client\\'s token updated')\n  }\n\n  async function getClient(token, callback) {\n    let items = []\n    async function processChannels(paginator) {\n\n\n      if (paginator.hasNextPage) {\n\n        const nextPaginator = await paginator.nextPage();\n        items = items.concat(nextPaginator.items)\n        await processChannels(nextPaginator);\n      }\n    }\n\n    let client = await Conversations.Client.create(token);\n\n\n    client.addListener('tokenAboutToExpire', () => refreshToken(client));\n\n    client.addListener('connectionStateChanged', async (event) => {\n      if (event === 'connected') {\n        let clientconvo = await client.getSubscribedConversations()\n        items = clientconvo.items\n        await processChannels(clientconvo);\n        props.setClient(client)\n\n        if (client._eventsCount === 2) {\n          client.addListener('messageAdded', (event) => refreshConvoList(client, event))\n          client.addListener('conversationRemoved', () => refreshConvoList(client))\n          client.addListener('conversationAdded', (event) => refreshConvoList(client, event))\n        }\n        callback(items)\n      }\n    })\n  }\n\n  const searchFilterFunction = (text) => {\n\n    const newData = conversationHolder.filter(item => {\n\n\n      let name\n      try {\n        name = item.name.toUpperCase()\n      }\n      catch { name = null }\n      let phone\n      try {\n        phone = item.phone\n      }\n      catch { phone = null }\n\n      const itemData = `${name} ${phone}`;\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n\n    setSearchText(text)\n    setConversations(newData)\n\n  };\n\n\n  const createConvo = async (number, name) => {\n\n    let twiConvo = await props.client.createConversation({ \"friendlyName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number, \"uniqueName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number })\n    await twiConvo.addNonChatParticipant(\"+61488844176\", number)\n\n    await twiConvo.add(\"pBjefCCX5JXw6QbYFu2GR7rmouw1\")\n    //refreshConvoList()// set this as event listener\n    props.setactiveConvo({ sid: twiConvo.sid, name: name })\n\n\n  }\n\n\n  const getConversations = async () => {\n\n    let token = await getTWToken()\n\n    getClient(token, async convos => {\n\n\n      let newConversations = await Promise.all(convos.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n\n    })\n\n\n\n  }\n\n  const setactiveConvo = (obj) => {\n    props.setactiveConvo(obj)\n    removeAllMessNotif(obj)\n    conversations[conversations.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    conversationHolder[conversationHolder.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    setConversations(conversations)\n    setConverrsationHolder(conversationHolder)\n  }\n\n  return (\n    <div className=\"conversation-list\">\n      <Toolbar\n        title=\"Messenger\"\n        leftItems={[\n          <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n        ]}\n        rightItems={[\n          <Button\n            onClick={() => setNewConvoVisible(!newConvoVisible)}\n          >\n            <AddBoxIcon />\n          </Button>,\n          <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n        ]}\n      />\n      <ConversationSearch\n        searchFilterFunction={searchFilterFunction}\n        searchText={searchText}\n      />\n      {\n        conversations.map(conversation =>\n          <ConversationListItem\n            key={conversation.sid}\n            data={conversation}\n            onClick={setactiveConvo}\n          />\n        )\n      }\n      <NewConvoCreate visible={newConvoVisible} open={setNewConvoVisible} activeConvos={conversations} setActiveConvo={props.setactiveConvo} createNewConvo={createConvo} />\n    </div>\n  );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageUploader from 'react-images-upload';\nimport { useState, Fragment } from 'react';\nimport {\n  Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nconst Imageuploader = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Upload Pictures</DialogTitle>\n\n                <DialogContent>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={props.onDrop}\n                        imgExtension={['.jpg', '.jpeg', '.png']}\n                        withPreview\n                    />\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        onClick={()=>{props.onPicSend();props.onCancel()}}\n                        label=\"Send\"\n                    >\n                        <SendIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default Imageuploader","import React, { useState } from 'react';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageIcon from '@material-ui/icons/Image';\nimport {\n  Button\n} from 'react-admin';\nimport './Compose.css';\nimport Imageuploader from \"../../../components/imageUploader\"\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport default function Compose(props) {\n  const [dialog, setDialog] = useState(false)\n\n\n\n  return (\n    <div className=\"compose\" >\n\n      <TextareaAutosize\n       \n        type=\"text\"\n        className=\"compose-input\"\n        placeholder=\"Type a message\"\n        value={props.value}\n        onChange={event => { props.onChange(event.target.value) }}\n        spellCheck={true}\n        minRows='2'\n      />\n      {props.value ? <Button\n        onClick={() => props.onSend()}\n      >\n        <SendIcon />\n      </Button> : <Button\n        onClick={() => setDialog(!dialog)}\n      >\n        <ImageIcon />\n      </Button>}\n     <Imageuploader open={dialog} onCancel={() => setDialog(!dialog)} onDrop={props.onDrop} onPicSend={props.onPicSend}/>\n      {\n        props.rightItems\n      }\n    </div>\n  );\n}","import React from 'react';\nimport moment from 'moment';\nimport Lightbox from 'react-lightbox-component';\nimport './Message.css';\n\nexport default function Message(props) {\n  const {\n    data,\n    isMine,\n    startsSequence,\n    endsSequence,\n    showTimestamp\n  } = props;\n  var searchPattern = new RegExp('^' + 'https://bit.ly/');\n\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n  return (\n    <div className={[\n      'message',\n      `${isMine ? 'mine' : ''}`,\n      `${startsSequence ? 'start' : ''}`,\n      `${endsSequence ? 'end' : ''}`\n    ].join(' ')}>\n      {\n        showTimestamp &&\n        <div className=\"timestamp\">\n          {friendlyTimestamp}\n        </div>\n      }\n\n      <div className=\"bubble-container\">\n        <div className=\"bubble\" title={friendlyTimestamp}>\n          {searchPattern.test(data.message) ? <Lightbox thumbnailWidth='150px'\n            thumbnailHeight='150px' images={\n              [\n                {\n                  src: data.message\n                }\n              ]\n            } /> : data.message}\n        </div>\n      </div>\n    </div>\n  );\n}","\nvar axios = require('axios');\n\n\n\n\n\n\n\n\n\nexport const SendPicToServ = async (token, file) => {\n\n\n\n    function readFile(file) {\n        return new Promise((resolve, reject) => {\n            let fr = new FileReader();\n            fr.onload = x => resolve(fr.result);\n            fr.onerrror = reject;\n            fr.readAsDataURL(file)\n        })\n    }\n\n    let base64 = await readFile(file)\n\n    var data = JSON.stringify({\n        \"token\": token,\n        \"image\": base64.replace(\"data:\", \"\").replace(/^.*;base64,/, \"\")\n    });\n\n    var config = {\n        method: 'post',\n        url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/adminPicUploader',\n        headers: {\n            'Authorization': 'Basic ODU2NzZCNUEtOEE5MS00NzYwLUE4MTctODQ2MUIyQ0I3MTI0OjZCQ0FGQUY5LUVFQ0YtNDRBNi04QTBBLTg3RjFDQUYxQTQxNg==',\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    return axios(config)\n        .then(function (response) {\n            return response.data\n        })\n        .catch(function (error) {\n            return error\n        });\n\n\n}\n\n\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport { SendPicToServ } from '../../../components/TwilioHelper'\nimport { getToken } from '../../../components/authProvider'\nimport './MessageList.css';\n\n\nconst MY_USER_ID = 'pBjefCCX5JXw6QbYFu2GR7rmouw1';\n\nexport default function MessageList(props) {\n\n  const [messages, setMessages] = useState([])\n  const [newMessage, setNewMessage] = useState(null)\n  const [convo, setConvo] = useState(null)\n  const messagesEndRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n\n\n\n  const onPicSend = async () => {\n    let token = await getToken()\n\n    for (let file of selectedFile) {\n      let url = await SendPicToServ(token, file)\n\n      await sendMessage(url)\n    }\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages]);\n  const getMessages = useCallback( async function  () {\n    var tempMessages = []\n    if (props.activeConvo) {\n\n\n       let convo = await props.client.getConversationBySid(props.activeConvo.sid)\n       convo._events.messageAdded.length === 0 && convo.addListener('messageAdded', getMessages)\n      \n       convo.channelState.lastMessage && convo.advanceLastReadMessageIndex(convo.channelState.lastMessage.index)\n       setConvo(convo)\n      let messages = await convo.getMessages()\n      tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n\n    }\n\n    setMessages(tempMessages)\n  },[props.activeConvo, props.client])\n\n  useEffect(() => {\n\n    getMessages();\n    return ()=>{\n      if (convo){\n        convo.removeListener('messageAdded', getMessages)\n        \n      }\n    }\n  }, [convo, getMessages, props.activeConvo, props.client])\n\n\n  \n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n  const sendMessage = async (img) => {\n    await convo.sendMessage(img ? img : newMessage)\n    let messages = await convo.getMessages()\n    let tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n    setNewMessage(\"\")\n    setMessages(tempMessages)\n  }\n\n\n\n\n  return (\n    <div className=\"message-list\">\n      <Toolbar\n        title={props.activeConvo ? props.activeConvo.name : 'Select a conversation'}\n        rightItems={[\n          <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n          <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n          <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n        ]}\n      />\n\n      <div className=\"message-list-container\">{renderMessages()}\n        <div ref={messagesEndRef} />\n      </div>\n\n\n      <Compose\n        value={newMessage}\n        onChange={setNewMessage}\n        onSend={sendMessage}\n        onPicSend={onPicSend}\n        onDrop={setSelectedFile}\n        rightItems={[\n\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]} />\n    </div>\n  );\n}","import React , { useState } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\n\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n  \n  const [activeConvo, setactiveConvo] = useState(null);\n  const [client, setClient]= useState(null)\n  \n  return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList setactiveConvo={setactiveConvo} setClient={setClient} client={client} />\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList activeConvo={activeConvo} client={client} />\n        </div>\n      </div>\n    );\n}","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport bookingstoday from '../views/bookingToday'\nimport todayDaycare from '../views/todayDaycare'\nimport todayGrooming from '../views/todayGrooming'\nimport grooming from '../views/grooming'\nimport daycare from '../views/daycare'\nimport messenger from '../views/messenger'\nimport bookings from '../views/allbookings'\nimport clients from '../views/clients'\nimport dogs from '../views/dogs'\n\n\n\nexport default\n\n[\n\n    <Route   exact path=\"/bookingstoday\" component={bookingstoday}   />,\n    <Route   exact path=\"/clients\" component={clients}   />,\n    <Route   exact path=\"/todaydaycare\" component={todayDaycare}   />,\n    <Route   exact path=\"/dogs\" component={dogs}   />,\n    <Route   exact path=\"/todaygrooming\" component={todayGrooming}   />,\n    <Route   exact path=\"/grooming\" component={grooming}  />,\n    <Route   exact path=\"/daycare\" component={daycare}  />,\n    <Route   exact path=\"/bookings\" component={bookings}  />,\n    <Route   exact path=\"/messenger\" component={messenger}  />,\n\n\n\n];","import React from 'react';\nimport Messenger from './messenger/Messenger';\nimport Card from '@material-ui/core/Card';\n\nimport { Title } from 'react-admin';\n\nexport default function messenger() {\n\n\n    return (\n        <Card>\n            <Title title=\"Messenger\" />\n\n\n\n                <Messenger />\n\n        </Card>\n\n\n\n    );\n}","/* eslint-disable import/no-anonymous-default-export */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\n\nimport {\n    adminReducer,\n    adminSaga,\n    USER_LOGOUT,\n} from 'react-admin';\n\nexport default ({\n    authProvider,\n    dataProvider,\n    history,\n}) => {\n    const reducer = combineReducers({\n        admin: adminReducer,\n        router: connectRouter(history),\n     \n\n        // add your own reducers here\n    });\n    const resettableAppReducer = (state, action) =>\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\n\n    const saga = function* rootSaga() {\n        yield all(\n            [\n                adminSaga(dataProvider, authProvider),\n                // add your own sagas here\n            ].map(fork)\n        );\n    };\n    const sagaMiddleware = createSagaMiddleware();\n\n    const composeEnhancers =\n        (process.env.NODE_ENV === 'development' &&\n            typeof window !== 'undefined' &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                trace: true,\n                traceLimit: 25,\n            })) ||\n        compose;\n  \n    const store = createStore(\n        resettableAppReducer,\n        { /* set your initial state here */ },\n        composeEnhancers(\n            applyMiddleware(\n                sagaMiddleware,\n                routerMiddleware(history),\n                // add your own middlewares here\n            ),\n            // add your own enhancers here\n        ),        \n    );\n    sagaMiddleware.run(saga);\n    return store;\n};","import * as React from \"react\";\nimport {\n    List,\n\n    Datagrid,\n    TextField,\n\n    EmailField,\n\n    NumberField\n  \n} from 'react-admin';\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n        </Datagrid>\n    </List>\n)","import * as React from \"react\";\nimport { Admin, Resource, ListGuesser, Layout, EditGuesser } from 'react-admin';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport {  UserCreate, UserEdit } from './views/clients';\nimport { DogList, DogEdit, DogCreate } from './views/dogs';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Dashboard from './views/Dashboard';\nimport { authProvider, dataProvider, getFCMToken, onMessageReceved } from './components/authProvider';\nimport Utils from '@date-io/moment'\nimport GroupIcon from '@material-ui/icons/Group';\nimport MyLayout from './components/MyLayout';\nimport { BookingList } from './views/allbookings'\nimport muCustomRoutes from './components/muCustomRoutes'\nimport createAdminStore from './components/createAdminStore';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport { PaymentList } from './views/payments'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { ContextProvider } from './components/Context'\nimport 'react-lightbox-component/build/css/index.css';\n\n\nconst history = createHashHistory();\n\n\nconst App = () => {\n\n\n  const [isTokenFound, setTokenFound] = React.useState(false);\n  getFCMToken(setTokenFound);\n\n  onMessageReceved(payload => {\n\n    NotificationManager.success(payload.notification.body, payload.notification.title);\n  })\n\n\n  return (\n\n    <Provider\n      store={createAdminStore({\n        authProvider,\n        dataProvider,\n        history,\n      })}\n    >\n      <ContextProvider>\n        <MuiPickersUtilsProvider utils={Utils}>\n          <NotificationContainer />\n          <Admin disableTelemetry layout={MyLayout} history={history} customRoutes={muCustomRoutes} dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider}>\n\n            <Resource name=\"clients\"  icon={PetsIcon} create={UserCreate} to='/clients' edit={UserEdit} options={{ \"label\": \"Clients\" }} />\n            <Resource name=\"dogs\" create={DogCreate} edit={DogEdit} />\n            <Resource name=\"bookings\"  edit={EditGuesser} />\n            <Resource name=\"services\" list={ListGuesser} />\n            <Resource name=\"payments\" list={PaymentList} />\n\n          </Admin>\n        </MuiPickersUtilsProvider>\n      </ContextProvider>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}