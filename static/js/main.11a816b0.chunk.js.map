{"version":3,"sources":["fields/MyUrlField.js","views/clients.js","components/authProvider.js","components/dogsBulk.js","views/dogs.js","views/Dashboard.js","notIcon.png","components/MyNotifis.js","components/MyAppbar.js","components/myMenu.js","components/MyLayout.js","fields/myChipField.js","fields/myRefField.js","components/BookingBulk.js","views/allbookings.js","views/bookingToday.js","views/todayDaycare.js","views/todayGrooming.js","views/grooming.js","views/messenger/ConversationSearch/index.js","views/messenger/ConversationListItem/index.js","views/messenger/Toolbar/index.js","views/messenger/ToolbarButton/index.js","views/messenger/ConversationList/index.js","views/messenger/Compose/index.js","views/messenger/Message/index.js","views/messenger/MessageList/index.js","views/messenger/Messenger/index.js","components/muCustomRoutes.js","views/messenger.js","components/createAdminStore.js","views/payments.js","App.js","index.js"],"names":["makeStyles","link","textDecoration","icon","width","paddingLeft","PostPagination","props","Pagination","rowsPerPageOptions","UserList","isSmall","useMediaQuery","theme","breakpoints","down","List","perPage","pagination","SimpleList","primaryText","record","name","secondaryText","email","tertiaryText","phone","TextField","source","EmailField","EditButton","PostTitle","UserCreate","Create","SimpleForm","TextInput","label","UserEdit","Edit","title","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","messaging","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","getToken","a","checkAuth","token","_lat","getList","haha","page","list","getTWToken","axios","require","JSON","data","stringify","method","url","headers","then","response","catch","error","console","log","qs","DogBulk","selectedIds","useStyles","root","margin","spacing","useState","open","setOpen","notify","useNotify","unselectAll","useUnselectAll","useGetIdentity","identity","loading","React","topic","setTopic","message","setMessage","setLoading","handleDialogClose","handleConfirm","res","err","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","Input","fullWidth","placeholder","defaultValue","onChange","event","target","value","multiline","DialogActions","BulkDeleteButton","MaleFemaleFilter","FilterList","FilterListItem","sex","desexed","Card","withStyles","up","order","marginRight","display","MuiCard","FilterSidebar","CardContent","FilterLiveSearch","DogList","aside","bulkActionButtons","dog_name","Client","ReferenceField","reference","SelectField","choices","id","BooleanField","DateField","DogEdit","TabbedForm","FormTab","ReferenceInput","filterToQuery","searchText","AutocompleteInput","optionText","optionValue","SelectInput","BooleanInput","options","checkedIcon","DateInput","format","DogCreate","CardHeader","Notifis","detailPage","style","color","notIcon","cardOption","viewAllbtn","text","linkTo","markAsRead","headerBackgroundColor","header","option","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","className","maxWidth","backgroundColor","palette","background","paper","nested","NestedList","onMenuClick","logout","open1","setOpen1","open2","setOpen2","useSelector","getResources","component","DashboardMenuItem","sidebarIsOpen","MenuItemLink","to","leftIcon","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MyLayout","Layout","menu","appBar","TextArrayField","array","length","map","item","Chip","defaultProps","addLabel","MyClientRefField","filterBy","linkToUser","linkToRecord","MyServiceRef","linkToService","service","category","MydogRef","linkToDogs","dogName","MytimeRange","Date","start","toLocaleString","split","trim","end","BookingBulk","amount","setAmount","handleDialogClose1","handleConfirm1","BookingFilter","Filter","alwaysOn","SearchInput","ReferenceArrayInput","sort","field","word","CategoryFilter","StatusFilter","status","BookingList","filters","weekday","year","month","day","SingleFieldList","ChipField","dateFormat","selectors","Data","Selectors","AutoCompleteFilter","Filters","NumericFilter","columns","MultiSelectFilter","SingleSelectFilter","key","resizable","formatter","params","row","href","filterable","filterRenderer","date","bookingstoday","onRowsSelected","rows","setState","selectedIndexes","state","concat","r","rowIdx","onRowsDeselected","rowIndexes","filter","i","indexOf","handleFilterChange","newFilters","filterTerm","column","getValidFilterValues","columnId","getRows","today","filteredRows","this","height","rowGetter","rowsCount","onColumnResize","idx","rowSelection","showCheckbox","enableShiftSelect","selectBy","indexes","toolbar","enableFilter","onAddFilter","onClearFilters","columnKey","Component","todayDaycare","todayGrooming","window","moment","defaultWidth","render","filterEditor","DateFilter","filterEditorProps","index","cellProps","gridStyle","minHeight","defaultFilterValue","operator","type","grooming","selected","Object","keys","basePath","values","idProperty","dataSource","onSelectionChange","select","enableFiltering","multiSelect","checkboxColumn","ConversationSearch","searchFilterFunction","ConversationListItem","useEffect","shave","photo","sid","Toolbar","leftItems","rightItems","ToolbarButton","Conversations","ConversationList","conversations","setConversations","conversationHolder","setConverrsationHolder","setSearchText","getClient","callback","processChannels","paginator","hasNextPage","nextPage","nextPaginator","items","create","client","addListener","setClient","getSubscribedConversations","clientconvo","getConversations","convos","Promise","all","result","channelState","friendlyName","dateUpdated","lastMessage","dateCreated","newConversations","b","newData","toUpperCase","itemData","textData","conversation","setactiveConvo","Compose","onSend","Message","isMine","startsSequence","endsSequence","showTimestamp","friendlyTimestamp","timestamp","join","MessageList","messages","setMessages","newMessage","setNewMessage","convo","setConvo","getMessages","activeConvo","tempMessages","getConversationBySid","author","body","sendMessage","messageCount","previous","current","next","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","renderMessages","Messenger","exact","path","Title","history","reducer","combineReducers","admin","adminReducer","router","connectRouter","saga","rootSaga","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","action","USER_LOGOUT","undefined","applyMiddleware","routerMiddleware","run","PaymentList","Datagrid","rowClick","NumberField","createHashHistory","App","setTokenFound","vapidKey","currentToken","NotificationManager","alert","getFCMToken","payload","success","notification","onMessage","payloaf","createAdminStore","utils","Utils","Admin","disableTelemetry","layout","customRoutes","muCustomRoutes","dashboard","Dashboard","Resource","PetsIcon","edit","ListGuesser","EditGuesser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11a816b0.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;\n","import * as React from \"react\";\nimport { List, Datagrid,Edit ,Pagination,     EditButton ,SimpleList, TextField, EmailField, TextInput, Create, SimpleForm} from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\n\nexport const UserList = props =>{\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n   return (\n    <List  perPage={50} {...props} pagination={<PostPagination />} >{isSmall ? (\n        <SimpleList\n            primaryText={record => record.name}\n            secondaryText={record => record.email}\n            tertiaryText={record => record.phone}\n        />\n    ) : (\n    \n      \n    <CustomizableDatagrid>\n            <TextField source=\"name\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"instagram\" />\n         <EditButton/>\n         </CustomizableDatagrid>\n  \n       )}\n    </List>\n);}\n\nconst PostTitle = ({ record }) => {\n    return <span>Client {record ? `\"${record.name}\"` : ''}</span>;\n }\n\nexport const UserCreate = props => (\n    <Create {...props}>\n         <SimpleForm>\n             <TextInput source=\"name\" label='Name' />\n             <TextInput source=\"phone\" label=\"Phone\" />\n             <TextInput source=\"email\" label=\"Email\" />\n             <TextInput source=\"instagram\" label=\"Instagram\" />\n         </SimpleForm>\n     </Create>\n  );\n\n  export const UserEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <SimpleForm>\n        <TextInput source=\"name\" label='Name' />\n             <TextInput source=\"phone\" label=\"Phone\" />\n             <TextInput source=\"email\" label=\"Email\" />\n             <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Edit>\n);","import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n\n} from 'react-admin-firebase';\n\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { NotificationManager} from 'react-notifications';\n\nconst config = {\n  apiKey: \"AIzaSyAUqOhdFbfRiCRqSzxKpYeTppBGsHfAAug\",\n  authDomain: \"admin-a4a00.firebaseapp.com\",\n  databaseURL: \"https://admin-a4a00-default-rtdb.firebaseio.com\",\n  projectId: \"admin-a4a00\",\n  storageBucket: \"admin-a4a00.appspot.com\",\n  messagingSenderId: \"328849622350\",\n  appId: \"1:328849622350:web:cf2cd21a20f108e7aeca1f\",\n  measurementId: \"G-YKBC2Q28P1\"\n\n\n};\nfirebase.initializeApp(config);\n\n\n const messaging = firebase.messaging();\n\n\n export const getFCMToken = (setTokenFound) => {\n\n  return messaging.getToken({vapidKey: 'BGXh163BEaceHzjq8oIfgZfCnHEze0njY12K3FFlv8N0lLtNYTsKWpE0L7darB0Yiqzt2P_6VCcuHnSvo6beecs'}).then((currentToken) => {\n  \n    if (currentToken) {\n\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true);\n      // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false);\n     \n      // shows on the UI that permission is required \n    }\n  }).catch((err) => {\n    console.log('An error occurred while retrieving token. ', err);\n    NotificationManager.error('Notifications not enabled!', 'Allow notifications and refresh page', 500000, () => {\n      alert('callback');\n    });\n    // catch error while creating client token\n  });\n}\n\nexport const onMessageReceved = (callback) => {\n\n  messaging.onMessage(payloaf=>{\n   callback(payloaf)\n   })\n  }\n\nconst options = {};\n\nexport const dataProvider = FirebaseDataProvider(config, options);\n\nexport const authProvider = FirebaseAuthProvider(config);\n\nexport const getToken = async () => {\n\n  let token = await authProvider.checkAuth()\n  return token._lat\n\n}\n\nexport const getList = async (haha) => {\n  let list = await dataProvider.getList(haha, { pagination: { page: 1, perPage: 1000 }, })\n  return list\n}\n\nexport const getTWToken = async () => {\n  var axios = require('axios');\nvar data = JSON.stringify({\n  \"token\": await getToken()\n});\n\nvar config = {\n  method: 'post',\n  url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/getToken',\n  headers: { \n    'Authorization': 'Basic MkMzRDBFMkMtODQ3Qi00OEI4LUI1NTItOENCQTlDQkEzREQ4OjgwOEFGMDlBLTBFODgtNDU3Mi04QzJGLUUwOEIwOEE4N0RFMQ==', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\nreturn axios(config)\n.then(function (response) {\n  \n return response.data;\n})\n.catch(function (error) {\n  \n  console.log(error);\n});\n\n}\n\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport {\n\n\n\n    useNotify,\n    useUnselectAll,\n    BulkDeleteButton,\n    useGetIdentity,\n    Button,\n    Loading\n\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Input from '@material-ui/core/Input';\nimport SendIcon from '@material-ui/icons/Send';\nimport {getToken} from './authProvider'\n\nvar axios = require('axios');\nvar qs = require('qs');\n\n\n\nconst DogBulk =  ({ selectedIds }) => {\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n          },\n        },\n      }));    \n\n\n    const [open, setOpen] = useState(false);\n\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const { identity, loading: identityLoading } = useGetIdentity();\n    const classes = useStyles();\n    const [topic, setTopic] = React.useState();\n    const [message, setMessage] = React.useState();\n    const [loading, setLoading] = useState(false);\n   \n    const handleClick = () => setOpen(true);\n    const handleDialogClose =  () => { setOpen(false);}\n\n    const handleConfirm = async () => {\n      setLoading(true)\n      let token = await getToken()\n    \n\n        var data = qs.stringify([token,selectedIds,'dogs', topic, message]);\n\n        var config = {\n          method: 'post',\n          url: 'https://7a314e3ed3bb.ngrok.io',\n          headers: { \n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          data : data\n        };\n        \n        axios(config)\n        .then(function (res) {\n          setLoading(false)\n          setOpen(false);\n          notify('Messages sent');\n          unselectAll('dogs');\n          setTopic(null)\n          setMessage(null)\n\n        })\n        .catch(function (err) {\n          setLoading(false)\n          notify('Error: Could not reach server', 'warning')\n\n        });\n\n\n    };\n\n//        \n\n\n\n\n\n\n    return (\n        <Fragment>\n            <Button label=\"Text clients\" onClick={handleClick}  />\n\n            <Dialog\n\n                  \n                    open={open}\n                    onClose={handleDialogClose}\n                >\n                    \n                    <DialogTitle>Message Owners</DialogTitle>\n                   \n                      <DialogContent> \n\n                        <Input name='Topic' fullWidth placeholder=\"Topic\" defaultValue={topic && topic } onChange={event =>{setTopic(event.target.value)}}  />\n                        <Input name='Message' multiline fullWidth placeholder='Message' defaultValue={message && message } onChange={event =>{setMessage(event.target.value)}}  />\n\n                      </DialogContent>\n                      {loading===false &&\n                      <DialogActions>\n                 \n   \n                 \n                        <Button\n                            label=\"Cancel\"\n                            onClick={handleDialogClose}\n                \n                        >\n                            <IconCancel />\n                        </Button>\n                  <Button\n                            label=\"Send\"\n                            onClick={handleConfirm}\n                            \n                        >\n                            <SendIcon />\n                        </Button>\n                    </DialogActions>}\n                    \n                    </Dialog>\n        <BulkDeleteButton  />\n        </Fragment>\n        \n    );\n}\n\n \n\nexport default DogBulk;","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField,TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField\n  \n} from 'react-admin';\nimport { useMediaQuery,  Card as MuiCard, CardContent, withStyles  } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOnOutlined';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport DogBulk from '../components/dogsBulk'\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\n\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\nconst PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Owner\" source=\"owner\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\n\n\nconst MaleFemaleFilter = () => (\n    <FilterList label=\"Sex\" icon={<AccessTimeIcon />}>\n\n    \n        <FilterListItem\n            label=\"Male\"\n            value={{\n                sex: \"M\"\n            }}\n        />\n         <FilterListItem\n            label=\"Female\"\n            value={{\n               sex: 'F'\n  \n            }}\n        />\n        <FilterListItem\n            label=\"Desexed\"\n            value={{\n               desexed: true\n  \n            }}\n        />\n    </FilterList>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n        <FilterLiveSearch source=\"dog_name\" />\n\n            <MaleFemaleFilter />\n        </CardContent>\n    </Card>\n);\n\nexport const DogList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} perPage={50} pagination={<PostPagination />}  bulkActionButtons={<DogBulk />}  {...props}>\n         \n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.dog_name}\n                    secondaryText={record =>record.Client}\n                />\n            ) : (\n                \n                <CustomizableDatagrid>\n                      <TextField source=\"dog_name\" label='Dog Name' />\n                    <ReferenceField label=\"Client\" source=\"owner\" reference=\"clients\"  >\n                        <TextField source=\"name\"  />\n                    </ReferenceField>\n                    <ReferenceField label=\"Breed\" source='breed' reference=\"dog_breeds\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <SelectField source=\"sex\" choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} />\n                    <BooleanField source=\"desexed\" label='Desexed' />\n                    <EmailField source=\"vet_email\" label='Vet Email' />\n                    <TextField source=\"vet\" label='Vet' />\n                    <DateField source=\"kc_due\" label='KC Due' />\n                    <DateField source=\"c3_due\" label='C3 Due' />\n                    <DateField source=\"c5_due\" label='C5 Due' />\n                    <EditButton />\n                    </CustomizableDatagrid>\n \n            )}\n    \n        </List>\n    );\n}\nconst PostTitle = ({ record }) => {\n       return <span>Dog {record ? `\"${record.dog_name}\"` : ''}</span>;\n    }\n\nexport const DogEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n        <TextInput source=\"dog_name\" label='Dog Name' />\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"breed\" reference=\"dog_breeds\"><AutocompleteInput optionValue=\"id\" optionText=\"name\" /></ReferenceInput>\n        \n          <SelectInput source='sex'  choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/><BooleanInput\nsource=\"desexed\"\noptions={{\n    checkedIcon: <FavoriteIcon />,\n}}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n    </Edit>\n);\n\n\n\nexport const DogCreate = props => (\n      <Create {...props}>\n                 <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n           <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n            \n               <TextInput source=\"dog_name\" label='Dog Name' />\n               <TextInput  source=\"breed\" label='Breed' />\n               <SelectInput source='sex' choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/>\n<BooleanInput\n    source=\"desexed\"\n    options={{\n        checkedIcon: <FavoriteIcon />,\n    }}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n       </Create>\n    \n    );\n","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","export default __webpack_public_path__ + \"static/media/notIcon.3ae80bc9.png\";","import Notifications from \"react-notifications-menu\";\nimport notIcon from '../notIcon.png'\n\nconst Notifis = (props)=>{\n\n\n    return (\n        <Notifications\n        data={[\n          {\n\n            message: 'Kameshwaran S had shared a feedback with you.',\n            detailPage: '/',\n          },\n          {\n\n            message: (\n              <p>\n                Kameshwaran S had shared a{' '}\n                <span style={{ color: '#7ac2fa' }}>feedback</span> with you.\n              </p>\n            ),\n            detailPage: '/',\n          },\n        ]}\n        icon={notIcon}\n        cardOption={data => console.log(data)}\n        viewAllbtn={{ text: 'see all', linkTo: '/seeAll' }}\n        markAsRead={data => console.log(data)}\n        headerBackgroundColor='red'\n        header={\n          {\n            title: 'Notifications',\n            option: { text: 'View All', onClick: () => { } }\n          }\n        }\n      />\n    )\n}\n\nexport default Notifis","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notifis from './MyNotifis'\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\n\nconst MyAppBar = props => {\n  const classes = useStyles()\n\n\n  return (\n    <AppBar {...props}>\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n\n      <span className={classes.spacer} />\n      <Notifis/>\n    </AppBar>\n  )\n};\n\nexport default MyAppBar;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DashboardMenuItem, MenuItemLink, getResources } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MessageIcon from '@material-ui/icons/Message';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\n\n\n\nfunction NestedList({ onMenuClick, logout }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const resources = useSelector(getResources);\n\n  const linkBookingrange = {\n    pathname: \"/bookings\",\n    hash: \"bookingsrange\"\n  }\n\n\n  return (\n\n    <List\n      component=\"nav\"\n      className={classes.root}\n    >\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <MenuItemLink\n        key='clients'\n        to='/clients'\n        primaryText='Clients'\n        leftIcon={\n\n          <PeopleIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <PetsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dogs\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dogs'\n          to='/dogs'\n          primaryText='All Dogs'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dog_breeds'\n          to='/dog_breeds'\n          primaryText='Dog breeds'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n      </Collapse>\n      <ListItem button onClick={handleClick1}>\n        <ListItemIcon>\n          <CalendarTodayIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Bookings\" />\n        {open1 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookings'\n          to='/bookings'\n          primaryText='All Bookings'\n          leftIcon={\n\n            <EventNoteIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookingstoday'\n          to='/bookingstoday'\n\n          primaryText='Bookings Today'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaydaycare'\n          to='/todaydaycare'\n\n          primaryText='Today Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaygrooming'\n          to='/todaygrooming'\n\n          primaryText='Today Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='grooming'\n          to='/grooming'\n\n          primaryText='Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='services'\n          to='/services'\n          primaryText='Services'\n          leftIcon={\n\n            <AssignmentIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick2}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Payments\" />\n        {open2 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='payments'\n          to='/payments'\n          primaryText='All Payments'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n\n      </Collapse>\n      <MenuItemLink\n        key='messenger'\n        to='/messenger'\n        primaryText='Messenger'\n        leftIcon={\n\n          <MessageIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n    </List>\n  );\n}\n\nexport { NestedList }\n\n  ;","import { Layout } from 'react-admin';\nimport MyAppBar from './MyAppbar'\nimport  {NestedList} from './myMenu';\n\n\nconst MyLayout = props => <Layout\n    {...props}\n\n    menu={NestedList}\n    appBar={MyAppBar}\n/>;\n\nexport default MyLayout;","\nimport Chip from '@material-ui/core/Chip'\n\n\n\n\nconst TextArrayField = ({ record, source }) => {\n\n  const array = record[source]\n  if (typeof array === 'undefined' || array === null || array.length === 0) {\n    return <div/>\n  } else {\n    return (\n      <>\n        {array.map(item => \n       \n        <Chip color='secondary' label={item} key={item}/>\n)}\n      </>\n    )    \n  }\n}\nTextArrayField.defaultProps = { addLabel: true }\n\nexport default TextArrayField","\nimport { linkToRecord } from 'react-admin';\nimport { Link } from 'react-router-dom';\n\n\nexport const MyClientRefField = ({ record, source }) => {\n\n  MyClientRefField.defaultProps = {filterBy : record.name}\n\n    if (record[source]) {\n        const linkToUser = linkToRecord('/clients', record[source], ); //'show'\n      \n    \n\n        return ( <Link to={linkToUser}>{record.name}</Link>\n\n\n       )\n    } else {\n      return (\n     \n        <span >{record.name}</span>\n     \n      )    \n    }\n\n    \n}\nexport const MyServiceRef = ({ record, source }) => {\n\n\n\n    if (record[source]) {\n        const linkToService = linkToRecord('/services', record[source]);\n      \n    \n\n        return ( <Link to={linkToService}>{record.service + ' ' + record.category}</Link>\n\n\n       )\n    } else {\n      return (\n     \n        <span >{record.service + ' ' + record.category}</span>\n     \n      )    \n    }\n  \n    \n}\n\n\nexport const MydogRef = ({ record, source }) => {\n\n  \n\n    if (record[source]) {\n        const linkToDogs = linkToRecord('/dogs', record[source]);\n      \n    \n\n        return ( <Link to={linkToDogs}>{record.dogName}</Link>\n\n\n       )\n    } else if (!record[source]) {\n      return (\n     \n        <span >{record.dogName}</span>\n     \n      )    \n    }\n    \n}\n\nexport const MytimeRange = ({ record }) => {\n\n\n\n    return (\n   \n      <span >{new Date (record.start).toLocaleString().split(',')[1].trim() + ' - ' + new Date (record.end).toLocaleString().split(',')[1].trim()}</span>\n   \n    )    \n  \n  \n}\n\n\n\n    ","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport {\n\n\n\n  useNotify,\n  useUnselectAll,\n  BulkDeleteButton,\n  useGetIdentity,\n  Button,\n  Loading\n\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Input from '@material-ui/core/Input';\nimport SendIcon from '@material-ui/icons/Send';\nimport { getToken } from './authProvider'\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nvar axios = require('axios');\nvar qs = require('qs');\n\n\n\n\nconst BookingBulk = ({ selectedIds }) => {\n\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\n\n  const [open, setOpen] = useState(false);\n  const [open1, setOpen1] = useState(false);\n\n  const notify = useNotify();\n  const unselectAll = useUnselectAll();\n  const { identity, loading: identityLoading } = useGetIdentity();\n  const classes = useStyles();\n  const [topic, setTopic] = React.useState();\n  const [message, setMessage] = React.useState();\n  const [amount, setAmount] = React.useState();\n  const [loading, setLoading] = useState(false);\n\n  const handleClick = () => setOpen(true);\n  const handleChargeClick = () => setOpen1(true);\n  const handleDialogClose = () => { setOpen(false); }\n  const handleDialogClose1 = () => { setOpen1(false); }\n  const handleConfirm = async () => {\n    setLoading(true)\n    let token = await getToken()\n\n\n    var data = qs.stringify([token, selectedIds, 'bookings', topic, message]);\n\n    var config = {\n      method: 'post',\n      url: 'https://7a314e3ed3bb.ngrok.io',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (res) {\n        setLoading(false)\n        setOpen(false);\n        notify('Messages sent');\n        unselectAll('bookings');\n        setTopic(null)\n        setMessage(null)\n\n      })\n      .catch(function (err) {\n        setLoading(false)\n        notify('Error: Could not reach server', 'warning')\n\n      });\n\n\n  };\n  const handleConfirm1 = async () => {\n    setLoading(true)\n    let token = await getToken()\n\n\n    var data = qs.stringify([token, selectedIds, amount]);\n\n    var config = {\n      method: 'post',\n      url: 'https://a9548241041d.ngrok.io/talk',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (res) {\n        setLoading(false)\n        setOpen(false);\n        notify('Messages sent');\n        unselectAll('bookings');\n\n        setAmount(null)\n\n      })\n      .catch(function (err) {\n        setLoading(false)\n        notify('Error: Could not reach server', 'warning')\n\n      });\n\n\n  };\n\n\n  //        \n\n\n\n\n\n\n  return (\n\n    <Fragment>\n      {selectedIds.length == 1 && <Button label=\"Charge Card\" onClick={handleChargeClick} />}\n      <Button label=\"Text clients\" onClick={handleClick} />\n\n      <Dialog\n\n\n        open={open1}\n        onClose={handleDialogClose1}\n      >\n\n        <DialogTitle>Charge Card on File</DialogTitle>\n\n        <DialogContent>\n\n          <Input name='Amount' fullWidth placeholder=\"Amount\" defaultValue={amount && amount} onChange={event => { setAmount(event.target.value) }} />\n\n\n        </DialogContent>\n        <DialogActions>\n\n\n\n          <Button\n            label=\"Cancel\"\n            onClick={handleDialogClose1}\n\n          >\n            <IconCancel />\n          </Button>\n          <Button\n            label=\"Charge\"\n            onClick={handleConfirm1}\n\n          >\n            <MonetizationOnIcon />\n          </Button>\n        </DialogActions>\n\n      </Dialog>\n\n      <Dialog\n\n\n        open={open}\n        onClose={handleDialogClose}\n      >\n\n        <DialogTitle>Message Owners</DialogTitle>\n\n        <DialogContent>\n\n          <Input name='Topic' fullWidth placeholder=\"Topic\" defaultValue={topic && topic} onChange={event => { setTopic(event.target.value) }} />\n          <Input name='Message' multiline fullWidth placeholder='Message' defaultValue={message && message} onChange={event => { setMessage(event.target.value) }} />\n\n        </DialogContent>\n        {loading === false &&\n          <DialogActions>\n\n\n\n            <Button\n              label=\"Cancel\"\n              onClick={handleDialogClose}\n\n            >\n              <IconCancel />\n            </Button>\n            <Button\n              label=\"Send\"\n              onClick={handleConfirm}\n\n            >\n              <SendIcon />\n            </Button>\n          </DialogActions>}\n\n      </Dialog>\n      <BulkDeleteButton />\n    </Fragment>\n\n  );\n}\n\n\n\nexport default BookingBulk;","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField, TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField, ArrayField,\n    ChipField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ReferenceManyField,\n    SearchInput,\n    ReferenceArrayInput\n\n} from 'react-admin';\nimport { useMediaQuery, Card as MuiCard, CardContent, withStyles } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\nimport TextArrayField from '../fields/myChipField'\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport { MyClientRefField, MyServiceRef, MydogRef } from '../fields/myRefField'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport BookingBulk from '../components/BookingBulk'\n\nimport { MytimeRange } from '../fields/myRefField'\n\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\nconst BookingFilter = (props) => (\n\n    <Filter {...props}>\n        <DateInput label=\"Booking Date\" source=\"start\" alwaysOn />\n        <SearchInput source=\"name\" placeholder='Search client' />\n        <SearchInput source=\"dogName\" placeholder='Search dog' />\n        <ReferenceArrayInput\n            label=\"Service\"\n            source=\"service_ref\"\n            reference=\"services\"\n            sort={{ field: 'name', order: 'ASC' }}\n            filterToQuery={searchText => ({ service: searchText })}\n\n\n        >\n            <AutocompleteInput optionText={word => { return word.service + ' ' + word.category }} />\n        </ReferenceArrayInput>\n        <SearchInput source=\"code\" placeholder='Search code' />\n\n    </Filter>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst CategoryFilter = () => (\n    <FilterList\n        label=\"Category\"\n        icon={<ControlPointIcon />}\n    >\n        <FilterListItem\n            label=\"Daycare\"\n            value={{\n                category: 'daycare'\n            }}\n        />\n        <FilterListItem\n            label=\"Grooming\"\n            value={{\n                category: 'stylist'\n            }}\n        />\n        <FilterListItem\n            label=\"Coiffuriste\"\n            value={{\n                category: 'coiffuriste'\n            }}\n        />\n\n\n    </FilterList>\n);\n\n\nconst StatusFilter = () => (\n    <FilterList\n        label=\"Status\"\n        icon={<ControlPointIcon />}\n    >\n        <FilterListItem\n            label=\"Confirmed\"\n            value={{\n                status: 'confirmed'\n            }}\n        />\n        <FilterListItem\n            label=\"Modified\"\n            value={{\n                status: 'modified'\n            }}\n        />\n        <FilterListItem\n            label=\"Cancelled\"\n            value={{\n                status: 'cancelled'\n            }}\n        />\n    </FilterList>\n);\n\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n            <CategoryFilter />\n            <StatusFilter />\n        </CardContent>\n    </Card>\n);\n\n\n\nexport const BookingList = props => {\n\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} bulkActionButtons={<BookingBulk />} perPage={50} {...props} pagination={<PostPagination />} filters={<BookingFilter />} >{isSmall ? (\n            <SimpleList\n                primaryText={record => record.name}\n                secondaryText={record => record.email}\n                tertiaryText={record => record.phone}\n            />\n        ) : (\n\n\n            <CustomizableDatagrid>\n                <MyClientRefField label=\"Client\" source=\"client_ref\" reference=\"clients\" />\n\n                <MydogRef label=\"Dog Name\" source='dog_ref' reference='dogs' />\n\n                <MyServiceRef label=\"Service\" source=\"service_ref\" reference=\"services\" />\n                <DateField label='Booking Date' source=\"start\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n                <MytimeRange label='Time' />\n                <TextField source=\"status\" />\n\n                <TextArrayField source=\"addOns\">\n                    <SingleFieldList>\n                        <ChipField source=\"id\" />\n                    </SingleFieldList>\n                </TextArrayField>\n\n                <TextField source=\"comments\" />\n\n\n\n                <DateField source=\"updated\" />\n                <TextField source=\"code\" />\n                <EditButton />\n            </CustomizableDatagrid>\n\n        )}\n        </List>\n\n    );\n}\n","import React from \"react\";\nimport { ReactDOM, Link } from \"react-dom\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"../styles.css\";\nimport { dataProvider } from '../components/authProvider'\nimport Chip from '@material-ui/core/Chip'\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n\n\n  Button\n\n\n} from 'react-admin';\n\nvar dateFormat = require(\"dateformat\");\n\nconst selectors = Data.Selectors;\nconst {\n  NumericFilter,\n  AutoCompleteFilter,\n  MultiSelectFilter,\n  SingleSelectFilter\n} = Filters;\n\nconst addonsChip = (params) => {\n  if (params.value.length !== 0) {\n\n    return (\n      <>\n        {params.value.map(item =>\n\n          <Chip color='secondary' label={item} key={item} />\n        )}\n      </>\n    )\n\n  }\n  else\n    return (<span></span>)\n}\n\nconst getDateRange = (params) => {\n\n  return (<span >{dateFormat(params.row['start'], 'h:mm TT') || ''}-{dateFormat(params.value, 'h:mm TT') || ''\n  }</span>)\n}\n\nconst BookingDaateFormatter = (params) => {\n\n\n  let date = dateFormat(params.value, \"dddd dd/mm/yyyy\");\n  return (<span >{date}</span>)\n\n}\n\nconst ServiceFormatter = (params) => {\n\n  return (<span >{params.value || ''} {params.row.category || ''}</span>)\n};\n\nconst LinktoClients = (params) => {\n\n  if (params.row['client_ref']) {\n\n\n    return (<a href={'#clients/' + params.row['client_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\nconst LinktoDogs = (params) => {\n\n  if (params.row['dog_ref']) {\n\n\n    return (<a href={'#dogs/' + params.row['dog_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\n\n\n\nconst columns = [\n  { key: \"name\", name: \"Name\", resizable: true, formatter: LinktoClients, filterable: true, },\n  { key: \"dogName\", name: \"Dog\", resizable: true, formatter: LinktoDogs, filterable: true, },\n  { key: \"service\", name: \"Service\", resizable: true, formatter: ServiceFormatter, filterable: true, filterRenderer: AutoCompleteFilter },\n  { key: \"start\", name: \"Booking Date\", resizable: true, formatter: BookingDaateFormatter, filterable: true, },\n  { key: \"end\", name: \"Time\", resizable: true, formatter: getDateRange, filterable: true, },\n  { key: \"addOns\", name: \"AddOns\", resizable: true, formatter: addonsChip, filterable: true, },\n  { key: \"code\", name: \"Booking Code\", resizable: true, filterable: true, }\n];\n\n\nexport default class bookingstoday extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selectedIndexes: [],\n      filters: {}\n    }\n  }\n\n\n\n\n  onRowsSelected = rows => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(\n        rows.map(r => r.rowIdx)\n      )\n    });\n  };\n\n  onRowsDeselected = rows => {\n    let rowIndexes = rows.map(r => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter(\n        i => rowIndexes.indexOf(i) === -1\n      )\n    });\n  };\n  componentDidMount() {\n    let today = new Date()\n    dataProvider.getList('bookings', {filter: {'start': dateFormat(today, \"yyyy-mm-dd\")}, pagination: { page: 1, perPage: 100000 }} )\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n\n\n  handleFilterChange = (filter, filters) => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\n  getValidFilterValues = (rows, columnId) => {\n    return rows\n      .map(r => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n\n  getRows = (rows, filters) => {\n    return selectors.getRows({ rows, filters });\n  }\n\n\n  render() {\n\n    const filteredRows = this.getRows(this.state.rows, this.state.filters);\n    return (\n\n      <div style={{ height: '94%' }}>\n        <ReactDataGrid\n          columns={columns}\n          rowGetter={i => filteredRows[i]}\n          rowsCount={filteredRows.length}\n          onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n          rowSelection={{\n            showCheckbox: true,\n            enableShiftSelect: true,\n            onRowsSelected: this.onRowsSelected,\n            onRowsDeselected: this.onRowsDeselected,\n            selectBy: {\n              indexes: this.state.selectedIndexes\n            }\n          }}\n          toolbar={<Toolbar enableFilter={true}>{this.state.selectedIndexes.length === 1 && <Button\n          \n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}{this.state.selectedIndexes.length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>} </Toolbar>}\n          onAddFilter={filter => this.setState({ filters: this.handleFilterChange(filter) })}\n          onClearFilters={() => this.setState({ filters: {} })}\n          getValidFilterValues={columnKey => this.getValidFilterValues(this.state.rows, columnKey)}\n        />\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { ReactDOM, Link } from \"react-dom\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"../styles.css\";\nimport { dataProvider } from '../components/authProvider'\nimport Chip from '@material-ui/core/Chip'\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n\n\n  Button\n\n\n} from 'react-admin';\n\nvar dateFormat = require(\"dateformat\");\n\nconst selectors = Data.Selectors;\nconst {\n  NumericFilter,\n  AutoCompleteFilter,\n  MultiSelectFilter,\n  SingleSelectFilter\n} = Filters;\n\nconst addonsChip = (params) => {\n  if (params.value.length !== 0) {\n\n    return (\n      <>\n        {params.value.map(item =>\n\n          <Chip color='secondary' label={item} key={item} />\n        )}\n      </>\n    )\n\n  }\n  else\n    return (<span></span>)\n}\n\nconst getDateRange = (params) => {\n\n  return (<span >{dateFormat(params.row['start'], 'h:mm TT') || ''}-{dateFormat(params.value, 'h:mm TT') || ''\n  }</span>)\n}\n\nconst BookingDaateFormatter = (params) => {\n\n\n  let date = dateFormat(params.value, \"dddd dd/mm/yyyy\");\n  return (<span >{date}</span>)\n\n}\n\nconst ServiceFormatter = (params) => {\n\n  return (<span >{params.value || ''} {params.row.category || ''}</span>)\n};\n\nconst LinktoClients = (params) => {\n\n  if (params.row['client_ref']) {\n\n\n    return (<a href={'#clients/' + params.row['client_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\nconst LinktoDogs = (params) => {\n\n  if (params.row['dog_ref']) {\n\n\n    return (<a href={'#dogs/' + params.row['dog_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\n\n\n\nconst columns = [\n  { key: \"name\", name: \"Name\", resizable: true, formatter: LinktoClients, filterable: true, },\n  { key: \"dogName\", name: \"Dog\", resizable: true, formatter: LinktoDogs, filterable: true, },\n  { key: \"service\", name: \"Service\", resizable: true, formatter: ServiceFormatter, filterable: true, filterRenderer: AutoCompleteFilter },\n  { key: \"start\", name: \"Booking Date\", resizable: true, formatter: BookingDaateFormatter, filterable: true, },\n  { key: \"end\", name: \"Time\", resizable: true, formatter: getDateRange, filterable: true, },\n  { key: \"addOns\", name: \"AddOns\", resizable: true, formatter: addonsChip, filterable: true, },\n  { key: \"code\", name: \"Booking Code\", resizable: true, filterable: true, }\n];\n\n\nexport default class todayDaycare extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selectedIndexes: [],\n      filters: {}\n    }\n  }\n\n\n\n\n  onRowsSelected = rows => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(\n        rows.map(r => r.rowIdx)\n      )\n    });\n  };\n\n  onRowsDeselected = rows => {\n    let rowIndexes = rows.map(r => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter(\n        i => rowIndexes.indexOf(i) === -1\n      )\n    });\n  };\n  componentDidMount() {\n    let today = new Date()\n    dataProvider.getList('bookings', {filter: {'start': dateFormat(today, \"yyyy-mm-dd\"), 'category':'daycare'}, pagination: { page: 1, perPage: 100000 }} )\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n\n\n  handleFilterChange = (filter, filters) => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\n  getValidFilterValues = (rows, columnId) => {\n    return rows\n      .map(r => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n\n  getRows = (rows, filters) => {\n    return selectors.getRows({ rows, filters });\n  }\n\n\n  render() {\n\n    const filteredRows = this.getRows(this.state.rows, this.state.filters);\n    return (\n\n      <div style={{ height: '94%' }}>\n        <ReactDataGrid\n          columns={columns}\n          rowGetter={i => filteredRows[i]}\n          rowsCount={filteredRows.length}\n          onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n          rowSelection={{\n            showCheckbox: true,\n            enableShiftSelect: true,\n            onRowsSelected: this.onRowsSelected,\n            onRowsDeselected: this.onRowsDeselected,\n            selectBy: {\n              indexes: this.state.selectedIndexes\n            }\n          }}\n          toolbar={<Toolbar enableFilter={true}>{this.state.selectedIndexes.length === 1 && <Button\n          \n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}{this.state.selectedIndexes.length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>} </Toolbar>}\n          onAddFilter={filter => this.setState({ filters: this.handleFilterChange(filter) })}\n          onClearFilters={() => this.setState({ filters: {} })}\n          getValidFilterValues={columnKey => this.getValidFilterValues(this.state.rows, columnKey)}\n        />\n      </div>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { ReactDOM, Link } from \"react-dom\";\nimport ReactDataGrid from \"react-data-grid\";\nimport \"../styles.css\";\nimport { dataProvider } from '../components/authProvider'\nimport Chip from '@material-ui/core/Chip'\nimport { Toolbar, Data, Filters } from \"react-data-grid-addons\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n\n\n  Button,\n  \n\n} from 'react-admin';\n\nvar dateFormat = require(\"dateformat\");\n\nconst selectors = Data.Selectors;\nconst {\n  NumericFilter,\n  AutoCompleteFilter,\n  MultiSelectFilter,\n  SingleSelectFilter\n} = Filters;\n\nconst addonsChip = (params) => {\n  if (params.value.length !== 0) {\n\n    return (\n      <>\n        {params.value.map(item =>\n\n          <Chip color='secondary' label={item} key={item} />\n        )}\n      </>\n    )\n\n  }\n  else\n    return (<span></span>)\n}\n\nconst getDateRange = (params) => {\n\n  return (<span >{dateFormat(params.row['start'], 'h:mm TT') || ''}-{dateFormat(params.value, 'h:mm TT') || ''\n  }</span>)\n}\n\nconst BookingDaateFormatter = (params) => {\n\n\n  let date = dateFormat(params.value, \"dddd dd/mm/yyyy\");\n  return (<span >{date}</span>)\n\n}\n\nconst ServiceFormatter = (params) => {\n\n  return (<span >{params.value || ''} {params.row.category || ''}</span>)\n};\n\nconst LinktoClients = (params) => {\n\n  if (params.row['client_ref']) {\n\n\n    return (<a href={'#clients/' + params.row['client_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\nconst LinktoDogs = (params) => {\n\n  if (params.row['dog_ref']) {\n\n\n    return (<a href={'#dogs/' + params.row['dog_ref']} >{params.value}</a>)\n\n  }\n  else\n    return (<span >{params.value}</span>)\n\n}\n\n\n\nconst columns = [\n  { key: \"name\", name: \"Name\", resizable: true, formatter: LinktoClients, filterable: true, },\n  { key: \"dogName\", name: \"Dog\", resizable: true, formatter: LinktoDogs, filterable: true, },\n  { key: \"service\", name: \"Service\", resizable: true, formatter: ServiceFormatter, filterable: true, filterRenderer: AutoCompleteFilter },\n  { key: \"start\", name: \"Booking Date\", resizable: true, formatter: BookingDaateFormatter, filterable: true, },\n  { key: \"end\", name: \"Time\", resizable: true, formatter: getDateRange, filterable: true, },\n  { key: \"addOns\", name: \"AddOns\", resizable: true, formatter: addonsChip, filterable: true, },\n  { key: \"code\", name: \"Booking Code\", resizable: true, filterable: true, }\n];\n\n\nexport default class todayGrooming extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selectedIndexes: [],\n      filters: {}\n    }\n  }\n\n\n\n\n  onRowsSelected = rows => {\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.concat(\n        rows.map(r => r.rowIdx)\n      )\n    });\n  };\n\n  onRowsDeselected = rows => {\n    let rowIndexes = rows.map(r => r.rowIdx);\n    this.setState({\n      selectedIndexes: this.state.selectedIndexes.filter(\n        i => rowIndexes.indexOf(i) === -1\n      )\n    });\n  };\n  componentDidMount() {\n    let today = new Date()\n    dataProvider.getList('bookings', {filter: {'start': dateFormat(today, \"yyyy-mm-dd\"), 'category':'stylist'}, pagination: { page: 1, perPage: 100000 }} )\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n\n\n  handleFilterChange = (filter, filters) => {\n    const newFilters = { ...filters };\n    if (filter.filterTerm) {\n      newFilters[filter.column.key] = filter;\n    } else {\n      delete newFilters[filter.column.key];\n    }\n    return newFilters;\n  };\n\n  getValidFilterValues = (rows, columnId) => {\n    return rows\n      .map(r => r[columnId])\n      .filter((item, i, a) => {\n        return i === a.indexOf(item);\n      });\n  }\n\n  getRows = (rows, filters) => {\n    return selectors.getRows({ rows, filters });\n  }\n\n\n  render() {\n\n    const filteredRows = this.getRows(this.state.rows, this.state.filters);\n    return (\n\n      <div style={{ height: '94%' }}>\n        <ReactDataGrid\n          columns={columns}\n          rowGetter={i => filteredRows[i]}\n          rowsCount={filteredRows.length}\n          onColumnResize={(idx, width) =>\n            console.log(`Column ${idx} has been resized to ${width}`)\n          }\n          rowSelection={{\n            showCheckbox: true,\n            enableShiftSelect: true,\n            onRowsSelected: this.onRowsSelected,\n            onRowsDeselected: this.onRowsDeselected,\n            selectBy: {\n              indexes: this.state.selectedIndexes\n            }\n          }}\n          toolbar={<Toolbar enableFilter={true}>{this.state.selectedIndexes.length === 1 && <Button\n          \n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}{this.state.selectedIndexes.length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>} </Toolbar>}\n          onAddFilter={filter => this.setState({ filters: this.handleFilterChange(filter) })}\n          onClearFilters={() => this.setState({ filters: {} })}\n          getValidFilterValues={columnKey => this.getValidFilterValues(this.state.rows, columnKey)}\n        />\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport {\n  EditButton,\n  Button\n} from 'react-admin';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nconst columns = [\n  {\n    name: 'name', header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n\n      if (data['client_ref']) {\n\n        return (<a href={'#clients/' + data['client_ref']} >{value}</a>)\n\n      }\n      else\n        return (<span >{value}</span>)\n\n    }\n  },\n  {\n    name: 'dogName', header: 'Dog', defaultWidth: 150, render: ({ value, data }) => {\n      if (data['dog_ref']) {\n\n\n        return (<a href={'#dogs/' + data['dog_ref']} >{value}</a>)\n\n      }\n      else\n        return (<span >{value}</span>)\n    }\n  },\n  {\n    name: 'service', header: 'Service', defaultWidth: 250,\n    render: ({ value, data }) => {\n      return (<span >{value || ''} {data.category || ''}</span>)\n    }\n  },\n  {\n    name: 'start', header: 'Start', defaultWidth: 250, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n      return ({\n        dateFormat: 'ddd DD/MM/YYYY',\n        placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n      })\n    },\n    render: ({ value, cellProps: { dateFormat } }) => {\n      return moment(value).format('ddd DD/MM/YYYY')\n    },\n  },\n  {\n    name: 'addOns', header: 'AddOns', defaultWidth: 250, render: ({ value }) => {\n      if (value.length !== 0) {\n\n        return (\n          <>\n            {value.map(item =>\n\n              <Chip color='secondary' label={item} key={item} />\n            )}\n          </>\n        )\n\n      }\n      else\n        return (<span></span>)\n    }\n  },\n  { name: 'code', header: 'Booking Code', defaultWidth: 250, },\n];\n\nconst gridStyle = { minHeight: 550 };\n\nconst defaultFilterValue = [\n\n  { name: 'start', operator: 'eq', type: 'date', value: '' },\n  { name: 'service', operator: 'contains', type: 'string', value: '' }\n];\n\nexport default class grooming extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rows: [],\n      selected: {},\n      filter:false\n\n    }\n  }\n\n  componentDidMount() {\n\n    getList('bookings')\n      .then(({ data }) => {\n        this.setState({ rows: data })\n\n\n      })\n      .catch(error => {\n\n\n      })\n\n  }\n  render() {\n    return (\n      <>\n        <div>\n        <Button\n            label=\"Filters\"\n            onClick={()=>this.setState({filter:!this.state.filter})}>\n            <FilterListIcon />\n          </Button>\n          {Object.keys(this.state.selected).length === 1 && <EditButton\n            basePath='/bookings' label='Edit' record={Object.values(this.state.selected)[0]}\n          />}\n          {Object.keys(this.state.selected).length === 1 && <Button\n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}\n          {Object.keys(this.state.selected).length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>}\n        </div>\n        <ReactDataGrid\n          idProperty=\"id\"\n          columns={columns}\n          dataSource={this.state.rows}\n          style={gridStyle}\n          defaultFilterValue={defaultFilterValue}\n          onSelectionChange={select => this.setState({ selected: select.selected })}\n          enableFiltering={this.state.filter}\n          multiSelect\n          checkboxColumn\n          \n        />\n      </>\n    )\n  }\n}","import React from 'react';\nimport './ConversationSearch.css';\n\nexport default function ConversationSearch(props) {\n\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Client\"\n        onChange={event => props.searchFilterFunction(event.target.value)}\n        value={props.searchText}\n      />\n    </div>\n  );\n}","import React, {useEffect} from 'react';\nimport shave from 'shave';\n\nimport './ConversationListItem.css';\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n\n    const { photo, name, text } = props.data;\n\n    return (\n      <div className=\"conversation-list-item\" onClick={()=>{\n        \n        props.onClick({sid:props.data.sid, name:props.data.name})}}>\n      \n        <div className=\"conversation-info\">\n          <h1 className=\"conversation-title\">{ name }</h1>\n          <p className=\"conversation-snippet\">{ text }</p>\n        </div>\n      </div>\n    );\n}","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n}","import React, { useState, useEffect } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport { dataProvider ,getTWToken } from '../../../components/authProvider'\nimport './ConversationList.css';\n\nconst Conversations = require('@twilio/conversations');\n\n\n\nexport default function ConversationList(props) {\n\n  const [conversations, setConversations] = useState([]);\n  const [conversationHolder, setConverrsationHolder] = useState([]);\n  const [searchText, setSearchText] = useState(null)\n\n\n  useEffect(() => {\n    getConversations()\n  }, [])\n\n  async function getClient(token, callback) {\n    let items = []\n    async function processChannels(paginator) {\n\n\n      if (paginator.hasNextPage) {\n\n        const nextPaginator = await paginator.nextPage();\n        items = items.concat(nextPaginator.items)\n        await processChannels(nextPaginator);\n      }\n    }\n\n    let client = await Conversations.Client.create(token);\n\n    client.addListener('tokenAboutToExpire', async ()=>{\n      \n     \n      console.log('token about to expire')\n      let token = await getTWToken()\n      let client = await Conversations.Client.create(token);\n      props.setClient(client)\n   });\n   client.addListener('tokenExpired', async ()=>{\n      \n      console.log('token expired')\n      let token = await getTWToken()\n      let client = await Conversations.Client.create(token);\n      props.setClient(client)\n     })\n\n    client.addListener('connectionStateChanged', async (event) => {\n      if (event === 'connected') {\n        let clientconvo = await client.getSubscribedConversations()\n        items = clientconvo.items\n        await processChannels(clientconvo);\n        props.setClient(client)\n        \n        callback(items)\n      }\n    })\n  }\n\n  const searchFilterFunction = (text) => {\n\n    const newData = conversationHolder.filter(item => {\n\n\n      let name\n      try {\n        name = item.name.toUpperCase()\n      }\n      catch { name = null }\n      let phone\n      try {\n        phone = item.phone\n      }\n      catch { phone = null }\n\n      const itemData = `${name} ${phone}`;\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n\n    setSearchText(text)\n    setConversations(newData)\n\n  };\n\n\n  const getConversations = async () => {\n   \n    let token = await getTWToken()\n   \n    getClient(token, async convos => {\n\n\n      let newConversations = await Promise.all(convos.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n        \n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage?  result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n\n    })\n\n\n\n  }\n\n  return (\n    <div className=\"conversation-list\">\n      <Toolbar\n        title=\"Messenger\"\n        leftItems={[\n          <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n        ]}\n        rightItems={[\n          <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n        ]}\n      />\n      <ConversationSearch\n        searchFilterFunction={searchFilterFunction}\n        searchText={searchText}\n      />\n      {\n        conversations.map(conversation =>\n          <ConversationListItem\n            key={conversation.sid}\n            data={conversation}\n            onClick={props.setactiveConvo}\n          />\n        )\n      }\n    </div>\n  );\n}","import React from 'react';\nimport SendIcon from '@material-ui/icons/Send';\nimport {\n  Button\n} from 'react-admin';\nimport './Compose.css';\n\nexport default function Compose(props) {\n  return (\n    <div className=\"compose\">\n      <input\n        type=\"text\"\n        className=\"compose-input\"\n        placeholder=\"Type a message\"\n        value={props.value}\n        onChange={event => { props.onChange(event.target.value) }}\n      />\n      <Button\n        onClick={()=>props.onSend()}\n      >\n        <SendIcon />\n      </Button>\n\n      {\n        props.rightItems\n      }\n    </div>\n  );\n}","import React from 'react';\nimport moment from 'moment';\nimport './Message.css';\n\nexport default function Message(props) {\n    const {\n      data,\n      isMine,\n      startsSequence,\n      endsSequence,\n      showTimestamp\n    } = props;\n\n    const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n    return (\n      <div className={[\n        'message',\n        `${isMine ? 'mine' : ''}`,\n        `${startsSequence ? 'start' : ''}`,\n        `${endsSequence ? 'end' : ''}`\n      ].join(' ')}>\n        {\n          showTimestamp &&\n            <div className=\"timestamp\">\n              { friendlyTimestamp }\n            </div>\n        }\n\n        <div className=\"bubble-container\">\n          <div className=\"bubble\" title={friendlyTimestamp}>\n            { data.message }\n          </div>\n        </div>\n      </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\n\nimport './MessageList.css';\n\nconst MY_USER_ID = 'pBjefCCX5JXw6QbYFu2GR7rmouw1';\n\nexport default function MessageList(props) {\n  \n  const [messages, setMessages] = useState([])\n  const [newMessage, setNewMessage] = useState(null)\n  const [convo, setConvo] = useState(null)\n\n  useEffect(() => {\n    \n    getMessages();\n  },[props.activeConvo, newMessage])\n\n  \n  const getMessages = async () => {\n    var tempMessages=[]\n    if (props.activeConvo ){\n\n      \n      let convo = await props.client.getConversationBySid(props.activeConvo.sid)\n      setConvo(convo)\n      let messages = await convo.getMessages()\n      tempMessages=messages.items.map(i=>{return {id:i.state.index, author:i.state.author, message:i.state.body, timestamp:i.state.timestamp}})\n      \n    }\n    \n      setMessages(tempMessages)\n  }\n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n        \n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n  const sendMessage = async () =>{\n    await convo.sendMessage(newMessage)\n    let messages = await convo.getMessages()\n     let tempMessages=messages.items.map(i=>{return {id:i.state.index, author:i.state.author, message:i.state.body, timestamp:i.state.timestamp}})\n    setNewMessage(\"\")\n    setMessages(tempMessages)\n  }\n\n\n\n    return(\n      <div className=\"message-list\">\n        <Toolbar\n          title={props.activeConvo ? props.activeConvo.name : 'Select a conversation'}\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        />\n\n        <div className=\"message-list-container\">{renderMessages()}</div>\n  \n        <Compose \n        value={newMessage}\n        onChange={setNewMessage}\n        onSend={sendMessage}\n        rightItems={[\n         \n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]}/>\n      </div>\n    );\n}","import React , { useState } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\n\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n  \n  const [activeConvo, setactiveConvo] = useState(null);\n  const [client, setClient]= useState(null)\n  \n  return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList setactiveConvo={setactiveConvo} setClient={setClient} />\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList activeConvo={activeConvo} client={client} />\n        </div>\n      </div>\n    );\n}","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport bookingstoday from '../views/bookingToday'\nimport todayDaycare from '../views/todayDaycare'\nimport todayGrooming from '../views/todayGrooming'\nimport grooming from '../views/grooming'\nimport messenger from '../views/messenger'\n\n\nexport default\n\n[\n\n    <Route   exact path=\"/bookingstoday\" component={bookingstoday}   />,\n    <Route   exact path=\"/todaydaycare\" component={todayDaycare}   />,\n    <Route   exact path=\"/todaygrooming\" component={todayGrooming}   />,\n    <Route   exact path=\"/grooming\" component={grooming}  />,\n    <Route   exact path=\"/messenger\" component={messenger}  />,\n\n\n\n];","import React from 'react';\nimport Messenger from './messenger/Messenger';\nimport Card from '@material-ui/core/Card';\n\nimport { Title } from 'react-admin';\n\nexport default function messenger() {\n\n\n    return (\n        <Card>\n            <Title title=\"Messenger\" />\n\n\n\n                <Messenger />\n\n        </Card>\n\n\n\n    );\n}","/* eslint-disable import/no-anonymous-default-export */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\n\nimport {\n    adminReducer,\n    adminSaga,\n    USER_LOGOUT,\n} from 'react-admin';\n\nexport default ({\n    authProvider,\n    dataProvider,\n    history,\n}) => {\n    const reducer = combineReducers({\n        admin: adminReducer,\n        router: connectRouter(history),\n     \n\n        // add your own reducers here\n    });\n    const resettableAppReducer = (state, action) =>\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\n\n    const saga = function* rootSaga() {\n        yield all(\n            [\n                adminSaga(dataProvider, authProvider),\n                // add your own sagas here\n            ].map(fork)\n        );\n    };\n    const sagaMiddleware = createSagaMiddleware();\n\n    const composeEnhancers =\n        (process.env.NODE_ENV === 'development' &&\n            typeof window !== 'undefined' &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                trace: true,\n                traceLimit: 25,\n            })) ||\n        compose;\n  \n    const store = createStore(\n        resettableAppReducer,\n        { /* set your initial state here */ },\n        composeEnhancers(\n            applyMiddleware(\n                sagaMiddleware,\n                routerMiddleware(history),\n                // add your own middlewares here\n            ),\n            // add your own enhancers here\n        ),        \n    );\n    sagaMiddleware.run(saga);\n    return store;\n};","import * as React from \"react\";\nimport {\n    List,\n\n    Datagrid,\n    TextField,\n\n    EmailField,\n\n    NumberField\n  \n} from 'react-admin';\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n        </Datagrid>\n    </List>\n)","import * as React from \"react\";\nimport { Admin,  Resource , ListGuesser, Layout ,EditGuesser} from 'react-admin';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport { UserList ,UserCreate, UserEdit} from './views/clients';\nimport { DogList, DogEdit, DogCreate } from './views/dogs';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Dashboard from './views/Dashboard';\nimport {authProvider,dataProvider, getFCMToken,onMessageReceved } from './components/authProvider';\nimport Utils from '@date-io/moment'\nimport GroupIcon from '@material-ui/icons/Group';\nimport MyLayout from './components/MyLayout';\nimport {BookingList} from './views/allbookings'\nimport muCustomRoutes from './components/muCustomRoutes'\nimport createAdminStore from './components/createAdminStore';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport {PaymentList} from './views/payments'\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nconst history = createHashHistory();\n\n\nconst App = () =>{\n\n\n  const [isTokenFound, setTokenFound] = React.useState(false);\n  getFCMToken(setTokenFound);\n  \n  onMessageReceved(payload=> {\n\n    NotificationManager.success(payload.notification.body, payload.notification.title);\n  })\n\n \n  return (\n  <Provider\n        store={createAdminStore({\n            authProvider,\n            dataProvider,\n            history,\n        })}\n    >\n        <MuiPickersUtilsProvider utils={Utils}>\n        <NotificationContainer/>\n     <Admin disableTelemetry layout={MyLayout} history={history} customRoutes={muCustomRoutes}   dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider}>\n\n        <Resource name=\"clients\"  list={UserList}  icon={PetsIcon} create={UserCreate} to='/clients' edit={UserEdit} options={{ \"label\": \"Clients\"  }}  />\n       <Resource name=\"dogs\" list={DogList}  create={DogCreate} edit={DogEdit}  />\n       <Resource name=\"dog_breeds\" list={ListGuesser}     />\n       <Resource name=\"bookings\" list={BookingList}  edit={EditGuesser}   />\n       <Resource name=\"services\" list={ListGuesser}     />\n       <Resource name=\"payments\" list={PaymentList}     />\n       \n     </Admin>\n     </MuiPickersUtilsProvider>\n</Provider>\n  );}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}