{"version":3,"sources":["fields/MyUrlField.js","views/clients.js","components/authProvider.js","components/dogsBulk.js","views/dogs.js","views/Dashboard.js","components/Context.js","components/MyNotifis.js","components/MyAppbar.js","components/myMenu.js","components/MyLayout.js","views/BookingView.js","views/allbookings.js","views/bookingToday.js","views/todayDaycare.js","views/todayGrooming.js","views/grooming.js","views/daycare.js","views/messenger/ConversationSearch/index.js","views/messenger/ConversationListItem/index.js","views/messenger/Toolbar/index.js","views/messenger/ToolbarButton/index.js","components/newCovoCreate/index.js","views/messenger/ConversationList/index.js","components/imageUploader.js","views/messenger/Compose/index.js","views/messenger/Message/index.js","components/TwilioHelper.js","views/messenger/MessageList/index.js","views/messenger/Messenger/index.js","components/muCustomRoutes.js","views/messenger.js","components/createAdminStore.js","views/payments.js","App.js","index.js"],"names":["makeStyles","link","textDecoration","icon","width","paddingLeft","PostPagination","props","Pagination","rowsPerPageOptions","UserList","isSmall","useMediaQuery","theme","breakpoints","down","List","perPage","pagination","SimpleList","primaryText","record","name","secondaryText","email","tertiaryText","phone","TextField","source","EmailField","EditButton","PostTitle","UserCreate","Create","SimpleForm","TextInput","label","UserEdit","Edit","title","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","messaging","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","getToken","a","checkAuth","token","ya","getList","haha","page","list","getTWToken","axios","require","data","JSON","stringify","method","url","headers","then","response","catch","error","console","log","qs","DogBulk","selectedIds","useStyles","root","margin","spacing","useState","open","setOpen","notify","useNotify","unselectAll","useUnselectAll","useGetIdentity","identity","loading","React","topic","setTopic","message","setMessage","setLoading","handleDialogClose","handleConfirm","res","err","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","Input","fullWidth","placeholder","defaultValue","onChange","event","target","value","multiline","DialogActions","BulkDeleteButton","MaleFemaleFilter","FilterList","FilterListItem","sex","desexed","Card","withStyles","up","order","marginRight","display","MuiCard","FilterSidebar","CardContent","FilterLiveSearch","DogList","aside","bulkActionButtons","dog_name","Client","ReferenceField","reference","SelectField","choices","id","BooleanField","DateField","DogEdit","TabbedForm","FormTab","ReferenceInput","filterToQuery","searchText","AutocompleteInput","optionText","optionValue","SelectInput","BooleanInput","options","checkedIcon","DateInput","format","DogCreate","CardHeader","NotificationContext","createContext","ContextProvider","Consumer","state","notifications","setNotifications","notifi","notif","push","setState","removeNotif","filter","i","removeAllMessNotif","convoItem","sid","children","this","Provider","Component","Notifis","useContext","anchorEl","setAnchorEl","history","useHistory","Badge","style","height","badgeContent","length","color","aria-controls","aria-haspopup","currentTarget","htmlColor","Menu","keepMounted","Boolean","map","MenuItem","item","type","ListItemIcon","fontSize","disabled","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","variant","className","maxWidth","backgroundColor","palette","background","paper","nested","NestedList","onMenuClick","logout","open1","setOpen1","open2","setOpen2","useSelector","getResources","component","DashboardMenuItem","sidebarIsOpen","MenuItemLink","to","leftIcon","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","MyLayout","Layout","menu","appBar","window","moment","BookingView","getService","c","service","category","columns","header","defaultWidth","render","href","Chip","filterEditor","SelectFilter","filterEditorProps","multiple","wrapMultiple","dataSource","DateFilter","dateFormat","index","cellProps","start","cellDOMProps","onMouseEnter","NotificationManager","success","alert","gridStyle","minHeight","defaultFilterValue","operator","selected","serviceFilter","Title","Object","keys","basePath","values","idProperty","rows","onSelectionChange","select","enableFiltering","multiSelect","checkboxColumn","ConversationSearch","searchFilterFunction","ConversationListItem","useEffect","shave","photo","text","unreadCount","Toolbar","leftItems","rightItems","ToolbarButton","NewConvoCreate","allCust","setAllCust","allCustHolder","setAllCustHolder","total","setTotal","setSearchText","all_clients","handleClick","search","activeConvos","setActiveConvo","visible","createNewConvo","newData","toUpperCase","itemData","textData","indexOf","itemSize","itemCount","Conversations","ConversationList","conversations","setConversations","conversationHolder","setConverrsationHolder","newConvoVisible","setNewConvoVisible","getConversations","conversation","channelState","uniqueName","split","info","refreshConvoList","useCallback","client","processChannels","paginator","hasNextPage","nextPage","nextPaginator","items","concat","getSubscribedConversations","clientconvo","Promise","all","result","friendlyName","dateUpdated","lastMessage","dateCreated","lastReadMessageIndex","newConversations","sort","b","Date","refreshToken","updateToken","getClient","callback","create","addListener","setClient","_eventsCount","createConvo","number","createConversation","twiConvo","addNonChatParticipant","add","setactiveConvo","convos","obj","findIndex","Imageuploader","withIcon","buttonText","onDrop","imgExtension","withPreview","onCancel","onPicSend","Compose","dialog","setDialog","spellCheck","minRows","onSend","Message","isMine","startsSequence","endsSequence","showTimestamp","searchPattern","RegExp","friendlyTimestamp","timestamp","join","test","thumbnailWidth","thumbnailHeight","images","src","SendPicToServ","file","readFile","resolve","reject","fr","FileReader","onload","x","onerrror","readAsDataURL","base64","replace","MessageList","messages","setMessages","newMessage","setNewMessage","convo","setConvo","messagesEndRef","useRef","selectedFile","setSelectedFile","sendMessage","current","scrollIntoView","behavior","scrollToBottom","getMessages","tempMessages","activeConvo","getConversationBySid","_events","messageAdded","advanceLastReadMessageIndex","author","body","removeListener","img","messageCount","previous","next","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","renderMessages","ref","Messenger","exact","path","setRows","today","forEach","date","substring","reducer","combineReducers","admin","adminReducer","router","connectRouter","saga","rootSaga","adminSaga","fork","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","action","USER_LOGOUT","undefined","applyMiddleware","routerMiddleware","run","PaymentList","Datagrid","rowClick","NumberField","createHashHistory","App","setTokenFound","vapidKey","currentToken","getFCMToken","payload","notification","onMessage","payloaf","createAdminStore","utils","Utils","Admin","disableTelemetry","layout","customRoutes","muCustomRoutes","dashboard","Dashboard","Resource","PetsIcon","edit","EditGuesser","ListGuesser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8b95ba0.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;\n","import * as React from \"react\";\nimport { List, Datagrid,Edit ,Pagination,     EditButton ,SimpleList, TextField, EmailField, TextInput, Create, SimpleForm} from 'react-admin';\nimport MyUrlField from '../fields/MyUrlField';\nimport { useMediaQuery } from '@material-ui/core';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\n\nexport const UserList = props =>{\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n   return (\n    <List  perPage={50} {...props} pagination={<PostPagination />} >{isSmall ? (\n        <SimpleList\n            primaryText={record => record.name}\n            secondaryText={record => record.email}\n            tertiaryText={record => record.phone}\n        />\n    ) : (\n    \n      \n    <CustomizableDatagrid>\n            <TextField source=\"name\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"instagram\" />\n         <EditButton/>\n         </CustomizableDatagrid>\n  \n       )}\n    </List>\n);}\n\nconst PostTitle = ({ record }) => {\n    return <span>Client {record ? `\"${record.name}\"` : ''}</span>;\n }\n\nexport const UserCreate = props => (\n    <Create {...props}>\n         <SimpleForm>\n             <TextInput source=\"name\" label='Name' />\n             <TextInput source=\"phone\" label=\"Phone\" />\n             <TextInput source=\"email\" label=\"Email\" />\n             <TextInput source=\"instagram\" label=\"Instagram\" />\n         </SimpleForm>\n     </Create>\n  );\n\n  export const UserEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <SimpleForm>\n        <TextInput source=\"name\" label='Name' />\n             <TextInput source=\"phone\" label=\"Phone\" />\n             <TextInput source=\"email\" label=\"Email\" />\n             <TextInput source=\"instagram\" label=\"Instagram\" />\n        </SimpleForm>\n    </Edit>\n);","import {\n  FirebaseAuthProvider,\n  FirebaseDataProvider,\n\n} from 'react-admin-firebase';\n\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { NotificationManager} from 'react-notifications';\n\nconst config = {\n  apiKey: \"AIzaSyAUqOhdFbfRiCRqSzxKpYeTppBGsHfAAug\",\n  authDomain: \"admin-a4a00.firebaseapp.com\",\n  databaseURL: \"https://admin-a4a00-default-rtdb.firebaseio.com\",\n  projectId: \"admin-a4a00\",\n  storageBucket: \"admin-a4a00.appspot.com\",\n  messagingSenderId: \"328849622350\",\n  appId: \"1:328849622350:web:cf2cd21a20f108e7aeca1f\",\n  measurementId: \"G-YKBC2Q28P1\"\n\n\n};\nfirebase.initializeApp(config);\n\n\n const messaging = firebase.messaging();\n\n\n export const getFCMToken = (setTokenFound) => {\n\n  return messaging.getToken({vapidKey: 'BGXh163BEaceHzjq8oIfgZfCnHEze0njY12K3FFlv8N0lLtNYTsKWpE0L7darB0Yiqzt2P_6VCcuHnSvo6beecs'}).then((currentToken) => {\n  \n    if (currentToken) {\n\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true);\n      // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false);\n     \n      // shows on the UI that permission is required \n    }\n  }).catch((err) => {\n    console.log('An error occurred while retrieving token. ', err);\n    NotificationManager.error('Notifications not enabled!', 'Allow notifications and refresh page', 500000, () => {\n      alert('callback');\n    });\n    // catch error while creating client token\n  });\n}\n\nexport const onMessageReceved = (callback) => {\n\n  messaging.onMessage(payloaf=>{\n   callback(payloaf)\n   })\n  }\n\nconst options = {};\n\nexport const dataProvider = FirebaseDataProvider(config, options);\n\nexport const authProvider = FirebaseAuthProvider(config);\n\nexport const getToken = async () => {\n  \n  let token = await authProvider.checkAuth()\n  return token.ya\n\n}\n\nexport const getList = async (haha) => {\n  let list = await dataProvider.getList(haha, { pagination: { page: 1, perPage: 10000 }, })\n  return list\n}\n\nexport const getTWToken = async () => {\n  var axios = require('axios');\n  let token = await getToken()\nvar data = JSON.stringify({\n  \"token\": token\n});\n\nvar config = {\n  method: 'post',\n  url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/getToken',\n  headers: { \n    'Authorization': 'Basic MkMzRDBFMkMtODQ3Qi00OEI4LUI1NTItOENCQTlDQkEzREQ4OjgwOEFGMDlBLTBFODgtNDU3Mi04QzJGLUUwOEIwOEE4N0RFMQ==', \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\nreturn axios(config)\n.then(function (response) {\n  \n return response.data;\n})\n.catch(function (error) {\n  \n  console.log(error);\n});\n\n}\n\n","import * as React from 'react';\nimport { Fragment, useState } from 'react';\nimport {\n\n\n\n    useNotify,\n    useUnselectAll,\n    BulkDeleteButton,\n    useGetIdentity,\n    Button,\n    Loading\n\n} from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconCancel from '@material-ui/icons/Cancel';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Input from '@material-ui/core/Input';\nimport SendIcon from '@material-ui/icons/Send';\nimport {getToken} from './authProvider'\n\nvar axios = require('axios');\nvar qs = require('qs');\n\n\n\nconst DogBulk =  ({ selectedIds }) => {\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n          },\n        },\n      }));    \n\n\n    const [open, setOpen] = useState(false);\n\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const { identity, loading: identityLoading } = useGetIdentity();\n    const classes = useStyles();\n    const [topic, setTopic] = React.useState();\n    const [message, setMessage] = React.useState();\n    const [loading, setLoading] = useState(false);\n   \n    const handleClick = () => setOpen(true);\n    const handleDialogClose =  () => { setOpen(false);}\n\n    const handleConfirm = async () => {\n      setLoading(true)\n      let token = await getToken()\n    \n\n        var data = qs.stringify([token,selectedIds,'dogs', topic, message]);\n\n        var config = {\n          method: 'post',\n          url: 'https://7a314e3ed3bb.ngrok.io',\n          headers: { \n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          data : data\n        };\n        \n        axios(config)\n        .then(function (res) {\n          setLoading(false)\n          setOpen(false);\n          notify('Messages sent');\n          unselectAll('dogs');\n          setTopic(null)\n          setMessage(null)\n\n        })\n        .catch(function (err) {\n          setLoading(false)\n          notify('Error: Could not reach server', 'warning')\n\n        });\n\n\n    };\n\n//        \n\n\n\n\n\n\n    return (\n        <Fragment>\n            <Button label=\"Text clients\" onClick={handleClick}  />\n\n            <Dialog\n\n                  \n                    open={open}\n                    onClose={handleDialogClose}\n                >\n                    \n                    <DialogTitle>Message Owners</DialogTitle>\n                   \n                      <DialogContent> \n\n                        <Input name='Topic' fullWidth placeholder=\"Topic\" defaultValue={topic && topic } onChange={event =>{setTopic(event.target.value)}}  />\n                        <Input name='Message' multiline fullWidth placeholder='Message' defaultValue={message && message } onChange={event =>{setMessage(event.target.value)}}  />\n\n                      </DialogContent>\n                      {loading===false &&\n                      <DialogActions>\n                 \n   \n                 \n                        <Button\n                            label=\"Cancel\"\n                            onClick={handleDialogClose}\n                \n                        >\n                            <IconCancel />\n                        </Button>\n                  <Button\n                            label=\"Send\"\n                            onClick={handleConfirm}\n                            \n                        >\n                            <SendIcon />\n                        </Button>\n                    </DialogActions>}\n                    \n                    </Dialog>\n        <BulkDeleteButton  />\n        </Fragment>\n        \n    );\n}\n\n \n\nexport default DogBulk;","import * as React from \"react\";\nimport {\n    List,\n    SimpleList,\n    Datagrid,\n    TextField,\n    ReferenceField,\n    EditButton,\n    Edit,\n    Create,\n    SimpleForm,\n    ReferenceInput,\n    SelectInput,\n    TextInput,\n    Filter,\n    Pagination,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    DateField,TabbedForm,\n    FormTab,\n    AutocompleteInput,\n    DateInput,\n    FilterList, FilterListItem,\n    FilterLiveSearch,\n    SelectField\n  \n} from 'react-admin';\nimport { useMediaQuery,  Card as MuiCard, CardContent, withStyles  } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOnOutlined';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport DogBulk from '../components/dogsBulk'\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\n\n\n\nconst PostPagination = props => <Pagination rowsPerPageOptions={[50, 100, 200]} {...props} />;\n\n\nconst PostFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Owner\" source=\"owner\" reference=\"users\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\n\n\nconst MaleFemaleFilter = () => (\n    <FilterList label=\"Sex\" icon={<AccessTimeIcon />}>\n\n    \n        <FilterListItem\n            label=\"Male\"\n            value={{\n                sex: \"M\"\n            }}\n        />\n         <FilterListItem\n            label=\"Female\"\n            value={{\n               sex: 'F'\n  \n            }}\n        />\n        <FilterListItem\n            label=\"Desexed\"\n            value={{\n               desexed: true\n  \n            }}\n        />\n    </FilterList>\n);\n\nconst Card = withStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            order: -1, // display on the left rather than on the right of the list\n            width: '15em',\n            marginRight: '1em',\n        },\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))(MuiCard);\n\nconst FilterSidebar = () => (\n    <Card>\n        <CardContent>\n        <FilterLiveSearch source=\"dog_name\" />\n\n            <MaleFemaleFilter />\n        </CardContent>\n    </Card>\n);\n\nexport const DogList = (props) => {\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n    return (\n        <List aside={<FilterSidebar />} perPage={50} pagination={<PostPagination />}  bulkActionButtons={<DogBulk />}  {...props}>\n         \n            {isSmall ? (\n                <SimpleList\n                    primaryText={record => record.dog_name}\n                    secondaryText={record =>record.Client}\n                />\n            ) : (\n                \n                <CustomizableDatagrid>\n                      <TextField source=\"dog_name\" label='Dog Name' />\n                    <ReferenceField label=\"Client\" source=\"owner\" reference=\"clients\"  >\n                        <TextField source=\"name\"  />\n                    </ReferenceField>\n                    <ReferenceField label=\"Breed\" source='breed' reference=\"dog_breeds\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n                    <SelectField source=\"sex\" choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} />\n                    <BooleanField source=\"desexed\" label='Desexed' />\n                    <EmailField source=\"vet_email\" label='Vet Email' />\n                    <TextField source=\"vet\" label='Vet' />\n                    <DateField source=\"kc_due\" label='KC Due' />\n                    <DateField source=\"c3_due\" label='C3 Due' />\n                    <DateField source=\"c5_due\" label='C5 Due' />\n                    <EditButton />\n                    </CustomizableDatagrid>\n \n            )}\n    \n        </List>\n    );\n}\nconst PostTitle = ({ record }) => {\n       return <span>Dog {record ? `\"${record.dog_name}\"` : ''}</span>;\n    }\n\nexport const DogEdit = props => (\n    <Edit title={<PostTitle />} {...props} >\n        <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n        <TextInput source=\"dog_name\" label='Dog Name' />\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n        <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"breed\" reference=\"dog_breeds\"><AutocompleteInput optionValue=\"id\" optionText=\"name\" /></ReferenceInput>\n        \n          <SelectInput source='sex'  choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/><BooleanInput\nsource=\"desexed\"\noptions={{\n    checkedIcon: <FavoriteIcon />,\n}}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n    </Edit>\n);\n\n\n\nexport const DogCreate = props => (\n      <Create {...props}>\n                 <TabbedForm>\n                 <FormTab label=\"Dog Details\">\n           <ReferenceInput  filterToQuery={searchText => ({ name: searchText })} source=\"owner\" reference=\"clients\"><AutocompleteInput optionText=\"name\" /></ReferenceInput>\n            \n               <TextInput source=\"dog_name\" label='Dog Name' />\n               <TextInput  source=\"breed\" label='Breed' />\n               <SelectInput source='sex' choices={[\n   { id: 'M', name: 'Male' },\n   { id: 'F', name: 'Female' },\n]} label='Sex'/>\n<BooleanInput\n    source=\"desexed\"\n    options={{\n        checkedIcon: <FavoriteIcon />,\n    }}\n/>\n</FormTab>\n<FormTab label=\"Medical Details\">\n<TextInput source=\"vet\" label='Vet' />\n<TextInput source=\"vet_email\" label='Vet Email' />\n<DateInput source=\"kc_due\" label='KC Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c3_due\" label='C3 Due' options={{ format: 'DD/MM/YYYY' }} />\n<DateInput source=\"c5_due\" label='C5 Due' options={{ format: 'DD/MM/YYYY' }} />\n</FormTab>\n</TabbedForm>\n       </Create>\n    \n    );\n","import * as React from \"react\";\nimport { Card, CardContent, CardHeader } from '@material-ui/core';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"Welcome to the administration\" />\n        <CardContent>Lorem ipsum sic dolor amet...</CardContent>\n    </Card>\n);","import React from \"react\";\n\n\nconst NotificationContext = React.createContext();\n\nexport const ContextConsumer = NotificationContext.Consumer\n\n\n\nclass ContextProvider extends React.Component {\n    state = {\n        notifications: []\n    }\n\n\n    setNotifications = (notifi) => {\n        let notif = this.state.notifications\n        notif.push(notifi)\n        this.setState({ notifications: notif })\n    }\n\n    removeNotif = (notif) => {\n        this.setState({notifications: this.state.notifications.filter(i => i !== notif)})\n    }\n\n    removeAllMessNotif = (notif) => {\n        \n        this.setState({notifications: this.state.notifications.filter(i => i.convoItem.sid !== notif.sid)})\n    }\n\n    render() {\n        const { children } = this.props\n        const { notifications } = this.state\n        const { setNotifications, removeNotif, removeAllMessNotif } = this\n\n        return (\n            <NotificationContext.Provider\n                value={{\n                    notifications, setNotifications, removeNotif,\n                    removeAllMessNotif\n                }}\n            >\n                {children}\n            </NotificationContext.Provider>\n        );\n\n    }\n\n\n}\n\n\nexport { ContextProvider }\nexport default NotificationContext","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationContext from './Context'\nimport EmailIcon from '@material-ui/icons/Email';\nimport ContactlessIcon from '@material-ui/icons/Contactless';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Notifis(props) {\n\n  const { notifications,  removeNotif } = React.useContext(NotificationContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const history = useHistory();\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onItemClick = (item) => {\n\n    removeNotif(item)\n    history.push('/messenger');\n\n  }\n\n  const IconSelector = (item) => {\n    if (item.type === 'payment') {\n      return (<ListItemIcon >\n        <ContactlessIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n    else if (item.type === 'message') {\n      return (<ListItemIcon >\n        <EmailIcon fontSize=\"small\" />\n      </ListItemIcon>)\n    }\n  }\n\n\n  return (\n    <div>\n      <Badge style={{\n        height: \"25px\",\n        width: \"45px\"\n      }} badgeContent={notifications.length} color=\"error\">\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <NotificationsIcon htmlColor='white' />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >{notifications.length > 0 ? notifications.map(i => <MenuItem onClick={() => { onItemClick(i) }}>{IconSelector(i)}{i.message}</MenuItem>) :\n          <MenuItem disabled>All Caught Up</MenuItem>\n          }\n\n        </Menu>\n      </Badge>\n    </div>\n  );\n}\n\n ","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notifis from './MyNotifis'\n\n\n\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\n\nconst MyAppBar = props => {\n  const classes = useStyles()\n\n\n  return (\n\n  <AppBar {...props}>\n\n      <Typography\n        variant=\"h6\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n\n      <span className={classes.spacer} />\n      <Notifis />\n\n    </AppBar>\n\n  )\n};\n\nexport default MyAppBar;","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DashboardMenuItem, MenuItemLink, getResources } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MessageIcon from '@material-ui/icons/Message';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\n\n\n\n\nfunction NestedList({ onMenuClick, logout }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClick2 = () => {\n    setOpen2(!open2);\n  };\n\n  const handleClick1 = () => {\n    setOpen1(!open1);\n  };\n  const resources = useSelector(getResources);\n\n  const linkBookingrange = {\n    pathname: \"/bookings\",\n    hash: \"bookingsrange\"\n  }\n\n\n  return (\n\n    <List\n      component=\"nav\"\n      className={classes.root}\n    >\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\n      <MenuItemLink\n        key='clients'\n        to='/clients'\n        primaryText='Clients'\n        leftIcon={\n\n          <PeopleIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <PetsIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dogs\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dogs'\n          to='/dogs'\n          primaryText='All Dogs'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='dog_breeds'\n          to='/dog_breeds'\n          primaryText='Dog breeds'\n          leftIcon={\n\n            <ViewListIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n      </Collapse>\n      <ListItem button onClick={handleClick1}>\n        <ListItemIcon>\n          <CalendarTodayIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Bookings\" />\n        {open1 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open1} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookings'\n          to='/bookings'\n          primaryText='All Bookings'\n          leftIcon={\n\n            <EventNoteIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='bookingstoday'\n          to='/bookingstoday'\n\n          primaryText='Bookings Today'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaydaycare'\n          to='/todaydaycare'\n\n          primaryText='Today Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='todaygrooming'\n          to='/todaygrooming'\n\n          primaryText='Today Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='grooming'\n          to='/grooming'\n\n          primaryText='Grooming'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='daycare'\n          to='/daycare'\n\n          primaryText='Daycare'\n          leftIcon={\n\n            <DateRangeIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n        <MenuItemLink className={classes.nested} disablePadding\n          key='services'\n          to='/services'\n          primaryText='Services'\n          leftIcon={\n\n            <AssignmentIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n      </Collapse>\n      <ListItem button onClick={handleClick2}>\n        <ListItemIcon>\n          <PaymentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Payments\" />\n        {open2 ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open2} timeout=\"auto\" unmountOnExit>\n        <MenuItemLink className={classes.nested} disablePadding\n          key='payments'\n          to='/payments'\n          primaryText='All Payments'\n          leftIcon={\n\n            <AttachMoneyIcon />\n\n          }\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n\n\n      </Collapse>\n      <MenuItemLink\n        key='messenger'\n        to='/messenger'\n        primaryText='Messenger'\n        leftIcon={\n\n          <MessageIcon />\n\n        }\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n\n      />\n    </List>\n  );\n}\n\nexport { NestedList }\n\n  ;","import { Layout } from 'react-admin';\nimport MyAppBar from './MyAppbar'\nimport  {NestedList} from './myMenu';\n\n\nconst MyLayout = props => <Layout\n    {...props}\n\n    menu={NestedList}\n    appBar={MyAppBar}\n/>;\n\nexport default MyLayout;","import React from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\nimport { dataProvider, getList } from '../components/authProvider'\nimport SendIcon from '@material-ui/icons/Send';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NotificationManager } from 'react-notifications';\nimport {\n  EditButton,\n  Button\n} from 'react-admin';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Title } from 'react-admin';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\n\n\n\n\nexport default class BookingView extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\n      selected: {},\n      filter: false,\n      serviceFilter: [],\n\n\n    }\n  }\n\n\n  getService = () => {\n    return dataProvider.getList('services', { 'pagination': { \"page\": 1, \"perPage\": 100000 } }).then(response => {\n\n      return response.data.map(c => { return { id: c.service, label: `${c.service}-${c.category}` } })\n    })\n  }\n\n  columns = [\n    {\n      name: 'name', header: 'Name', defaultWidth: 200, render: ({ value, data }) => {\n\n        if (data['client_ref']) {\n\n          return (<a href={'#clients/' + data['client_ref']} >{value}</a>)\n\n        }\n        else\n          return (<span >{value}</span>)\n\n      }\n    },\n    {\n      name: 'dogName', header: 'Dog', defaultWidth: 150, render: ({ value, data }) => {\n        if (data['dog_ref']) {\n          return (<a href={'#dogs/' + data['dog_ref']} >{value}</a>)\n        }\n        else\n          return (<span >{value}</span>)\n      }\n    }, {\n      name: 'status', header: 'Status', defaultWidth: 101, render: ({ value, data }) => {\n        if (value === 'confirmed') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'green' }} label='Confirmed' key={value} />\n          )\n        }\n        else if (value === 'modified') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'orange' }} label='Modified' key={value} />\n          )\n        }\n        else if (value === 'cancelled') {\n          return (\n            <Chip color='primary' style={{ backgroundColor: 'red' }} label='Cancelled' key={value} />\n          )\n        }\n      }\n    },\n    {\n      name: 'service', header: 'Service', defaultWidth: 250,\n      render: ({ value, data }) => {\n        return (<span >{value || ''} {data.category || ''}</span>)\n      },\n      filterEditor: SelectFilter,\n      filterEditorProps: {\n        multiple: true,\n        wrapMultiple: false,\n        dataSource: this.getService(),\n      }\n    },\n    {\n      name: 'date', header: 'Booking Date', defaultWidth: 138, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, cellProps: { dateFormat } }) => {\n        return moment(value).format('ddd DD/MM/YYYY')\n      },\n    },\n    {\n      name: 'end', header: 'Time', defaultWidth: 150, filterEditor: DateFilter, filterEditorProps: (props, { index }) => {\n\n        return ({\n          dateFormat: 'ddd DD/MM/YYYY',\n          placeholder: index === 1 ? 'Bookings date is before...' : 'Booking date is on...'\n        })\n      },\n      render: ({ value, data }) => {\n\n        return `${moment(data.start).format('hh:mm A')}-${moment(value).format('hh:mm A')}`\n      },\n    },\n    {\n      name: 'addOns', header: 'AddOns', defaultWidth: 180, render: ({ value }) => {\n        if (value.length !== 0) {\n\n          return (\n            <>\n              {value.map(item =>\n\n                <Chip color='secondary' label={item} key={item} />\n\n              )}\n            </>\n          )\n\n        }\n        else\n          return (<span></span>)\n      },\n      cellDOMProps: ({ data, value }) => {\n        if (value.length > 2) {\n          return {\n            onMouseEnter: () => {\n              NotificationManager.success(value.map(item => { return <>{item}<br /></> }), 'Extras', 5000, () => { alert(value.map(i => `${i}\\n`)) });\n            }\n          }\n        }\n      }\n    },\n    { name: 'code', header: 'Booking Code', defaultWidth: 110 },\n  ];\n\n  gridStyle = { minHeight: 550 };\n\n  defaultFilterValue = [\n\n    { name: 'date', operator: 'eq', type: 'date', value: '' },\n    { name: 'service', operator: 'inlist', type: 'select', value: null },\n    { name: 'code', operator: 'contains', type: 'string', value: '' },\n    { name: 'dogName', operator: 'contains', type: 'string', value: '' },\n    { name: 'name', operator: 'contains', type: 'string', value: '' },\n  ];\n\n\n\n\n\n\n\n\n\n\n  render() {\n    return (\n      <>\n        <Title title={this.props.title} />\n        <div>\n          <Button\n            label=\"Filters\"\n            onClick={() => this.setState({ filter: !this.state.filter })}>\n            <FilterListIcon />\n          </Button>\n          {Object.keys(this.state.selected).length === 1 && <EditButton\n            basePath='/bookings' label='Edit' record={Object.values(this.state.selected)[0]}\n          />}\n          {Object.keys(this.state.selected).length === 1 && <Button\n            label=\"Charge card\">\n            <MonetizationOnIcon />\n          </Button>}\n          {Object.keys(this.state.selected).length !== 0 && <Button\n            label=\"Message Owners\">\n            <SendIcon />\n          </Button>}\n        </div>\n        <ReactDataGrid\n          idProperty=\"id\"\n          columns={this.columns}\n          dataSource={this.props.rows}\n          style={this.gridStyle}\n          defaultFilterValue={this.defaultFilterValue}\n          onSelectionChange={select => this.setState({ selected: select.selected })}\n          enableFiltering={this.state.filter}\n          multiSelect\n          checkboxColumn\n        // pagination='local'\n        // dataSource={this.handleCallback}\n        />\n      </>\n    )\n  }\n}","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function DaycareToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 } }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='All Bookings'/>\n    </>\n  );\n}","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function BookingsToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter: { 'start': dateFormat(today, \"yyyy-mm-dd\") } }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n     setRows(response.data )\n\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Bookings Today'/>\n    </>\n  );\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function DaycareToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare','start': dateFormat(today, \"yyyy-mm-dd\")} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Daycare Today'/>\n    </>\n  );\n}\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function GroomingToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n    let today = new Date()\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist','start': dateFormat(today, \"yyyy-mm-dd\")} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n    \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Grooming Today'/>\n    </>\n  );\n}\n\n\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function GroomingToday() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'stylist'}}).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n    \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Grooming'/>\n    </>\n  );\n}\n\n","import React from 'react';\nimport BookingView from './BookingView'\nimport {dataProvider} from '../components/authProvider'\nimport moment from 'moment';\nwindow.moment = moment\nvar dateFormat = require(\"dateformat\");\nexport default function Daycare() {\n\n  const [rows, setRows] = React.useState([])\n\n  React.useEffect(()=>{\n\n\n    dataProvider.getList('bookings', { 'pagination': { \"page\": 1, \"perPage\": 1000000 }, filter:{'category':'daycare'} }).then(response => {\n      response.data.forEach(i => { i.date = i.start.substring(0, 10); })\n \n      setRows(response.data)\n    })\n  },[])\n\n  return (\n    <>\n    <BookingView rows={rows} title='Daycare Today'/>\n    </>\n  );\n}","import React from 'react';\nimport './ConversationSearch.css';\n\nexport default function ConversationSearch(props) {\n\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Client\"\n        onChange={event => props.searchFilterFunction(event.target.value)}\n        value={props.searchText}\n      />\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport shave from 'shave';\n\n\nimport './ConversationListItem.css';\n\n\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 20);\n  })\n\n\n  const { photo, name, text, unreadCount } = props.data;\n\n  return (\n    <div className=\"conversation-list-item\" onClick={() => {\n\n      props.onClick({ sid: props.data.sid, name: props.data.name })\n    }}>\n\n      <div className=\"conversation-info\">\n        <h1 className=\"conversation-title\">{name}\n        </h1>\n        <p className=\"conversation-snippet\">{text}\n        {unreadCount !== 0 && <text className=\"badge\">{unreadCount}</text>}\n        </p>\n\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useState, Fragment, useEffect } from 'react';\nimport {\n    Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport ConversationSearch from '../../views/messenger/ConversationSearch'\nimport { getList } from '../../components/authProvider'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: 500,\n        maxWidth: 300,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\n\n\nexport default function NewConvoCreate(props) {\n\n    const classes = useStyles();\n    const [allCust, setAllCust] = useState([])\n    const [allCustHolder, setAllCustHolder] = useState([])\n    const [total, setTotal] = useState('')\n    const [searchText, setSearchText] = useState('')\n\n    useEffect(async () => {\n\n        let all_clients = await getList('clients')\n        setTotal(all_clients.total)\n        setAllCust(all_clients.data)\n        setAllCustHolder(all_clients.data)\n\n\n    }, [])\n    const searchFilterFunction = (text) => {\n\n        const newData = allCustHolder.filter(item => {\n\n\n            let name\n            try {\n                name = item.name.toUpperCase()\n            }\n            catch { name = null }\n\n\n            const itemData = `${name}`;\n            const textData = text.toUpperCase();\n\n            return itemData.indexOf(textData) > -1;\n        });\n\n        setSearchText(text)\n        setAllCust(newData)\n        setTotal(newData.length)\n\n    };\n\n    const handleClick = (event) => {\n\n        let search = props.activeConvos.filter(i => i.text === event.phone)\n        if (search.length > 0) {\n\n            props.setActiveConvo({ sid: search[0].sid, name: search[0].name })\n            props.open(!props.visible)\n        }\n        else {\n\n            props.createNewConvo(event.phone, event.name)\n            props.open(!props.visible)\n        }\n\n\n    }\n\n\n\n    function renderRow(props) {\n        const { index, style } = props;\n\n        return (\n            <ListItem onClick={async () => handleClick(allCust[index])} button style={style} key={index} >\n                <ListItemText primary={allCust[index].name} />\n            </ListItem>\n        );\n    }\n\n    renderRow.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.object.isRequired,\n    };\n\n    return (\n        <Fragment>\n            <Dialog open={props.visible}>\n\n                <DialogTitle>Create new Conversation</DialogTitle>\n\n                <DialogContent>\n                    <div className={classes.root}>\n                        <ConversationSearch searchText={searchText} searchFilterFunction={searchFilterFunction} />\n                        <FixedSizeList height={400} width={300} itemSize={46} itemCount={total} >\n                            {renderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={() => props.open(!props.visible)}\n                    >\n                        <IconCancel />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport { dataProvider, getTWToken } from '../../../components/authProvider'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport {\n  Button\n} from 'react-admin';\nimport NewConvoCreate from '../../../components/newCovoCreate'\nimport './ConversationList.css';\nimport { NotificationManager } from 'react-notifications';\nimport NotificationContext from '../../../components/Context'\n\n\nconst Conversations = require('@twilio/conversations');\n\n\n\nexport default function ConversationList(props) {\n\n\n  const { notifications, setNotifications, removeAllMessNotif } = useContext(NotificationContext)\n  const [conversations, setConversations] = useState([]);\n  const [conversationHolder, setConverrsationHolder] = useState([]);\n  const [searchText, setSearchText] = useState(null)\n  const [newConvoVisible, setNewConvoVisible] = useState(false)\n\n\n  useEffect(() => {\n    getConversations()\n  }, [])\n\n  const notify = (event, conversation) => {\n    let convoItem = conversation.filter(i => i.text === event.conversation.channelState.uniqueName.split(':')[1])[0]\n    NotificationManager.info(convoItem.name, 'New message', 3000);\n    setNotifications({ message: `Message from ${convoItem.name}`, type: 'message', convoItem:convoItem })\n\n  }\n\n\n  const refreshConvoList = useCallback(async (client, event) => {\n\n\n\n    if (client) {\n\n      let items = []\n      async function processChannels(paginator) {\n        if (paginator.hasNextPage) {\n\n          const nextPaginator = await paginator.nextPage();\n          items = items.concat(nextPaginator.items)\n          await processChannels(nextPaginator);\n        }\n      }\n      let clientconvo = await client.getSubscribedConversations()\n      items = clientconvo.items\n      await processChannels(clientconvo);\n      let newConversations = await Promise.all(items.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n      event && notify(event, newConversations)\n    }\n\n  }, [conversations])\n\n  const refreshToken = async (client) => {\n\n\n    console.log('token about to expire')\n    let token = await getTWToken()\n    client.updateToken(token);\n\n    console.log('client\\'s token updated')\n  }\n\n  async function getClient(token, callback) {\n    let items = []\n    async function processChannels(paginator) {\n\n\n      if (paginator.hasNextPage) {\n\n        const nextPaginator = await paginator.nextPage();\n        items = items.concat(nextPaginator.items)\n        await processChannels(nextPaginator);\n      }\n    }\n\n    let client = await Conversations.Client.create(token);\n\n\n    client.addListener('tokenAboutToExpire', () => refreshToken(client));\n\n    client.addListener('connectionStateChanged', async (event) => {\n      if (event === 'connected') {\n        let clientconvo = await client.getSubscribedConversations()\n        items = clientconvo.items\n        await processChannels(clientconvo);\n        props.setClient(client)\n\n        if (client._eventsCount === 2) {\n          client.addListener('messageAdded', (event) => refreshConvoList(client, event))\n          client.addListener('conversationRemoved', () => refreshConvoList(client))\n          client.addListener('conversationAdded', (event) => refreshConvoList(client, event))\n        }\n        callback(items)\n      }\n    })\n  }\n\n  const searchFilterFunction = (text) => {\n\n    const newData = conversationHolder.filter(item => {\n\n\n      let name\n      try {\n        name = item.name.toUpperCase()\n      }\n      catch { name = null }\n      let phone\n      try {\n        phone = item.phone\n      }\n      catch { phone = null }\n\n      const itemData = `${name} ${phone}`;\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n\n    setSearchText(text)\n    setConversations(newData)\n\n  };\n\n\n  const createConvo = async (number, name) => {\n\n    let twiConvo = await props.client.createConversation({ \"friendlyName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number, \"uniqueName\": \"pBjefCCX5JXw6QbYFu2GR7rmouw1:\" + number })\n    await twiConvo.addNonChatParticipant(\"+61488844176\", number)\n\n    await twiConvo.add(\"pBjefCCX5JXw6QbYFu2GR7rmouw1\")\n    //refreshConvoList()// set this as event listener\n    props.setactiveConvo({ sid: twiConvo.sid, name: name })\n\n\n  }\n\n\n  const getConversations = async () => {\n\n    let token = await getTWToken()\n\n    getClient(token, async convos => {\n\n\n      let newConversations = await Promise.all(convos.map(async result => {\n        let client = await dataProvider.getList('clients', { filter: { 'phone': result.channelState.friendlyName.split(':')[1] }, pagination: { page: 1, perPage: 1 } })\n\n        return {\n\n          name: client.data[0] ? client.data[0].name : result.channelState.friendlyName.split(':')[1],\n          text: client.data[0] ? client.data[0].phone : result.channelState.friendlyName.split(':')[1],\n          dateUpdated: result.lastMessage ? result.lastMessage.dateCreated : result.dateUpdated,\n          sid: result.sid,\n          unreadCount: result.lastMessage ? result.lastMessage.index - result.channelState.lastReadMessageIndex : 0\n        };\n      }));\n      newConversations.sort((a, b) => { return new Date(b.dateUpdated) - new Date(a.dateUpdated) })\n      setConversations([...conversations, ...newConversations])\n      setConverrsationHolder(newConversations)\n\n    })\n\n\n\n  }\n\n  const setactiveConvo = (obj) => {\n    props.setactiveConvo(obj)\n    removeAllMessNotif(obj)\n    conversations[conversations.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    conversationHolder[conversationHolder.findIndex(i => i.sid === obj.sid)].unreadCount = 0\n    setConversations(conversations)\n    setConverrsationHolder(conversationHolder)\n  }\n\n  return (\n    <div className=\"conversation-list\">\n      <Toolbar\n        title=\"Messenger\"\n        leftItems={[\n          <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n        ]}\n        rightItems={[\n          <Button\n            onClick={() => setNewConvoVisible(!newConvoVisible)}\n          >\n            <AddBoxIcon />\n          </Button>,\n          <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n        ]}\n      />\n      <ConversationSearch\n        searchFilterFunction={searchFilterFunction}\n        searchText={searchText}\n      />\n      {\n        conversations.map(conversation =>\n          <ConversationListItem\n            key={conversation.sid}\n            data={conversation}\n            onClick={setactiveConvo}\n          />\n        )\n      }\n      <NewConvoCreate visible={newConvoVisible} open={setNewConvoVisible} activeConvos={conversations} setActiveConvo={props.setactiveConvo} createNewConvo={createConvo} />\n    </div>\n  );\n}","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageUploader from 'react-images-upload';\nimport { useState, Fragment } from 'react';\nimport {\n  Button,\n} from 'react-admin';\nimport IconCancel from '@material-ui/icons/Cancel';\n\n\n\nconst Imageuploader = (props) => {\n\n\n    return (\n        <Fragment>\n            <Dialog open={props.open}>\n\n                <DialogTitle>Upload Pictures</DialogTitle>\n\n                <DialogContent>\n                    <ImageUploader\n                        withIcon={true}\n                        buttonText='Choose images'\n                        onChange={props.onDrop}\n                        imgExtension={['.jpg', '.jpeg', '.png']}\n                        withPreview\n                    />\n\n                </DialogContent>\n\n                <DialogActions>\n\n                    <Button\n                        label=\"Cancel\"\n                        onClick={props.onCancel}\n                    >\n                        <IconCancel />\n                    </Button>\n                    <Button\n                        onClick={()=>{props.onPicSend();props.onCancel()}}\n                        label=\"Send\"\n                    >\n                        <SendIcon />\n                    </Button>\n                </DialogActions>\n\n            </Dialog>\n        </Fragment>\n\n    )\n}\n\n\nexport default Imageuploader","import React, { useState } from 'react';\nimport SendIcon from '@material-ui/icons/Send';\nimport ImageIcon from '@material-ui/icons/Image';\nimport {\n  Button\n} from 'react-admin';\nimport './Compose.css';\nimport Imageuploader from \"../../../components/imageUploader\"\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport default function Compose(props) {\n  const [dialog, setDialog] = useState(false)\n\n\n\n  return (\n    <div className=\"compose\" >\n\n      <TextareaAutosize\n       \n        type=\"text\"\n        className=\"compose-input\"\n        placeholder=\"Type a message\"\n        value={props.value}\n        onChange={event => { props.onChange(event.target.value) }}\n        spellCheck={true}\n        minRows='2'\n      />\n      {props.value ? <Button\n        onClick={() => props.onSend()}\n      >\n        <SendIcon />\n      </Button> : <Button\n        onClick={() => setDialog(!dialog)}\n      >\n        <ImageIcon />\n      </Button>}\n     <Imageuploader open={dialog} onCancel={() => setDialog(!dialog)} onDrop={props.onDrop} onPicSend={props.onPicSend}/>\n      {\n        props.rightItems\n      }\n    </div>\n  );\n}","import React from 'react';\nimport moment from 'moment';\nimport Lightbox from 'react-lightbox-component';\nimport 'react-lightbox-component/build/css/index.css';\nimport './Message.css';\n\nexport default function Message(props) {\n  const {\n    data,\n    isMine,\n    startsSequence,\n    endsSequence,\n    showTimestamp\n  } = props;\n  var searchPattern = new RegExp('^' + 'https://bit.ly/');\n\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n  return (\n    <div className={[\n      'message',\n      `${isMine ? 'mine' : ''}`,\n      `${startsSequence ? 'start' : ''}`,\n      `${endsSequence ? 'end' : ''}`\n    ].join(' ')}>\n      {\n        showTimestamp &&\n        <div className=\"timestamp\">\n          {friendlyTimestamp}\n        </div>\n      }\n\n      <div className=\"bubble-container\">\n        <div className=\"bubble\" title={friendlyTimestamp}>\n          {searchPattern.test(data.message) ? <Lightbox thumbnailWidth='150px'\n            thumbnailHeight='150px' images={\n              [\n                {\n                  src: data.message\n                }\n              ]\n            } /> : data.message}\n        </div>\n      </div>\n    </div>\n  );\n}","\nvar axios = require('axios');\n\n\n\n\n\n\n\n\n\nexport const SendPicToServ = async (token, file) => {\n\n\n\n    function readFile(file) {\n        return new Promise((resolve, reject) => {\n            let fr = new FileReader();\n            fr.onload = x => resolve(fr.result);\n            fr.onerrror = reject;\n            fr.readAsDataURL(file)\n        })\n    }\n\n    let base64 = await readFile(file)\n\n    var data = JSON.stringify({\n        \"token\": token,\n        \"image\": base64.replace(\"data:\", \"\").replace(/^.*;base64,/, \"\")\n    });\n\n    var config = {\n        method: 'post',\n        url: 'https://australia-southeast1-admin-a4a00.cloudfunctions.net/adminPicUploader',\n        headers: {\n            'Authorization': 'Basic ODU2NzZCNUEtOEE5MS00NzYwLUE4MTctODQ2MUIyQ0I3MTI0OjZCQ0FGQUY5LUVFQ0YtNDRBNi04QTBBLTg3RjFDQUYxQTQxNg==',\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n\n    return axios(config)\n        .then(function (response) {\n            return response.data\n        })\n        .catch(function (error) {\n            return error\n        });\n\n\n}\n\n\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport { SendPicToServ } from '../../../components/TwilioHelper'\nimport { getToken } from '../../../components/authProvider'\nimport './MessageList.css';\n\n\nconst MY_USER_ID = 'pBjefCCX5JXw6QbYFu2GR7rmouw1';\n\nexport default function MessageList(props) {\n\n  const [messages, setMessages] = useState([])\n  const [newMessage, setNewMessage] = useState(null)\n  const [convo, setConvo] = useState(null)\n  const messagesEndRef = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n\n\n\n  const onPicSend = async () => {\n    let token = await getToken()\n\n    for (let file of selectedFile) {\n      let url = await SendPicToServ(token, file)\n\n      await sendMessage(url)\n    }\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages]);\n  const getMessages = useCallback( async function  () {\n    var tempMessages = []\n    if (props.activeConvo) {\n\n\n       let convo = await props.client.getConversationBySid(props.activeConvo.sid)\n       convo._events.messageAdded.length === 0 && convo.addListener('messageAdded', getMessages)\n      \n       convo.channelState.lastMessage && convo.advanceLastReadMessageIndex(convo.channelState.lastMessage.index)\n       setConvo(convo)\n      let messages = await convo.getMessages()\n      tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n\n    }\n\n    setMessages(tempMessages)\n  },[props.activeConvo, props.client])\n\n  useEffect(() => {\n\n    getMessages();\n    return ()=>{\n      if (convo){\n        convo.removeListener('messageAdded', getMessages)\n        \n      }\n    }\n  }, [convo, getMessages, props.activeConvo, props.client])\n\n\n  \n\n  const renderMessages = () => {\n    let i = 0;\n    let messageCount = messages.length;\n    let tempMessages = [];\n\n    while (i < messageCount) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      tempMessages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return tempMessages;\n  }\n\n  const sendMessage = async (img) => {\n    await convo.sendMessage(img ? img : newMessage)\n    let messages = await convo.getMessages()\n    let tempMessages = messages.items.map(i => { return { id: i.state.index, author: i.state.author, message: i.state.body, timestamp: i.state.timestamp } })\n    setNewMessage(\"\")\n    setMessages(tempMessages)\n  }\n\n\n\n\n  return (\n    <div className=\"message-list\">\n      <Toolbar\n        title={props.activeConvo ? props.activeConvo.name : 'Select a conversation'}\n        rightItems={[\n          <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n          <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n          <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n        ]}\n      />\n\n      <div className=\"message-list-container\">{renderMessages()}\n        <div ref={messagesEndRef} />\n      </div>\n\n\n      <Compose\n        value={newMessage}\n        onChange={setNewMessage}\n        onSend={sendMessage}\n        onPicSend={onPicSend}\n        onDrop={setSelectedFile}\n        rightItems={[\n\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]} />\n    </div>\n  );\n}","import React , { useState } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\n\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n  \n  const [activeConvo, setactiveConvo] = useState(null);\n  const [client, setClient]= useState(null)\n  \n  return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList setactiveConvo={setactiveConvo} setClient={setClient} client={client} />\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList activeConvo={activeConvo} client={client} />\n        </div>\n      </div>\n    );\n}","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\nimport bookingstoday from '../views/bookingToday'\nimport todayDaycare from '../views/todayDaycare'\nimport todayGrooming from '../views/todayGrooming'\nimport grooming from '../views/grooming'\nimport daycare from '../views/daycare'\nimport messenger from '../views/messenger'\nimport bookings from '../views/allbookings'\n\n\n\nexport default\n\n[\n\n    <Route   exact path=\"/bookingstoday\" component={bookingstoday}   />,\n    <Route   exact path=\"/todaydaycare\" component={todayDaycare}   />,\n    <Route   exact path=\"/todaygrooming\" component={todayGrooming}   />,\n    <Route   exact path=\"/grooming\" component={grooming}  />,\n    <Route   exact path=\"/daycare\" component={daycare}  />,\n    <Route   exact path=\"/bookings\" component={bookings}  />,\n    <Route   exact path=\"/messenger\" component={messenger}  />,\n\n\n\n];","import React from 'react';\nimport Messenger from './messenger/Messenger';\nimport Card from '@material-ui/core/Card';\n\nimport { Title } from 'react-admin';\n\nexport default function messenger() {\n\n\n    return (\n        <Card>\n            <Title title=\"Messenger\" />\n\n\n\n                <Messenger />\n\n        </Card>\n\n\n\n    );\n}","/* eslint-disable import/no-anonymous-default-export */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\n\nimport {\n    adminReducer,\n    adminSaga,\n    USER_LOGOUT,\n} from 'react-admin';\n\nexport default ({\n    authProvider,\n    dataProvider,\n    history,\n}) => {\n    const reducer = combineReducers({\n        admin: adminReducer,\n        router: connectRouter(history),\n     \n\n        // add your own reducers here\n    });\n    const resettableAppReducer = (state, action) =>\n        reducer(action.type !== USER_LOGOUT ? state : undefined, action);\n\n    const saga = function* rootSaga() {\n        yield all(\n            [\n                adminSaga(dataProvider, authProvider),\n                // add your own sagas here\n            ].map(fork)\n        );\n    };\n    const sagaMiddleware = createSagaMiddleware();\n\n    const composeEnhancers =\n        (process.env.NODE_ENV === 'development' &&\n            typeof window !== 'undefined' &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                trace: true,\n                traceLimit: 25,\n            })) ||\n        compose;\n  \n    const store = createStore(\n        resettableAppReducer,\n        { /* set your initial state here */ },\n        composeEnhancers(\n            applyMiddleware(\n                sagaMiddleware,\n                routerMiddleware(history),\n                // add your own middlewares here\n            ),\n            // add your own enhancers here\n        ),        \n    );\n    sagaMiddleware.run(saga);\n    return store;\n};","import * as React from \"react\";\nimport {\n    List,\n\n    Datagrid,\n    TextField,\n\n    EmailField,\n\n    NumberField\n  \n} from 'react-admin';\nexport const PaymentList = props => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"description\" />\n            <TextField source=\"name\" />\n            <NumberField source=\"amount\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"system\" />\n            <TextField source=\"stripe_id\"  />\n            <TextField source=\"status\" />\n            <TextField source=\"bookings\" />\n        </Datagrid>\n    </List>\n)","import * as React from \"react\";\nimport { Admin, Resource, ListGuesser, Layout, EditGuesser } from 'react-admin';\nimport { Provider } from 'react-redux';\nimport { createHashHistory } from 'history';\nimport { UserList, UserCreate, UserEdit } from './views/clients';\nimport { DogList, DogEdit, DogCreate } from './views/dogs';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Dashboard from './views/Dashboard';\nimport { authProvider, dataProvider, getFCMToken, onMessageReceved } from './components/authProvider';\nimport Utils from '@date-io/moment'\nimport GroupIcon from '@material-ui/icons/Group';\nimport MyLayout from './components/MyLayout';\nimport { BookingList } from './views/allbookings'\nimport muCustomRoutes from './components/muCustomRoutes'\nimport createAdminStore from './components/createAdminStore';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport { PaymentList } from './views/payments'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { ContextProvider } from './components/Context'\n\n\n\nconst history = createHashHistory();\n\n\nconst App = () => {\n\n\n  const [isTokenFound, setTokenFound] = React.useState(false);\n  getFCMToken(setTokenFound);\n\n  onMessageReceved(payload => {\n\n    NotificationManager.success(payload.notification.body, payload.notification.title);\n  })\n\n\n  return (\n\n    <Provider\n      store={createAdminStore({\n        authProvider,\n        dataProvider,\n        history,\n      })}\n    >\n      <ContextProvider>\n        <MuiPickersUtilsProvider utils={Utils}>\n          <NotificationContainer />\n          <Admin disableTelemetry layout={MyLayout} history={history} customRoutes={muCustomRoutes} dashboard={Dashboard} dataProvider={dataProvider} authProvider={authProvider}>\n\n            <Resource name=\"clients\" list={UserList} icon={PetsIcon} create={UserCreate} to='/clients' edit={UserEdit} options={{ \"label\": \"Clients\" }} />\n            <Resource name=\"dogs\" list={DogList} create={DogCreate} edit={DogEdit} />\n            <Resource name=\"bookings\"  edit={EditGuesser} />\n            <Resource name=\"services\" list={ListGuesser} />\n            <Resource name=\"payments\" list={PaymentList} />\n\n          </Admin>\n        </MuiPickersUtilsProvider>\n      </ContextProvider>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}